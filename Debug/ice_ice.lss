
ice_ice.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000005d2  00000666  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010a  0080010a  00000670  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000670  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000006dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b43  00000000  00000000  0000074c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000853  00000000  00000000  0000128f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004f8  00000000  00000000  00001ae2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e8  00000000  00000000  00001fdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004af  00000000  00000000  000020c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002dd  00000000  00000000  00002573  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002850  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 ed       	ldi	r30, 0xD2	; 210
  84:	f5 e0       	ldi	r31, 0x05	; 5
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 30       	cpi	r26, 0x0A	; 10
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa e0       	ldi	r26, 0x0A	; 10
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a4 31       	cpi	r26, 0x14	; 20
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
	uint8_t OLED_DATA[512];
	uint8_t ADC[1024];
	uint8_t SRAM[2048];
} amap;

int main(void){
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
	MCUCR |= (1<<SRE);
  b2:	85 b7       	in	r24, 0x35	; 53
  b4:	80 68       	ori	r24, 0x80	; 128
  b6:	85 bf       	out	0x35, r24	; 53
	
	//DDRC = 0xFF;
	//PORTC = 0x00;
	
	
	SFIOR &= ~(1<<XMM0);
  b8:	80 b7       	in	r24, 0x30	; 48
  ba:	87 7f       	andi	r24, 0xF7	; 247
  bc:	80 bf       	out	0x30, r24	; 48
	SFIOR &= ~(1<<XMM1);
  be:	80 b7       	in	r24, 0x30	; 48
  c0:	8f 7e       	andi	r24, 0xEF	; 239
  c2:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1<<XMM2);
  c4:	80 b7       	in	r24, 0x30	; 48
  c6:	80 62       	ori	r24, 0x20	; 32
  c8:	80 bf       	out	0x30, r24	; 48


	USART_Init ( MYUBRR );
  ca:	8f e1       	ldi	r24, 0x1F	; 31
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0e 94 89 00 	call	0x112	; 0x112 <USART_Init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d2:	2f ef       	ldi	r18, 0xFF	; 255
  d4:	8f e7       	ldi	r24, 0x7F	; 127
  d6:	97 e0       	ldi	r25, 0x07	; 7
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	80 40       	sbci	r24, 0x00	; 0
  dc:	90 40       	sbci	r25, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <main+0x2a>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x34>
  e2:	00 00       	nop
  e4:	c0 e0       	ldi	r28, 0x00	; 0
  e6:	d0 e1       	ldi	r29, 0x10	; 16
	//SRAM_test();
	
	_delay_ms(500);
	volatile char *ext_adc = (char *) 0x1000;
	for (uint16_t i = 0; i < 0x400; i++) {
		uint8_t some_value = rand();
  e8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <rand>
		ext_adc[i] = some_value;
  ec:	89 93       	st	Y+, r24
	USART_Init ( MYUBRR );
	//SRAM_test();
	
	_delay_ms(500);
	volatile char *ext_adc = (char *) 0x1000;
	for (uint16_t i = 0; i < 0x400; i++) {
  ee:	c1 15       	cp	r28, r1
  f0:	24 e1       	ldi	r18, 0x14	; 20
  f2:	d2 07       	cpc	r29, r18
  f4:	c9 f7       	brne	.-14     	; 0xe8 <main+0x3a>
		
	printf("%d",1);
	printf("%d", USART_Receive());
	*/
	return 0;
}
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	df 91       	pop	r29
  fc:	cf 91       	pop	r28
  fe:	08 95       	ret

00000100 <USART_Transmit>:
	UCSR1C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
	clear_bit(UCSR0C, 0); // Clock polarity
	fdevopen(USART_Transmit, USART_Receive);
}
void USART_Transmit(unsigned char data){
	while (!(UCSR0A & (1<<UDRE0)));
 100:	5d 9b       	sbis	0x0b, 5	; 11
 102:	fe cf       	rjmp	.-4      	; 0x100 <USART_Transmit>
	
	UDR0 = data;
 104:	8c b9       	out	0x0c, r24	; 12
 106:	08 95       	ret

00000108 <USART_Receive>:
}

unsigned int USART_Receive(void)
{
	
	while (!(UCSR0A & (1<<RXC0)));
 108:	5f 9b       	sbis	0x0b, 7	; 11
 10a:	fe cf       	rjmp	.-4      	; 0x108 <USART_Receive>
	

	return UDR0;
 10c:	8c b1       	in	r24, 0x0c	; 12
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	08 95       	ret

00000112 <USART_Init>:
#include <stdio.h>
#define clear_bit( reg, bit ) (reg &= ~(1 << bit))

void USART_Init (unsigned int ubrr ){
	
	UBRR0H = (unsigned char)(ubrr>>8);
 112:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 114:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 116:	88 e1       	ldi	r24, 0x18	; 24
 118:	8a b9       	out	0x0a, r24	; 10
	
	UCSR1C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 11a:	8e e8       	ldi	r24, 0x8E	; 142
 11c:	8c bf       	out	0x3c, r24	; 60
	clear_bit(UCSR0C, 0); // Clock polarity
 11e:	80 b5       	in	r24, 0x20	; 32
 120:	8e 7f       	andi	r24, 0xFE	; 254
 122:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
 124:	64 e8       	ldi	r22, 0x84	; 132
 126:	70 e0       	ldi	r23, 0x00	; 0
 128:	80 e8       	ldi	r24, 0x80	; 128
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <fdevopen>
 130:	08 95       	ret

00000132 <do_rand>:
 132:	8f 92       	push	r8
 134:	9f 92       	push	r9
 136:	af 92       	push	r10
 138:	bf 92       	push	r11
 13a:	cf 92       	push	r12
 13c:	df 92       	push	r13
 13e:	ef 92       	push	r14
 140:	ff 92       	push	r15
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	ec 01       	movw	r28, r24
 148:	68 81       	ld	r22, Y
 14a:	79 81       	ldd	r23, Y+1	; 0x01
 14c:	8a 81       	ldd	r24, Y+2	; 0x02
 14e:	9b 81       	ldd	r25, Y+3	; 0x03
 150:	61 15       	cp	r22, r1
 152:	71 05       	cpc	r23, r1
 154:	81 05       	cpc	r24, r1
 156:	91 05       	cpc	r25, r1
 158:	21 f4       	brne	.+8      	; 0x162 <do_rand+0x30>
 15a:	64 e2       	ldi	r22, 0x24	; 36
 15c:	79 ed       	ldi	r23, 0xD9	; 217
 15e:	8b e5       	ldi	r24, 0x5B	; 91
 160:	97 e0       	ldi	r25, 0x07	; 7
 162:	2d e1       	ldi	r18, 0x1D	; 29
 164:	33 ef       	ldi	r19, 0xF3	; 243
 166:	41 e0       	ldi	r20, 0x01	; 1
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	0e 94 84 02 	call	0x508	; 0x508 <__divmodsi4>
 16e:	49 01       	movw	r8, r18
 170:	5a 01       	movw	r10, r20
 172:	9b 01       	movw	r18, r22
 174:	ac 01       	movw	r20, r24
 176:	a7 ea       	ldi	r26, 0xA7	; 167
 178:	b1 e4       	ldi	r27, 0x41	; 65
 17a:	0e 94 a3 02 	call	0x546	; 0x546 <__muluhisi3>
 17e:	6b 01       	movw	r12, r22
 180:	7c 01       	movw	r14, r24
 182:	ac ee       	ldi	r26, 0xEC	; 236
 184:	b4 ef       	ldi	r27, 0xF4	; 244
 186:	a5 01       	movw	r20, r10
 188:	94 01       	movw	r18, r8
 18a:	0e 94 b1 02 	call	0x562	; 0x562 <__mulohisi3>
 18e:	dc 01       	movw	r26, r24
 190:	cb 01       	movw	r24, r22
 192:	8c 0d       	add	r24, r12
 194:	9d 1d       	adc	r25, r13
 196:	ae 1d       	adc	r26, r14
 198:	bf 1d       	adc	r27, r15
 19a:	b7 ff       	sbrs	r27, 7
 19c:	03 c0       	rjmp	.+6      	; 0x1a4 <do_rand+0x72>
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	a1 09       	sbc	r26, r1
 1a2:	b0 48       	sbci	r27, 0x80	; 128
 1a4:	88 83       	st	Y, r24
 1a6:	99 83       	std	Y+1, r25	; 0x01
 1a8:	aa 83       	std	Y+2, r26	; 0x02
 1aa:	bb 83       	std	Y+3, r27	; 0x03
 1ac:	9f 77       	andi	r25, 0x7F	; 127
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	ff 90       	pop	r15
 1b4:	ef 90       	pop	r14
 1b6:	df 90       	pop	r13
 1b8:	cf 90       	pop	r12
 1ba:	bf 90       	pop	r11
 1bc:	af 90       	pop	r10
 1be:	9f 90       	pop	r9
 1c0:	8f 90       	pop	r8
 1c2:	08 95       	ret

000001c4 <rand_r>:
 1c4:	0e 94 99 00 	call	0x132	; 0x132 <do_rand>
 1c8:	08 95       	ret

000001ca <rand>:
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	0e 94 99 00 	call	0x132	; 0x132 <do_rand>
 1d2:	08 95       	ret

000001d4 <srand>:
 1d4:	a0 e0       	ldi	r26, 0x00	; 0
 1d6:	b0 e0       	ldi	r27, 0x00	; 0
 1d8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 1dc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 1e0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 1e4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 1e8:	08 95       	ret

000001ea <fdevopen>:
 1ea:	0f 93       	push	r16
 1ec:	1f 93       	push	r17
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	00 97       	sbiw	r24, 0x00	; 0
 1f4:	31 f4       	brne	.+12     	; 0x202 <fdevopen+0x18>
 1f6:	61 15       	cp	r22, r1
 1f8:	71 05       	cpc	r23, r1
 1fa:	19 f4       	brne	.+6      	; 0x202 <fdevopen+0x18>
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	3a c0       	rjmp	.+116    	; 0x276 <fdevopen+0x8c>
 202:	8b 01       	movw	r16, r22
 204:	ec 01       	movw	r28, r24
 206:	6e e0       	ldi	r22, 0x0E	; 14
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	0e 94 40 01 	call	0x280	; 0x280 <calloc>
 212:	fc 01       	movw	r30, r24
 214:	89 2b       	or	r24, r25
 216:	91 f3       	breq	.-28     	; 0x1fc <fdevopen+0x12>
 218:	80 e8       	ldi	r24, 0x80	; 128
 21a:	83 83       	std	Z+3, r24	; 0x03
 21c:	01 15       	cp	r16, r1
 21e:	11 05       	cpc	r17, r1
 220:	71 f0       	breq	.+28     	; 0x23e <fdevopen+0x54>
 222:	13 87       	std	Z+11, r17	; 0x0b
 224:	02 87       	std	Z+10, r16	; 0x0a
 226:	81 e8       	ldi	r24, 0x81	; 129
 228:	83 83       	std	Z+3, r24	; 0x03
 22a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 22e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 232:	89 2b       	or	r24, r25
 234:	21 f4       	brne	.+8      	; 0x23e <fdevopen+0x54>
 236:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__data_end+0x1>
 23a:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__data_end>
 23e:	20 97       	sbiw	r28, 0x00	; 0
 240:	c9 f0       	breq	.+50     	; 0x274 <fdevopen+0x8a>
 242:	d1 87       	std	Z+9, r29	; 0x09
 244:	c0 87       	std	Z+8, r28	; 0x08
 246:	83 81       	ldd	r24, Z+3	; 0x03
 248:	82 60       	ori	r24, 0x02	; 2
 24a:	83 83       	std	Z+3, r24	; 0x03
 24c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end+0x2>
 250:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x3>
 254:	89 2b       	or	r24, r25
 256:	71 f4       	brne	.+28     	; 0x274 <fdevopen+0x8a>
 258:	f0 93 0d 01 	sts	0x010D, r31	; 0x80010d <__data_end+0x3>
 25c:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <__data_end+0x2>
 260:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end+0x4>
 264:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x5>
 268:	89 2b       	or	r24, r25
 26a:	21 f4       	brne	.+8      	; 0x274 <fdevopen+0x8a>
 26c:	f0 93 0f 01 	sts	0x010F, r31	; 0x80010f <__data_end+0x5>
 270:	e0 93 0e 01 	sts	0x010E, r30	; 0x80010e <__data_end+0x4>
 274:	cf 01       	movw	r24, r30
 276:	df 91       	pop	r29
 278:	cf 91       	pop	r28
 27a:	1f 91       	pop	r17
 27c:	0f 91       	pop	r16
 27e:	08 95       	ret

00000280 <calloc>:
 280:	0f 93       	push	r16
 282:	1f 93       	push	r17
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	86 9f       	mul	r24, r22
 28a:	80 01       	movw	r16, r0
 28c:	87 9f       	mul	r24, r23
 28e:	10 0d       	add	r17, r0
 290:	96 9f       	mul	r25, r22
 292:	10 0d       	add	r17, r0
 294:	11 24       	eor	r1, r1
 296:	c8 01       	movw	r24, r16
 298:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <malloc>
 29c:	ec 01       	movw	r28, r24
 29e:	00 97       	sbiw	r24, 0x00	; 0
 2a0:	29 f0       	breq	.+10     	; 0x2ac <calloc+0x2c>
 2a2:	a8 01       	movw	r20, r16
 2a4:	60 e0       	ldi	r22, 0x00	; 0
 2a6:	70 e0       	ldi	r23, 0x00	; 0
 2a8:	0e 94 7d 02 	call	0x4fa	; 0x4fa <memset>
 2ac:	ce 01       	movw	r24, r28
 2ae:	df 91       	pop	r29
 2b0:	cf 91       	pop	r28
 2b2:	1f 91       	pop	r17
 2b4:	0f 91       	pop	r16
 2b6:	08 95       	ret

000002b8 <malloc>:
 2b8:	0f 93       	push	r16
 2ba:	1f 93       	push	r17
 2bc:	cf 93       	push	r28
 2be:	df 93       	push	r29
 2c0:	82 30       	cpi	r24, 0x02	; 2
 2c2:	91 05       	cpc	r25, r1
 2c4:	10 f4       	brcc	.+4      	; 0x2ca <malloc+0x12>
 2c6:	82 e0       	ldi	r24, 0x02	; 2
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__flp>
 2ce:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__flp+0x1>
 2d2:	20 e0       	ldi	r18, 0x00	; 0
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	a0 e0       	ldi	r26, 0x00	; 0
 2d8:	b0 e0       	ldi	r27, 0x00	; 0
 2da:	30 97       	sbiw	r30, 0x00	; 0
 2dc:	19 f1       	breq	.+70     	; 0x324 <malloc+0x6c>
 2de:	40 81       	ld	r20, Z
 2e0:	51 81       	ldd	r21, Z+1	; 0x01
 2e2:	02 81       	ldd	r16, Z+2	; 0x02
 2e4:	13 81       	ldd	r17, Z+3	; 0x03
 2e6:	48 17       	cp	r20, r24
 2e8:	59 07       	cpc	r21, r25
 2ea:	c8 f0       	brcs	.+50     	; 0x31e <malloc+0x66>
 2ec:	84 17       	cp	r24, r20
 2ee:	95 07       	cpc	r25, r21
 2f0:	69 f4       	brne	.+26     	; 0x30c <malloc+0x54>
 2f2:	10 97       	sbiw	r26, 0x00	; 0
 2f4:	31 f0       	breq	.+12     	; 0x302 <malloc+0x4a>
 2f6:	12 96       	adiw	r26, 0x02	; 2
 2f8:	0c 93       	st	X, r16
 2fa:	12 97       	sbiw	r26, 0x02	; 2
 2fc:	13 96       	adiw	r26, 0x03	; 3
 2fe:	1c 93       	st	X, r17
 300:	27 c0       	rjmp	.+78     	; 0x350 <malloc+0x98>
 302:	00 93 12 01 	sts	0x0112, r16	; 0x800112 <__flp>
 306:	10 93 13 01 	sts	0x0113, r17	; 0x800113 <__flp+0x1>
 30a:	22 c0       	rjmp	.+68     	; 0x350 <malloc+0x98>
 30c:	21 15       	cp	r18, r1
 30e:	31 05       	cpc	r19, r1
 310:	19 f0       	breq	.+6      	; 0x318 <malloc+0x60>
 312:	42 17       	cp	r20, r18
 314:	53 07       	cpc	r21, r19
 316:	18 f4       	brcc	.+6      	; 0x31e <malloc+0x66>
 318:	9a 01       	movw	r18, r20
 31a:	bd 01       	movw	r22, r26
 31c:	ef 01       	movw	r28, r30
 31e:	df 01       	movw	r26, r30
 320:	f8 01       	movw	r30, r16
 322:	db cf       	rjmp	.-74     	; 0x2da <malloc+0x22>
 324:	21 15       	cp	r18, r1
 326:	31 05       	cpc	r19, r1
 328:	f9 f0       	breq	.+62     	; 0x368 <malloc+0xb0>
 32a:	28 1b       	sub	r18, r24
 32c:	39 0b       	sbc	r19, r25
 32e:	24 30       	cpi	r18, 0x04	; 4
 330:	31 05       	cpc	r19, r1
 332:	80 f4       	brcc	.+32     	; 0x354 <malloc+0x9c>
 334:	8a 81       	ldd	r24, Y+2	; 0x02
 336:	9b 81       	ldd	r25, Y+3	; 0x03
 338:	61 15       	cp	r22, r1
 33a:	71 05       	cpc	r23, r1
 33c:	21 f0       	breq	.+8      	; 0x346 <malloc+0x8e>
 33e:	fb 01       	movw	r30, r22
 340:	93 83       	std	Z+3, r25	; 0x03
 342:	82 83       	std	Z+2, r24	; 0x02
 344:	04 c0       	rjmp	.+8      	; 0x34e <malloc+0x96>
 346:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__flp+0x1>
 34a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__flp>
 34e:	fe 01       	movw	r30, r28
 350:	32 96       	adiw	r30, 0x02	; 2
 352:	44 c0       	rjmp	.+136    	; 0x3dc <malloc+0x124>
 354:	fe 01       	movw	r30, r28
 356:	e2 0f       	add	r30, r18
 358:	f3 1f       	adc	r31, r19
 35a:	81 93       	st	Z+, r24
 35c:	91 93       	st	Z+, r25
 35e:	22 50       	subi	r18, 0x02	; 2
 360:	31 09       	sbc	r19, r1
 362:	39 83       	std	Y+1, r19	; 0x01
 364:	28 83       	st	Y, r18
 366:	3a c0       	rjmp	.+116    	; 0x3dc <malloc+0x124>
 368:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__brkval>
 36c:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__brkval+0x1>
 370:	23 2b       	or	r18, r19
 372:	41 f4       	brne	.+16     	; 0x384 <malloc+0xcc>
 374:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 378:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 37c:	30 93 11 01 	sts	0x0111, r19	; 0x800111 <__brkval+0x1>
 380:	20 93 10 01 	sts	0x0110, r18	; 0x800110 <__brkval>
 384:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 388:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 38c:	21 15       	cp	r18, r1
 38e:	31 05       	cpc	r19, r1
 390:	41 f4       	brne	.+16     	; 0x3a2 <malloc+0xea>
 392:	2d b7       	in	r18, 0x3d	; 61
 394:	3e b7       	in	r19, 0x3e	; 62
 396:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 39a:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 39e:	24 1b       	sub	r18, r20
 3a0:	35 0b       	sbc	r19, r21
 3a2:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <__brkval>
 3a6:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <__brkval+0x1>
 3aa:	e2 17       	cp	r30, r18
 3ac:	f3 07       	cpc	r31, r19
 3ae:	a0 f4       	brcc	.+40     	; 0x3d8 <malloc+0x120>
 3b0:	2e 1b       	sub	r18, r30
 3b2:	3f 0b       	sbc	r19, r31
 3b4:	28 17       	cp	r18, r24
 3b6:	39 07       	cpc	r19, r25
 3b8:	78 f0       	brcs	.+30     	; 0x3d8 <malloc+0x120>
 3ba:	ac 01       	movw	r20, r24
 3bc:	4e 5f       	subi	r20, 0xFE	; 254
 3be:	5f 4f       	sbci	r21, 0xFF	; 255
 3c0:	24 17       	cp	r18, r20
 3c2:	35 07       	cpc	r19, r21
 3c4:	48 f0       	brcs	.+18     	; 0x3d8 <malloc+0x120>
 3c6:	4e 0f       	add	r20, r30
 3c8:	5f 1f       	adc	r21, r31
 3ca:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <__brkval+0x1>
 3ce:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <__brkval>
 3d2:	81 93       	st	Z+, r24
 3d4:	91 93       	st	Z+, r25
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <malloc+0x124>
 3d8:	e0 e0       	ldi	r30, 0x00	; 0
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	cf 01       	movw	r24, r30
 3de:	df 91       	pop	r29
 3e0:	cf 91       	pop	r28
 3e2:	1f 91       	pop	r17
 3e4:	0f 91       	pop	r16
 3e6:	08 95       	ret

000003e8 <free>:
 3e8:	cf 93       	push	r28
 3ea:	df 93       	push	r29
 3ec:	00 97       	sbiw	r24, 0x00	; 0
 3ee:	09 f4       	brne	.+2      	; 0x3f2 <free+0xa>
 3f0:	81 c0       	rjmp	.+258    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 3f2:	fc 01       	movw	r30, r24
 3f4:	32 97       	sbiw	r30, 0x02	; 2
 3f6:	13 82       	std	Z+3, r1	; 0x03
 3f8:	12 82       	std	Z+2, r1	; 0x02
 3fa:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <__flp>
 3fe:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <__flp+0x1>
 402:	10 97       	sbiw	r26, 0x00	; 0
 404:	81 f4       	brne	.+32     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 406:	20 81       	ld	r18, Z
 408:	31 81       	ldd	r19, Z+1	; 0x01
 40a:	82 0f       	add	r24, r18
 40c:	93 1f       	adc	r25, r19
 40e:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__brkval>
 412:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__brkval+0x1>
 416:	28 17       	cp	r18, r24
 418:	39 07       	cpc	r19, r25
 41a:	51 f5       	brne	.+84     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 41c:	f0 93 11 01 	sts	0x0111, r31	; 0x800111 <__brkval+0x1>
 420:	e0 93 10 01 	sts	0x0110, r30	; 0x800110 <__brkval>
 424:	67 c0       	rjmp	.+206    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 426:	ed 01       	movw	r28, r26
 428:	20 e0       	ldi	r18, 0x00	; 0
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	ce 17       	cp	r28, r30
 42e:	df 07       	cpc	r29, r31
 430:	40 f4       	brcc	.+16     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 432:	4a 81       	ldd	r20, Y+2	; 0x02
 434:	5b 81       	ldd	r21, Y+3	; 0x03
 436:	9e 01       	movw	r18, r28
 438:	41 15       	cp	r20, r1
 43a:	51 05       	cpc	r21, r1
 43c:	f1 f0       	breq	.+60     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 43e:	ea 01       	movw	r28, r20
 440:	f5 cf       	rjmp	.-22     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 442:	d3 83       	std	Z+3, r29	; 0x03
 444:	c2 83       	std	Z+2, r28	; 0x02
 446:	40 81       	ld	r20, Z
 448:	51 81       	ldd	r21, Z+1	; 0x01
 44a:	84 0f       	add	r24, r20
 44c:	95 1f       	adc	r25, r21
 44e:	c8 17       	cp	r28, r24
 450:	d9 07       	cpc	r29, r25
 452:	59 f4       	brne	.+22     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 454:	88 81       	ld	r24, Y
 456:	99 81       	ldd	r25, Y+1	; 0x01
 458:	84 0f       	add	r24, r20
 45a:	95 1f       	adc	r25, r21
 45c:	02 96       	adiw	r24, 0x02	; 2
 45e:	91 83       	std	Z+1, r25	; 0x01
 460:	80 83       	st	Z, r24
 462:	8a 81       	ldd	r24, Y+2	; 0x02
 464:	9b 81       	ldd	r25, Y+3	; 0x03
 466:	93 83       	std	Z+3, r25	; 0x03
 468:	82 83       	std	Z+2, r24	; 0x02
 46a:	21 15       	cp	r18, r1
 46c:	31 05       	cpc	r19, r1
 46e:	29 f4       	brne	.+10     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 470:	f0 93 13 01 	sts	0x0113, r31	; 0x800113 <__flp+0x1>
 474:	e0 93 12 01 	sts	0x0112, r30	; 0x800112 <__flp>
 478:	3d c0       	rjmp	.+122    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 47a:	e9 01       	movw	r28, r18
 47c:	fb 83       	std	Y+3, r31	; 0x03
 47e:	ea 83       	std	Y+2, r30	; 0x02
 480:	49 91       	ld	r20, Y+
 482:	59 91       	ld	r21, Y+
 484:	c4 0f       	add	r28, r20
 486:	d5 1f       	adc	r29, r21
 488:	ec 17       	cp	r30, r28
 48a:	fd 07       	cpc	r31, r29
 48c:	61 f4       	brne	.+24     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 48e:	80 81       	ld	r24, Z
 490:	91 81       	ldd	r25, Z+1	; 0x01
 492:	84 0f       	add	r24, r20
 494:	95 1f       	adc	r25, r21
 496:	02 96       	adiw	r24, 0x02	; 2
 498:	e9 01       	movw	r28, r18
 49a:	99 83       	std	Y+1, r25	; 0x01
 49c:	88 83       	st	Y, r24
 49e:	82 81       	ldd	r24, Z+2	; 0x02
 4a0:	93 81       	ldd	r25, Z+3	; 0x03
 4a2:	9b 83       	std	Y+3, r25	; 0x03
 4a4:	8a 83       	std	Y+2, r24	; 0x02
 4a6:	e0 e0       	ldi	r30, 0x00	; 0
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	12 96       	adiw	r26, 0x02	; 2
 4ac:	8d 91       	ld	r24, X+
 4ae:	9c 91       	ld	r25, X
 4b0:	13 97       	sbiw	r26, 0x03	; 3
 4b2:	00 97       	sbiw	r24, 0x00	; 0
 4b4:	19 f0       	breq	.+6      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b6:	fd 01       	movw	r30, r26
 4b8:	dc 01       	movw	r26, r24
 4ba:	f7 cf       	rjmp	.-18     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4bc:	8d 91       	ld	r24, X+
 4be:	9c 91       	ld	r25, X
 4c0:	11 97       	sbiw	r26, 0x01	; 1
 4c2:	9d 01       	movw	r18, r26
 4c4:	2e 5f       	subi	r18, 0xFE	; 254
 4c6:	3f 4f       	sbci	r19, 0xFF	; 255
 4c8:	82 0f       	add	r24, r18
 4ca:	93 1f       	adc	r25, r19
 4cc:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__brkval>
 4d0:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__brkval+0x1>
 4d4:	28 17       	cp	r18, r24
 4d6:	39 07       	cpc	r19, r25
 4d8:	69 f4       	brne	.+26     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4da:	30 97       	sbiw	r30, 0x00	; 0
 4dc:	29 f4       	brne	.+10     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4de:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <__flp+0x1>
 4e2:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <__flp>
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4e8:	13 82       	std	Z+3, r1	; 0x03
 4ea:	12 82       	std	Z+2, r1	; 0x02
 4ec:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <__brkval+0x1>
 4f0:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <__brkval>
 4f4:	df 91       	pop	r29
 4f6:	cf 91       	pop	r28
 4f8:	08 95       	ret

000004fa <memset>:
 4fa:	dc 01       	movw	r26, r24
 4fc:	01 c0       	rjmp	.+2      	; 0x500 <__stack+0x1>
 4fe:	6d 93       	st	X+, r22
 500:	41 50       	subi	r20, 0x01	; 1
 502:	50 40       	sbci	r21, 0x00	; 0
 504:	e0 f7       	brcc	.-8      	; 0x4fe <memset+0x4>
 506:	08 95       	ret

00000508 <__divmodsi4>:
 508:	05 2e       	mov	r0, r21
 50a:	97 fb       	bst	r25, 7
 50c:	1e f4       	brtc	.+6      	; 0x514 <__divmodsi4+0xc>
 50e:	00 94       	com	r0
 510:	0e 94 9b 02 	call	0x536	; 0x536 <__negsi2>
 514:	57 fd       	sbrc	r21, 7
 516:	07 d0       	rcall	.+14     	; 0x526 <__divmodsi4_neg2>
 518:	0e 94 b6 02 	call	0x56c	; 0x56c <__udivmodsi4>
 51c:	07 fc       	sbrc	r0, 7
 51e:	03 d0       	rcall	.+6      	; 0x526 <__divmodsi4_neg2>
 520:	4e f4       	brtc	.+18     	; 0x534 <__divmodsi4_exit>
 522:	0c 94 9b 02 	jmp	0x536	; 0x536 <__negsi2>

00000526 <__divmodsi4_neg2>:
 526:	50 95       	com	r21
 528:	40 95       	com	r20
 52a:	30 95       	com	r19
 52c:	21 95       	neg	r18
 52e:	3f 4f       	sbci	r19, 0xFF	; 255
 530:	4f 4f       	sbci	r20, 0xFF	; 255
 532:	5f 4f       	sbci	r21, 0xFF	; 255

00000534 <__divmodsi4_exit>:
 534:	08 95       	ret

00000536 <__negsi2>:
 536:	90 95       	com	r25
 538:	80 95       	com	r24
 53a:	70 95       	com	r23
 53c:	61 95       	neg	r22
 53e:	7f 4f       	sbci	r23, 0xFF	; 255
 540:	8f 4f       	sbci	r24, 0xFF	; 255
 542:	9f 4f       	sbci	r25, 0xFF	; 255
 544:	08 95       	ret

00000546 <__muluhisi3>:
 546:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__umulhisi3>
 54a:	a5 9f       	mul	r26, r21
 54c:	90 0d       	add	r25, r0
 54e:	b4 9f       	mul	r27, r20
 550:	90 0d       	add	r25, r0
 552:	a4 9f       	mul	r26, r20
 554:	80 0d       	add	r24, r0
 556:	91 1d       	adc	r25, r1
 558:	11 24       	eor	r1, r1
 55a:	08 95       	ret

0000055c <__mulshisi3>:
 55c:	b7 ff       	sbrs	r27, 7
 55e:	0c 94 a3 02 	jmp	0x546	; 0x546 <__muluhisi3>

00000562 <__mulohisi3>:
 562:	0e 94 a3 02 	call	0x546	; 0x546 <__muluhisi3>
 566:	82 1b       	sub	r24, r18
 568:	93 0b       	sbc	r25, r19
 56a:	08 95       	ret

0000056c <__udivmodsi4>:
 56c:	a1 e2       	ldi	r26, 0x21	; 33
 56e:	1a 2e       	mov	r1, r26
 570:	aa 1b       	sub	r26, r26
 572:	bb 1b       	sub	r27, r27
 574:	fd 01       	movw	r30, r26
 576:	0d c0       	rjmp	.+26     	; 0x592 <__udivmodsi4_ep>

00000578 <__udivmodsi4_loop>:
 578:	aa 1f       	adc	r26, r26
 57a:	bb 1f       	adc	r27, r27
 57c:	ee 1f       	adc	r30, r30
 57e:	ff 1f       	adc	r31, r31
 580:	a2 17       	cp	r26, r18
 582:	b3 07       	cpc	r27, r19
 584:	e4 07       	cpc	r30, r20
 586:	f5 07       	cpc	r31, r21
 588:	20 f0       	brcs	.+8      	; 0x592 <__udivmodsi4_ep>
 58a:	a2 1b       	sub	r26, r18
 58c:	b3 0b       	sbc	r27, r19
 58e:	e4 0b       	sbc	r30, r20
 590:	f5 0b       	sbc	r31, r21

00000592 <__udivmodsi4_ep>:
 592:	66 1f       	adc	r22, r22
 594:	77 1f       	adc	r23, r23
 596:	88 1f       	adc	r24, r24
 598:	99 1f       	adc	r25, r25
 59a:	1a 94       	dec	r1
 59c:	69 f7       	brne	.-38     	; 0x578 <__udivmodsi4_loop>
 59e:	60 95       	com	r22
 5a0:	70 95       	com	r23
 5a2:	80 95       	com	r24
 5a4:	90 95       	com	r25
 5a6:	9b 01       	movw	r18, r22
 5a8:	ac 01       	movw	r20, r24
 5aa:	bd 01       	movw	r22, r26
 5ac:	cf 01       	movw	r24, r30
 5ae:	08 95       	ret

000005b0 <__umulhisi3>:
 5b0:	a2 9f       	mul	r26, r18
 5b2:	b0 01       	movw	r22, r0
 5b4:	b3 9f       	mul	r27, r19
 5b6:	c0 01       	movw	r24, r0
 5b8:	a3 9f       	mul	r26, r19
 5ba:	70 0d       	add	r23, r0
 5bc:	81 1d       	adc	r24, r1
 5be:	11 24       	eor	r1, r1
 5c0:	91 1d       	adc	r25, r1
 5c2:	b2 9f       	mul	r27, r18
 5c4:	70 0d       	add	r23, r0
 5c6:	81 1d       	adc	r24, r1
 5c8:	11 24       	eor	r1, r1
 5ca:	91 1d       	adc	r25, r1
 5cc:	08 95       	ret

000005ce <_exit>:
 5ce:	f8 94       	cli

000005d0 <__stop_program>:
 5d0:	ff cf       	rjmp	.-2      	; 0x5d0 <__stop_program>
