
ice_ice.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002c6  00800100  00003cd0  00003d64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003cd0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  008003c6  008003c6  0000402a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000402a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00004088  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000318  00000000  00000000  000040c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000469e  00000000  00000000  000043dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000139e  00000000  00000000  00008a7a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001e42  00000000  00000000  00009e18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000087c  00000000  00000000  0000bc5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b6f  00000000  00000000  0000c4d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000029dc  00000000  00000000  0000d047  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000420  00000000  00000000  0000fa23  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 60 0d 	jmp	0x1ac0	; 0x1ac0 <__ctors_end>
       4:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__vector_1>
       8:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
       c:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      10:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      14:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      18:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      1c:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      20:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      24:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      28:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      2c:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      30:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      34:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      38:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      3c:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      40:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      44:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      48:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      4c:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      50:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      54:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      58:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      5c:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      60:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      64:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      68:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>
      6c:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__bad_interrupt>

00000070 <__trampolines_end>:
	...
     208:	00 01       	movw	r0, r0
     20a:	01 01       	movw	r0, r2
     20c:	01 01       	movw	r0, r2
     20e:	01 01       	movw	r0, r2
     210:	01 00       	.word	0x0001	; ????
     212:	00 00       	nop
     214:	00 01       	movw	r0, r0
     216:	01 01       	movw	r0, r2
     218:	01 00       	.word	0x0001	; ????
	...
     246:	00 00       	nop
     248:	01 01       	movw	r0, r2
     24a:	01 01       	movw	r0, r2
     24c:	01 01       	movw	r0, r2
     24e:	01 01       	movw	r0, r2
     250:	01 01       	movw	r0, r2
     252:	01 01       	movw	r0, r2
     254:	01 01       	movw	r0, r2
     256:	01 01       	movw	r0, r2
     258:	01 01       	movw	r0, r2
     25a:	01 00       	.word	0x0001	; ????
	...
     284:	00 00       	nop
     286:	00 01       	movw	r0, r0
     288:	01 01       	movw	r0, r2
     28a:	01 01       	movw	r0, r2
     28c:	01 01       	movw	r0, r2
     28e:	01 01       	movw	r0, r2
     290:	01 01       	movw	r0, r2
     292:	01 01       	movw	r0, r2
     294:	01 01       	movw	r0, r2
     296:	01 01       	movw	r0, r2
     298:	01 01       	movw	r0, r2
     29a:	01 00       	.word	0x0001	; ????
	...
     2c4:	00 00       	nop
     2c6:	01 01       	movw	r0, r2
     2c8:	01 01       	movw	r0, r2
     2ca:	01 01       	movw	r0, r2
     2cc:	01 01       	movw	r0, r2
     2ce:	01 01       	movw	r0, r2
     2d0:	01 01       	movw	r0, r2
     2d2:	01 01       	movw	r0, r2
     2d4:	01 01       	movw	r0, r2
     2d6:	01 01       	movw	r0, r2
     2d8:	01 01       	movw	r0, r2
     2da:	01 01       	movw	r0, r2
	...
     304:	00 01       	movw	r0, r0
     306:	01 01       	movw	r0, r2
     308:	01 01       	movw	r0, r2
     30a:	01 01       	movw	r0, r2
     30c:	01 01       	movw	r0, r2
     30e:	01 01       	movw	r0, r2
     310:	01 01       	movw	r0, r2
     312:	01 01       	movw	r0, r2
     314:	01 01       	movw	r0, r2
     316:	01 01       	movw	r0, r2
     318:	01 01       	movw	r0, r2
     31a:	01 01       	movw	r0, r2
	...
     344:	00 01       	movw	r0, r0
     346:	01 01       	movw	r0, r2
     348:	01 01       	movw	r0, r2
     34a:	01 01       	movw	r0, r2
     34c:	01 01       	movw	r0, r2
     34e:	01 01       	movw	r0, r2
     350:	01 01       	movw	r0, r2
     352:	01 01       	movw	r0, r2
     354:	01 01       	movw	r0, r2
     356:	01 01       	movw	r0, r2
     358:	01 01       	movw	r0, r2
     35a:	01 01       	movw	r0, r2
     35c:	01 01       	movw	r0, r2
	...
     382:	00 00       	nop
     384:	01 01       	movw	r0, r2
     386:	01 01       	movw	r0, r2
     388:	01 01       	movw	r0, r2
     38a:	01 01       	movw	r0, r2
     38c:	01 01       	movw	r0, r2
     38e:	01 01       	movw	r0, r2
     390:	01 01       	movw	r0, r2
     392:	01 01       	movw	r0, r2
     394:	01 01       	movw	r0, r2
     396:	01 01       	movw	r0, r2
     398:	01 01       	movw	r0, r2
     39a:	01 01       	movw	r0, r2
     39c:	01 01       	movw	r0, r2
     39e:	01 00       	.word	0x0001	; ????
	...
     3c0:	00 00       	nop
     3c2:	00 01       	movw	r0, r0
     3c4:	01 01       	movw	r0, r2
     3c6:	01 01       	movw	r0, r2
     3c8:	01 01       	movw	r0, r2
     3ca:	01 01       	movw	r0, r2
     3cc:	01 01       	movw	r0, r2
     3ce:	01 01       	movw	r0, r2
     3d0:	01 01       	movw	r0, r2
     3d2:	01 01       	movw	r0, r2
     3d4:	01 01       	movw	r0, r2
     3d6:	01 01       	movw	r0, r2
     3d8:	01 01       	movw	r0, r2
     3da:	01 01       	movw	r0, r2
     3dc:	01 01       	movw	r0, r2
     3de:	01 01       	movw	r0, r2
	...
     400:	00 00       	nop
     402:	01 01       	movw	r0, r2
     404:	01 01       	movw	r0, r2
     406:	01 01       	movw	r0, r2
     408:	01 01       	movw	r0, r2
     40a:	01 01       	movw	r0, r2
     40c:	01 01       	movw	r0, r2
     40e:	01 01       	movw	r0, r2
     410:	01 01       	movw	r0, r2
     412:	00 00       	nop
     414:	01 01       	movw	r0, r2
     416:	01 01       	movw	r0, r2
     418:	01 01       	movw	r0, r2
     41a:	01 01       	movw	r0, r2
     41c:	01 00       	.word	0x0001	; ????
     41e:	01 01       	movw	r0, r2
     420:	01 00       	.word	0x0001	; ????
	...
     43e:	00 00       	nop
     440:	00 01       	movw	r0, r0
     442:	01 01       	movw	r0, r2
     444:	01 01       	movw	r0, r2
     446:	01 01       	movw	r0, r2
     448:	01 01       	movw	r0, r2
     44a:	01 01       	movw	r0, r2
     44c:	00 00       	nop
     44e:	01 01       	movw	r0, r2
     450:	01 01       	movw	r0, r2
     452:	01 00       	.word	0x0001	; ????
     454:	00 00       	nop
     456:	01 00       	.word	0x0001	; ????
     458:	00 01       	movw	r0, r0
     45a:	01 01       	movw	r0, r2
     45c:	01 00       	.word	0x0001	; ????
     45e:	00 00       	nop
     460:	01 00       	.word	0x0001	; ????
	...
     47e:	00 00       	nop
     480:	00 01       	movw	r0, r0
     482:	01 01       	movw	r0, r2
     484:	01 01       	movw	r0, r2
     486:	01 01       	movw	r0, r2
     488:	01 01       	movw	r0, r2
     48a:	01 00       	.word	0x0001	; ????
     48c:	00 01       	movw	r0, r0
     48e:	01 01       	movw	r0, r2
     490:	01 01       	movw	r0, r2
     492:	01 00       	.word	0x0001	; ????
     494:	00 00       	nop
     496:	00 00       	nop
     498:	00 01       	movw	r0, r0
     49a:	01 01       	movw	r0, r2
     49c:	01 00       	.word	0x0001	; ????
	...
     4be:	00 00       	nop
     4c0:	01 01       	movw	r0, r2
     4c2:	01 01       	movw	r0, r2
     4c4:	01 01       	movw	r0, r2
     4c6:	01 01       	movw	r0, r2
     4c8:	01 01       	movw	r0, r2
     4ca:	01 01       	movw	r0, r2
     4cc:	01 00       	.word	0x0001	; ????
     4ce:	01 01       	movw	r0, r2
     4d0:	01 01       	movw	r0, r2
     4d2:	00 00       	nop
     4d4:	00 01       	movw	r0, r0
     4d6:	01 00       	.word	0x0001	; ????
     4d8:	00 01       	movw	r0, r0
     4da:	01 01       	movw	r0, r2
     4dc:	01 00       	.word	0x0001	; ????
     4de:	01 01       	movw	r0, r2
     4e0:	01 00       	.word	0x0001	; ????
	...
     4fe:	00 00       	nop
     500:	01 01       	movw	r0, r2
     502:	01 01       	movw	r0, r2
     504:	01 01       	movw	r0, r2
     506:	01 01       	movw	r0, r2
     508:	01 01       	movw	r0, r2
     50a:	01 01       	movw	r0, r2
     50c:	01 01       	movw	r0, r2
     50e:	01 01       	movw	r0, r2
     510:	01 01       	movw	r0, r2
     512:	01 01       	movw	r0, r2
     514:	01 01       	movw	r0, r2
     516:	01 01       	movw	r0, r2
     518:	01 01       	movw	r0, r2
     51a:	01 01       	movw	r0, r2
     51c:	01 01       	movw	r0, r2
     51e:	01 01       	movw	r0, r2
	...
     53c:	00 00       	nop
     53e:	00 01       	movw	r0, r0
     540:	01 01       	movw	r0, r2
     542:	01 01       	movw	r0, r2
     544:	01 01       	movw	r0, r2
     546:	01 01       	movw	r0, r2
     548:	01 01       	movw	r0, r2
     54a:	01 01       	movw	r0, r2
     54c:	01 01       	movw	r0, r2
     54e:	01 01       	movw	r0, r2
     550:	01 01       	movw	r0, r2
     552:	01 01       	movw	r0, r2
     554:	01 01       	movw	r0, r2
     556:	01 01       	movw	r0, r2
     558:	01 01       	movw	r0, r2
     55a:	01 01       	movw	r0, r2
     55c:	01 01       	movw	r0, r2
     55e:	01 00       	.word	0x0001	; ????
	...
     57c:	00 00       	nop
     57e:	00 01       	movw	r0, r0
     580:	01 01       	movw	r0, r2
     582:	01 01       	movw	r0, r2
     584:	01 01       	movw	r0, r2
     586:	01 01       	movw	r0, r2
     588:	01 01       	movw	r0, r2
     58a:	01 01       	movw	r0, r2
     58c:	01 01       	movw	r0, r2
     58e:	01 01       	movw	r0, r2
     590:	01 01       	movw	r0, r2
     592:	01 01       	movw	r0, r2
     594:	01 01       	movw	r0, r2
     596:	01 01       	movw	r0, r2
     598:	01 01       	movw	r0, r2
     59a:	01 01       	movw	r0, r2
     59c:	01 00       	.word	0x0001	; ????
	...
     5be:	00 01       	movw	r0, r0
     5c0:	01 01       	movw	r0, r2
     5c2:	01 01       	movw	r0, r2
     5c4:	01 01       	movw	r0, r2
     5c6:	01 01       	movw	r0, r2
     5c8:	01 01       	movw	r0, r2
     5ca:	01 01       	movw	r0, r2
     5cc:	01 01       	movw	r0, r2
     5ce:	01 01       	movw	r0, r2
     5d0:	01 01       	movw	r0, r2
     5d2:	01 01       	movw	r0, r2
     5d4:	01 01       	movw	r0, r2
     5d6:	01 01       	movw	r0, r2
     5d8:	01 01       	movw	r0, r2
     5da:	01 01       	movw	r0, r2
     5dc:	01 01       	movw	r0, r2
	...
     5fe:	00 01       	movw	r0, r0
     600:	01 01       	movw	r0, r2
     602:	01 01       	movw	r0, r2
     604:	01 01       	movw	r0, r2
     606:	01 01       	movw	r0, r2
     608:	01 01       	movw	r0, r2
     60a:	01 01       	movw	r0, r2
     60c:	01 01       	movw	r0, r2
     60e:	01 01       	movw	r0, r2
     610:	01 01       	movw	r0, r2
     612:	01 01       	movw	r0, r2
     614:	01 01       	movw	r0, r2
     616:	01 01       	movw	r0, r2
     618:	01 01       	movw	r0, r2
     61a:	01 01       	movw	r0, r2
     61c:	01 01       	movw	r0, r2
     61e:	01 00       	.word	0x0001	; ????
	...
     63c:	00 00       	nop
     63e:	00 01       	movw	r0, r0
     640:	01 01       	movw	r0, r2
     642:	01 01       	movw	r0, r2
     644:	01 01       	movw	r0, r2
     646:	01 01       	movw	r0, r2
     648:	01 01       	movw	r0, r2
     64a:	01 01       	movw	r0, r2
     64c:	01 01       	movw	r0, r2
     64e:	01 01       	movw	r0, r2
     650:	01 01       	movw	r0, r2
     652:	01 01       	movw	r0, r2
     654:	01 01       	movw	r0, r2
     656:	01 01       	movw	r0, r2
     658:	01 01       	movw	r0, r2
     65a:	01 01       	movw	r0, r2
     65c:	01 01       	movw	r0, r2
     65e:	01 00       	.word	0x0001	; ????
	...
     67c:	00 00       	nop
     67e:	00 01       	movw	r0, r0
     680:	01 01       	movw	r0, r2
     682:	01 01       	movw	r0, r2
     684:	01 01       	movw	r0, r2
     686:	01 01       	movw	r0, r2
     688:	01 01       	movw	r0, r2
     68a:	01 01       	movw	r0, r2
     68c:	01 01       	movw	r0, r2
     68e:	01 01       	movw	r0, r2
     690:	01 01       	movw	r0, r2
     692:	01 01       	movw	r0, r2
     694:	01 01       	movw	r0, r2
     696:	01 01       	movw	r0, r2
     698:	01 01       	movw	r0, r2
     69a:	01 01       	movw	r0, r2
     69c:	01 01       	movw	r0, r2
     69e:	01 00       	.word	0x0001	; ????
	...
     6bc:	00 00       	nop
     6be:	00 01       	movw	r0, r0
     6c0:	01 01       	movw	r0, r2
     6c2:	01 01       	movw	r0, r2
     6c4:	01 01       	movw	r0, r2
     6c6:	01 01       	movw	r0, r2
     6c8:	01 01       	movw	r0, r2
     6ca:	01 01       	movw	r0, r2
     6cc:	01 01       	movw	r0, r2
     6ce:	01 01       	movw	r0, r2
     6d0:	01 01       	movw	r0, r2
     6d2:	01 01       	movw	r0, r2
     6d4:	01 01       	movw	r0, r2
     6d6:	01 01       	movw	r0, r2
     6d8:	01 01       	movw	r0, r2
     6da:	01 01       	movw	r0, r2
     6dc:	01 01       	movw	r0, r2
     6de:	01 01       	movw	r0, r2
	...
     6fc:	00 00       	nop
     6fe:	00 01       	movw	r0, r0
     700:	01 01       	movw	r0, r2
     702:	01 01       	movw	r0, r2
     704:	01 01       	movw	r0, r2
     706:	01 01       	movw	r0, r2
     708:	01 01       	movw	r0, r2
     70a:	01 01       	movw	r0, r2
     70c:	01 01       	movw	r0, r2
     70e:	01 01       	movw	r0, r2
     710:	01 01       	movw	r0, r2
     712:	01 01       	movw	r0, r2
     714:	01 01       	movw	r0, r2
     716:	01 01       	movw	r0, r2
     718:	01 01       	movw	r0, r2
     71a:	01 01       	movw	r0, r2
     71c:	01 01       	movw	r0, r2
     71e:	01 01       	movw	r0, r2
	...
     73c:	00 00       	nop
     73e:	00 01       	movw	r0, r0
     740:	01 01       	movw	r0, r2
     742:	01 01       	movw	r0, r2
     744:	01 01       	movw	r0, r2
     746:	01 01       	movw	r0, r2
     748:	01 01       	movw	r0, r2
     74a:	01 01       	movw	r0, r2
     74c:	01 01       	movw	r0, r2
     74e:	01 01       	movw	r0, r2
     750:	01 01       	movw	r0, r2
     752:	01 01       	movw	r0, r2
     754:	01 01       	movw	r0, r2
     756:	01 01       	movw	r0, r2
     758:	01 01       	movw	r0, r2
     75a:	01 01       	movw	r0, r2
     75c:	01 01       	movw	r0, r2
     75e:	01 00       	.word	0x0001	; ????
	...
     77c:	00 00       	nop
     77e:	00 01       	movw	r0, r0
     780:	01 01       	movw	r0, r2
     782:	01 01       	movw	r0, r2
     784:	01 01       	movw	r0, r2
     786:	01 01       	movw	r0, r2
     788:	01 01       	movw	r0, r2
     78a:	01 01       	movw	r0, r2
     78c:	01 01       	movw	r0, r2
     78e:	01 01       	movw	r0, r2
     790:	01 01       	movw	r0, r2
     792:	01 01       	movw	r0, r2
     794:	01 01       	movw	r0, r2
     796:	01 01       	movw	r0, r2
     798:	01 01       	movw	r0, r2
     79a:	01 01       	movw	r0, r2
     79c:	01 01       	movw	r0, r2
     79e:	01 00       	.word	0x0001	; ????
	...
     7c0:	01 01       	movw	r0, r2
     7c2:	01 01       	movw	r0, r2
     7c4:	01 01       	movw	r0, r2
     7c6:	01 01       	movw	r0, r2
     7c8:	01 01       	movw	r0, r2
     7ca:	01 01       	movw	r0, r2
     7cc:	01 01       	movw	r0, r2
     7ce:	01 01       	movw	r0, r2
     7d0:	01 01       	movw	r0, r2
     7d2:	01 01       	movw	r0, r2
     7d4:	01 01       	movw	r0, r2
     7d6:	01 01       	movw	r0, r2
     7d8:	01 01       	movw	r0, r2
     7da:	01 01       	movw	r0, r2
     7dc:	01 01       	movw	r0, r2
	...
     7fe:	00 00       	nop
     800:	00 01       	movw	r0, r0
     802:	01 01       	movw	r0, r2
     804:	01 01       	movw	r0, r2
     806:	01 01       	movw	r0, r2
     808:	01 01       	movw	r0, r2
     80a:	01 01       	movw	r0, r2
     80c:	01 01       	movw	r0, r2
     80e:	01 01       	movw	r0, r2
     810:	01 01       	movw	r0, r2
     812:	01 01       	movw	r0, r2
     814:	01 01       	movw	r0, r2
     816:	01 01       	movw	r0, r2
     818:	01 01       	movw	r0, r2
     81a:	01 01       	movw	r0, r2
	...
     840:	00 00       	nop
     842:	01 01       	movw	r0, r2
     844:	01 01       	movw	r0, r2
     846:	01 01       	movw	r0, r2
     848:	01 01       	movw	r0, r2
     84a:	01 01       	movw	r0, r2
     84c:	01 01       	movw	r0, r2
     84e:	01 01       	movw	r0, r2
     850:	01 01       	movw	r0, r2
     852:	01 01       	movw	r0, r2
     854:	01 01       	movw	r0, r2
     856:	01 01       	movw	r0, r2
     858:	01 01       	movw	r0, r2
	...
     882:	00 00       	nop
     884:	00 01       	movw	r0, r0
     886:	01 01       	movw	r0, r2
     888:	01 01       	movw	r0, r2
     88a:	01 01       	movw	r0, r2
     88c:	01 01       	movw	r0, r2
     88e:	01 01       	movw	r0, r2
     890:	01 01       	movw	r0, r2
     892:	01 01       	movw	r0, r2
     894:	01 01       	movw	r0, r2
     896:	01 01       	movw	r0, r2
	...
     8c8:	00 00       	nop
     8ca:	00 01       	movw	r0, r0
     8cc:	01 01       	movw	r0, r2
     8ce:	01 01       	movw	r0, r2
     8d0:	01 01       	movw	r0, r2
     8d2:	01 01       	movw	r0, r2
     8d4:	01 00       	.word	0x0001	; ????
	...

00000a70 <wojak>:
	...
     b0c:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     b48:	00 00 01 01 01 01 01 00 00 01 01 01 01 00 00 00     ................
	...
     b88:	01 01 01 00 00 00 00 00 00 00 00 00 00 01 01 00     ................
	...
     bc4:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
     bd4:	00 00 01 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c04:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c14:	00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c44:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c54:	00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     c84:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c94:	00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00     ................
	...
     cc4:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     cd4:	00 00 00 00 00 00 01 01 00 00 00 00 00 00 00 00     ................
	...
     d04:	01 00 00 00 00 00 00 00 00 00 01 01 01 01 01 01     ................
     d14:	01 01 01 01 01 00 00 01 00 00 00 00 00 00 00 00     ................
	...
     d44:	01 00 00 00 00 00 00 00 00 00 00 00 01 01 01 01     ................
     d54:	00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00     ................
	...
     d84:	01 00 00 00 00 00 00 00 01 01 01 01 00 00 00 00     ................
     d94:	01 01 01 01 01 00 00 01 00 00 00 00 00 00 00 00     ................
	...
     dc4:	01 00 00 00 00 00 00 00 00 00 00 01 01 01 00 00     ................
     dd4:	00 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00     ................
	...
     e04:	01 00 00 00 00 00 00 00 00 01 01 00 00 00 00 00     ................
     e14:	00 00 00 00 00 00 01 00 01 00 00 00 00 00 00 00     ................
	...
     e44:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     e54:	00 00 00 01 00 00 00 00 01 00 00 00 00 00 00 00     ................
	...
     e84:	01 00 00 00 00 00 00 00 00 00 01 01 01 00 00 00     ................
	...
     e9c:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ec4:	01 00 00 00 00 00 00 00 00 00 01 01 01 01 01 00     ................
     ed4:	00 00 00 00 01 01 01 00 01 00 00 00 00 00 00 00     ................
	...
     f04:	01 00 00 00 00 00 00 00 00 00 01 01 01 01 01 00     ................
     f14:	00 00 00 01 01 01 01 00 01 00 00 00 00 00 00 00     ................
	...
     f44:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     f54:	00 00 00 00 00 00 01 00 00 01 00 00 00 00 00 00     ................
	...
     f84:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     f94:	00 00 01 00 00 00 00 00 00 01 00 00 00 00 00 00     ................
	...
     fc4:	00 01 00 00 00 01 00 00 00 00 00 00 00 00 00 00     ................
     fd4:	00 00 00 01 00 00 00 00 00 01 00 00 00 00 00 00     ................
	...
    1004:	00 00 01 00 00 01 00 00 00 00 00 00 00 00 00 00     ................
    1014:	00 00 00 01 01 00 00 00 00 01 00 00 00 00 00 00     ................
	...
    1044:	00 00 01 00 00 00 01 00 00 00 00 00 00 00 01 01     ................
    1054:	00 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00     ................
	...
    1084:	00 00 01 01 00 00 01 00 00 00 00 00 00 00 01 01     ................
    1094:	00 01 00 01 00 00 00 00 01 00 00 00 00 00 00 00     ................
	...
    10c4:	00 00 01 01 00 00 01 01 00 00 00 00 00 00 00 00     ................
    10d4:	00 00 00 01 00 00 00 01 01 00 00 00 00 00 00 00     ................
	...
    1104:	00 00 01 01 00 00 01 01 00 00 00 00 00 00 00 00     ................
    1114:	00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00     ................
	...
    1144:	00 00 01 01 00 00 01 00 01 00 00 00 00 01 01 01     ................
    1154:	01 01 01 01 00 00 01 00 00 00 00 00 00 00 00 00     ................
	...
    1184:	00 00 01 00 00 00 01 00 00 01 01 00 00 00 00 00     ................
    1194:	00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00     ................
	...
    11c4:	00 00 01 00 00 00 00 00 00 00 01 01 00 00 00 00     ................
    11d4:	00 00 00 00 00 01 01 00 00 00 00 00 00 00 00 00     ................
	...
    1204:	00 00 01 00 00 00 00 00 00 00 00 01 01 00 00 00     ................
    1214:	00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1244:	00 01 00 00 00 00 00 00 00 00 00 00 01 01 01 00     ................
    1254:	00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1284:	00 01 00 00 00 01 01 00 00 00 00 00 00 00 01 01     ................
    1294:	01 01 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    12c4:	01 00 00 00 01 00 00 00 00 00 00 00 00 00 01 00     ................
    12d4:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1300:	00 01 01 01 01 00 00 01 01 00 00 00 00 00 00 00     ................
    1310:	00 00 00 00 00 00 01 01 01 01 01 01 01 01 00 00     ................
	...
    133c:	00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    138c:	00 00 01 01 00 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    13d0:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00001470 <font4>:
    1470:	00 00 00 00 00 5c 00 00 0c 00 0c 00 7c 28 7c 28     .....\......|(|(
    1480:	58 dc 68 00 24 10 48 00 28 54 28 40 00 0c 00 00     X.h.$.H.(T(@....
    1490:	00 78 84 00 84 78 00 00 54 38 54 00 10 7c 10 00     .x...x..T8T..|..
    14a0:	80 40 00 00 10 10 10 00 00 40 00 00 60 10 0c 00     .@.......@..`...
    14b0:	38 54 38 00 48 7c 40 00 48 64 58 00 44 54 2c 00     8T8.H|@.HdX.DT,.
    14c0:	1c 10 7c 00 5c 54 24 00 38 54 24 00 64 14 0c 00     ..|.\T$.8T$.d...
    14d0:	68 54 2c 00 48 54 38 00 00 48 00 00 80 48 00 00     hT,.HT8..H...H..
    14e0:	10 28 44 00 28 28 28 00 44 28 10 00 04 54 08 00     .(D.(((.D(...T..
    14f0:	38 44 5c 00 78 14 78 00 7c 54 28 00 38 44 28 00     8D\.x.x.|T(.8D(.
    1500:	7c 44 38 00 7c 54 44 00 7c 14 04 00 38 44 74 00     |D8.|TD.|...8Dt.
    1510:	7c 10 7c 00 44 7c 44 00 20 40 3c 00 7c 10 6c 00     |.|.D|D. @<.|.l.
    1520:	7c 40 40 00 7c 18 7c 00 78 10 3c 00 38 44 38 00     |@@.|.|.x.<.8D8.
    1530:	7c 14 08 00 38 44 b8 00 7c 14 68 00 48 54 24 00     |...8D..|.h.HT$.
    1540:	04 7c 04 00 7c 40 7c 00 3c 60 3c 00 7c 30 7c 00     .|..|@|.<`<.|0|.
    1550:	6c 10 6c 00 0c 70 0c 00 64 54 4c 00 00 7c 44 00     l.l..p..dTL..|D.
    1560:	0c 10 60 00 44 7c 00 00 08 04 08 00 80 80 80 00     ..`.D|..........
    1570:	00 04 08 00 30 48 78 00 7c 48 30 00 30 48 48 00     ....0Hx.|H0.0HH.
    1580:	30 48 7c 00 30 68 50 00 10 78 14 00 90 a8 78 00     0H|.0hP..x....x.
    1590:	7c 08 70 00 50 74 40 00 80 80 74 00 7c 10 68 00     |.p.Pt@...t.|.h.
    15a0:	44 7c 40 00 78 10 78 00 78 08 70 00 30 48 30 00     D|@.x.x.x.p.0H0.
    15b0:	f8 28 10 00 30 48 f8 00 78 10 08 00 50 58 28 00     .(..0H..x...PX(.
    15c0:	08 3c 48 00 38 40 78 00 38 40 38 00 78 20 78 00     .<H.8@x.8@8.x x.
    15d0:	48 30 48 00 98 a0 78 00 48 68 58 00 10 78 84 00     H0H...x.HhX..x..
    15e0:	00 7c 00 00 84 78 10 00 08 04 08 04                 .|...x......

000015ec <font5>:
    15ec:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
    15fc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
    160c:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
    161c:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
    162c:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
    163c:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
    164c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
    165c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
    166c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
    167c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
    168c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
    169c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
    16ac:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
    16bc:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
    16cc:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
    16dc:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
    16ec:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
    16fc:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
    170c:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
    171c:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
    172c:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
    173c:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
    174c:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
    175c:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
    176c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
    177c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
    178c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
    179c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
    17ac:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
    17bc:	00 00 41 36 08 00 02 01 03 02 01                    ..A6.......

000017c7 <font8>:
	...
    17cf:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
    17df:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
    17ef:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
    17ff:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
    180f:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
    181f:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
    182f:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
    183f:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
    184f:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
    185f:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
    186f:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
    187f:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
    188f:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
    189f:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
    18af:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
    18bf:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
    18cf:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
    18df:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
    18ef:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
    18ff:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
    190f:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
    191f:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
    192f:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
    193f:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
    194f:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
    195f:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
    196f:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
    197f:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
    198f:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
    199f:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
    19af:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
    19bf:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
    19cf:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
    19df:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
    19ef:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
    19ff:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
    1a0f:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
    1a1f:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
    1a2f:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
    1a3f:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
    1a4f:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
    1a5f:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
    1a6f:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
    1a7f:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
    1a8f:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
    1a9f:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
    1aaf:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

00001ac0 <__ctors_end>:
    1ac0:	11 24       	eor	r1, r1
    1ac2:	1f be       	out	0x3f, r1	; 63
    1ac4:	cf ef       	ldi	r28, 0xFF	; 255
    1ac6:	d4 e0       	ldi	r29, 0x04	; 4
    1ac8:	de bf       	out	0x3e, r29	; 62
    1aca:	cd bf       	out	0x3d, r28	; 61

00001acc <__do_copy_data>:
    1acc:	13 e0       	ldi	r17, 0x03	; 3
    1ace:	a0 e0       	ldi	r26, 0x00	; 0
    1ad0:	b1 e0       	ldi	r27, 0x01	; 1
    1ad2:	e0 ed       	ldi	r30, 0xD0	; 208
    1ad4:	fc e3       	ldi	r31, 0x3C	; 60
    1ad6:	02 c0       	rjmp	.+4      	; 0x1adc <__do_copy_data+0x10>
    1ad8:	05 90       	lpm	r0, Z+
    1ada:	0d 92       	st	X+, r0
    1adc:	a6 3c       	cpi	r26, 0xC6	; 198
    1ade:	b1 07       	cpc	r27, r17
    1ae0:	d9 f7       	brne	.-10     	; 0x1ad8 <__do_copy_data+0xc>

00001ae2 <__do_clear_bss>:
    1ae2:	23 e0       	ldi	r18, 0x03	; 3
    1ae4:	a6 ec       	ldi	r26, 0xC6	; 198
    1ae6:	b3 e0       	ldi	r27, 0x03	; 3
    1ae8:	01 c0       	rjmp	.+2      	; 0x1aec <.do_clear_bss_start>

00001aea <.do_clear_bss_loop>:
    1aea:	1d 92       	st	X+, r1

00001aec <.do_clear_bss_start>:
    1aec:	a3 3e       	cpi	r26, 0xE3	; 227
    1aee:	b2 07       	cpc	r27, r18
    1af0:	e1 f7       	brne	.-8      	; 0x1aea <.do_clear_bss_loop>
    1af2:	0e 94 56 16 	call	0x2cac	; 0x2cac <main>
    1af6:	0c 94 66 1e 	jmp	0x3ccc	; 0x3ccc <_exit>

00001afa <__bad_interrupt>:
    1afa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001afe <__vector_1>:
	msgToSend.data_length = 1;
	msgToSend.id = 0x2;
	//placeholder
	msgToSend.data[0] = 0;
	send_can_msg(&msgToSend);
}
    1afe:	1f 92       	push	r1
    1b00:	0f 92       	push	r0
    1b02:	0f b6       	in	r0, 0x3f	; 63
    1b04:	0f 92       	push	r0
    1b06:	11 24       	eor	r1, r1
    1b08:	8f 93       	push	r24
    1b0a:	81 e0       	ldi	r24, 0x01	; 1
    1b0c:	80 93 d1 03 	sts	0x03D1, r24	; 0x8003d1 <can_flag>
    1b10:	8f 91       	pop	r24
    1b12:	0f 90       	pop	r0
    1b14:	0f be       	out	0x3f, r0	; 63
    1b16:	0f 90       	pop	r0
    1b18:	1f 90       	pop	r1
    1b1a:	18 95       	reti

00001b1c <can_interrupted>:
    1b1c:	80 91 d1 03 	lds	r24, 0x03D1	; 0x8003d1 <can_flag>
    1b20:	88 23       	and	r24, r24
    1b22:	19 f0       	breq	.+6      	; 0x1b2a <can_interrupted+0xe>
    1b24:	10 92 d1 03 	sts	0x03D1, r1	; 0x8003d1 <can_flag>
    1b28:	81 e0       	ldi	r24, 0x01	; 1
    1b2a:	08 95       	ret

00001b2c <can_interrupt_enable>:
    1b2c:	f8 94       	cli
    1b2e:	85 b7       	in	r24, 0x35	; 53
    1b30:	82 60       	ori	r24, 0x02	; 2
    1b32:	85 bf       	out	0x35, r24	; 53
    1b34:	85 b7       	in	r24, 0x35	; 53
    1b36:	8e 7f       	andi	r24, 0xFE	; 254
    1b38:	85 bf       	out	0x35, r24	; 53
    1b3a:	8b b7       	in	r24, 0x3b	; 59
    1b3c:	80 64       	ori	r24, 0x40	; 64
    1b3e:	8b bf       	out	0x3b, r24	; 59
    1b40:	78 94       	sei
    1b42:	08 95       	ret

00001b44 <can_init>:
    1b44:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <mcp2515_init>
    1b48:	0e 94 77 0f 	call	0x1eee	; 0x1eee <mcp2515_reset>
    1b4c:	61 e0       	ldi	r22, 0x01	; 1
    1b4e:	88 e2       	ldi	r24, 0x28	; 40
    1b50:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <mcp2515_write>
    1b54:	65 eb       	ldi	r22, 0xB5	; 181
    1b56:	89 e2       	ldi	r24, 0x29	; 41
    1b58:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <mcp2515_write>
    1b5c:	63 e4       	ldi	r22, 0x43	; 67
    1b5e:	8a e2       	ldi	r24, 0x2A	; 42
    1b60:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <mcp2515_write>
    1b64:	43 e0       	ldi	r20, 0x03	; 3
    1b66:	63 e0       	ldi	r22, 0x03	; 3
    1b68:	8b e2       	ldi	r24, 0x2B	; 43
    1b6a:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <mcp2515_bit_modify>
    1b6e:	60 e0       	ldi	r22, 0x00	; 0
    1b70:	8f e0       	ldi	r24, 0x0F	; 15
    1b72:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <mcp2515_write>
    1b76:	08 95       	ret

00001b78 <send_can_msg>:
    1b78:	0f 93       	push	r16
    1b7a:	1f 93       	push	r17
    1b7c:	cf 93       	push	r28
    1b7e:	8c 01       	movw	r16, r24
    1b80:	fc 01       	movw	r30, r24
    1b82:	60 81       	ld	r22, Z
    1b84:	71 81       	ldd	r23, Z+1	; 0x01
    1b86:	76 95       	lsr	r23
    1b88:	67 95       	ror	r22
    1b8a:	76 95       	lsr	r23
    1b8c:	67 95       	ror	r22
    1b8e:	76 95       	lsr	r23
    1b90:	67 95       	ror	r22
    1b92:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <buffer_number>
    1b96:	82 95       	swap	r24
    1b98:	80 7f       	andi	r24, 0xF0	; 240
    1b9a:	8f 5c       	subi	r24, 0xCF	; 207
    1b9c:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <mcp2515_write>
    1ba0:	82 e3       	ldi	r24, 0x32	; 50
    1ba2:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <mcp2515_read>
    1ba6:	f8 01       	movw	r30, r16
    1ba8:	60 81       	ld	r22, Z
    1baa:	62 95       	swap	r22
    1bac:	66 0f       	add	r22, r22
    1bae:	60 7e       	andi	r22, 0xE0	; 224
    1bb0:	8f 71       	andi	r24, 0x1F	; 31
    1bb2:	68 2b       	or	r22, r24
    1bb4:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <buffer_number>
    1bb8:	82 95       	swap	r24
    1bba:	80 7f       	andi	r24, 0xF0	; 240
    1bbc:	8e 5c       	subi	r24, 0xCE	; 206
    1bbe:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <mcp2515_write>
    1bc2:	85 e3       	ldi	r24, 0x35	; 53
    1bc4:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <mcp2515_read>
    1bc8:	80 7f       	andi	r24, 0xF0	; 240
    1bca:	f8 01       	movw	r30, r16
    1bcc:	92 81       	ldd	r25, Z+2	; 0x02
    1bce:	68 2f       	mov	r22, r24
    1bd0:	69 2b       	or	r22, r25
    1bd2:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <buffer_number>
    1bd6:	82 95       	swap	r24
    1bd8:	80 7f       	andi	r24, 0xF0	; 240
    1bda:	8b 5c       	subi	r24, 0xCB	; 203
    1bdc:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <mcp2515_write>
    1be0:	f8 01       	movw	r30, r16
    1be2:	82 81       	ldd	r24, Z+2	; 0x02
    1be4:	88 23       	and	r24, r24
    1be6:	a9 f0       	breq	.+42     	; 0x1c12 <send_can_msg+0x9a>
    1be8:	c0 e0       	ldi	r28, 0x00	; 0
    1bea:	f8 01       	movw	r30, r16
    1bec:	ec 0f       	add	r30, r28
    1bee:	f1 1d       	adc	r31, r1
    1bf0:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <buffer_number>
    1bf4:	9c 2f       	mov	r25, r28
    1bf6:	20 e1       	ldi	r18, 0x10	; 16
    1bf8:	82 9f       	mul	r24, r18
    1bfa:	90 0d       	add	r25, r0
    1bfc:	11 24       	eor	r1, r1
    1bfe:	89 2f       	mov	r24, r25
    1c00:	63 81       	ldd	r22, Z+3	; 0x03
    1c02:	8a 5c       	subi	r24, 0xCA	; 202
    1c04:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <mcp2515_write>
    1c08:	cf 5f       	subi	r28, 0xFF	; 255
    1c0a:	f8 01       	movw	r30, r16
    1c0c:	82 81       	ldd	r24, Z+2	; 0x02
    1c0e:	c8 17       	cp	r28, r24
    1c10:	60 f3       	brcs	.-40     	; 0x1bea <send_can_msg+0x72>
    1c12:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <buffer_number>
    1c16:	8f 57       	subi	r24, 0x7F	; 127
    1c18:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <mcp2515_request_to_send>
    1c1c:	cf 91       	pop	r28
    1c1e:	1f 91       	pop	r17
    1c20:	0f 91       	pop	r16
    1c22:	08 95       	ret

00001c24 <receive_can_msg>:
    1c24:	0f 93       	push	r16
    1c26:	1f 93       	push	r17
    1c28:	cf 93       	push	r28
    1c2a:	df 93       	push	r29
    1c2c:	c8 2f       	mov	r28, r24
    1c2e:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <mcp2515_read_status>
    1c32:	06 ec       	ldi	r16, 0xC6	; 198
    1c34:	13 e0       	ldi	r17, 0x03	; 3
    1c36:	f8 01       	movw	r30, r16
    1c38:	11 82       	std	Z+1, r1	; 0x01
    1c3a:	10 82       	st	Z, r1
    1c3c:	c2 95       	swap	r28
    1c3e:	c0 7f       	andi	r28, 0xF0	; 240
    1c40:	81 e6       	ldi	r24, 0x61	; 97
    1c42:	8c 0f       	add	r24, r28
    1c44:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <mcp2515_read>
    1c48:	d8 2f       	mov	r29, r24
    1c4a:	82 e6       	ldi	r24, 0x62	; 98
    1c4c:	8c 0f       	add	r24, r28
    1c4e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <mcp2515_read>
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	96 95       	lsr	r25
    1c56:	87 95       	ror	r24
    1c58:	92 95       	swap	r25
    1c5a:	82 95       	swap	r24
    1c5c:	8f 70       	andi	r24, 0x0F	; 15
    1c5e:	89 27       	eor	r24, r25
    1c60:	9f 70       	andi	r25, 0x0F	; 15
    1c62:	89 27       	eor	r24, r25
    1c64:	2d 2f       	mov	r18, r29
    1c66:	30 e0       	ldi	r19, 0x00	; 0
    1c68:	22 0f       	add	r18, r18
    1c6a:	33 1f       	adc	r19, r19
    1c6c:	22 0f       	add	r18, r18
    1c6e:	33 1f       	adc	r19, r19
    1c70:	22 0f       	add	r18, r18
    1c72:	33 1f       	adc	r19, r19
    1c74:	82 2b       	or	r24, r18
    1c76:	93 2b       	or	r25, r19
    1c78:	f8 01       	movw	r30, r16
    1c7a:	20 81       	ld	r18, Z
    1c7c:	31 81       	ldd	r19, Z+1	; 0x01
    1c7e:	82 2b       	or	r24, r18
    1c80:	93 2b       	or	r25, r19
    1c82:	91 83       	std	Z+1, r25	; 0x01
    1c84:	80 83       	st	Z, r24
    1c86:	85 e6       	ldi	r24, 0x65	; 101
    1c88:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <mcp2515_read>
    1c8c:	8f 70       	andi	r24, 0x0F	; 15
    1c8e:	f8 01       	movw	r30, r16
    1c90:	82 83       	std	Z+2, r24	; 0x02
    1c92:	88 23       	and	r24, r24
    1c94:	71 f0       	breq	.+28     	; 0x1cb2 <receive_can_msg+0x8e>
    1c96:	ca 59       	subi	r28, 0x9A	; 154
    1c98:	09 ec       	ldi	r16, 0xC9	; 201
    1c9a:	13 e0       	ldi	r17, 0x03	; 3
    1c9c:	dc 2f       	mov	r29, r28
    1c9e:	d8 0f       	add	r29, r24
    1ca0:	8c 2f       	mov	r24, r28
    1ca2:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <mcp2515_read>
    1ca6:	f8 01       	movw	r30, r16
    1ca8:	81 93       	st	Z+, r24
    1caa:	8f 01       	movw	r16, r30
    1cac:	cf 5f       	subi	r28, 0xFF	; 255
    1cae:	cd 13       	cpse	r28, r29
    1cb0:	f7 cf       	rjmp	.-18     	; 0x1ca0 <receive_can_msg+0x7c>
    1cb2:	40 e0       	ldi	r20, 0x00	; 0
    1cb4:	61 e0       	ldi	r22, 0x01	; 1
    1cb6:	8c e2       	ldi	r24, 0x2C	; 44
    1cb8:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <mcp2515_bit_modify>
    1cbc:	40 e0       	ldi	r20, 0x00	; 0
    1cbe:	62 e0       	ldi	r22, 0x02	; 2
    1cc0:	8c e2       	ldi	r24, 0x2C	; 44
    1cc2:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <mcp2515_bit_modify>
    1cc6:	86 ec       	ldi	r24, 0xC6	; 198
    1cc8:	93 e0       	ldi	r25, 0x03	; 3
    1cca:	df 91       	pop	r29
    1ccc:	cf 91       	pop	r28
    1cce:	1f 91       	pop	r17
    1cd0:	0f 91       	pop	r16
    1cd2:	08 95       	ret

00001cd4 <send_stick_can>:
    1cd4:	ef 92       	push	r14
    1cd6:	ff 92       	push	r15
    1cd8:	0f 93       	push	r16
    1cda:	1f 93       	push	r17
    1cdc:	cf 93       	push	r28
    1cde:	df 93       	push	r29
    1ce0:	cd b7       	in	r28, 0x3d	; 61
    1ce2:	de b7       	in	r29, 0x3e	; 62
    1ce4:	2b 97       	sbiw	r28, 0x0b	; 11
    1ce6:	0f b6       	in	r0, 0x3f	; 63
    1ce8:	f8 94       	cli
    1cea:	de bf       	out	0x3e, r29	; 62
    1cec:	0f be       	out	0x3f, r0	; 63
    1cee:	cd bf       	out	0x3d, r28	; 61
    1cf0:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <update_adc_values>
    1cf4:	0e 94 9e 15 	call	0x2b3c	; 0x2b3c <get_joyvals>
    1cf8:	08 2f       	mov	r16, r24
    1cfa:	19 2f       	mov	r17, r25
    1cfc:	e8 2e       	mov	r14, r24
    1cfe:	f9 2e       	mov	r15, r25
    1d00:	0e 94 a3 15 	call	0x2b46	; 0x2b46 <get_slidervals>
    1d04:	28 e0       	ldi	r18, 0x08	; 8
    1d06:	2b 83       	std	Y+3, r18	; 0x03
    1d08:	20 2f       	mov	r18, r16
    1d0a:	00 0f       	add	r16, r16
    1d0c:	33 0b       	sbc	r19, r19
    1d0e:	33 23       	and	r19, r19
    1d10:	1c f4       	brge	.+6      	; 0x1d18 <send_stick_can+0x44>
    1d12:	31 95       	neg	r19
    1d14:	21 95       	neg	r18
    1d16:	31 09       	sbc	r19, r1
    1d18:	2c 83       	std	Y+4, r18	; 0x04
    1d1a:	21 2f       	mov	r18, r17
    1d1c:	11 0f       	add	r17, r17
    1d1e:	33 0b       	sbc	r19, r19
    1d20:	33 23       	and	r19, r19
    1d22:	1c f4       	brge	.+6      	; 0x1d2a <send_stick_can+0x56>
    1d24:	31 95       	neg	r19
    1d26:	21 95       	neg	r18
    1d28:	31 09       	sbc	r19, r1
    1d2a:	2d 83       	std	Y+5, r18	; 0x05
    1d2c:	26 b3       	in	r18, 0x16	; 22
    1d2e:	22 70       	andi	r18, 0x02	; 2
    1d30:	2e 83       	std	Y+6, r18	; 0x06
    1d32:	ee 20       	and	r14, r14
    1d34:	14 f0       	brlt	.+4      	; 0x1d3a <send_stick_can+0x66>
    1d36:	21 e1       	ldi	r18, 0x11	; 17
    1d38:	01 c0       	rjmp	.+2      	; 0x1d3c <send_stick_can+0x68>
    1d3a:	20 e0       	ldi	r18, 0x00	; 0
    1d3c:	ff 20       	and	r15, r15
    1d3e:	14 f0       	brlt	.+4      	; 0x1d44 <send_stick_can+0x70>
    1d40:	31 e1       	ldi	r19, 0x11	; 17
    1d42:	01 c0       	rjmp	.+2      	; 0x1d46 <send_stick_can+0x72>
    1d44:	30 e0       	ldi	r19, 0x00	; 0
    1d46:	2f 83       	std	Y+7, r18	; 0x07
    1d48:	38 87       	std	Y+8, r19	; 0x08
    1d4a:	89 87       	std	Y+9, r24	; 0x09
    1d4c:	9a 87       	std	Y+10, r25	; 0x0a
    1d4e:	80 b3       	in	r24, 0x10	; 16
    1d50:	20 b3       	in	r18, 0x10	; 16
    1d52:	80 71       	andi	r24, 0x10	; 16
    1d54:	90 e0       	ldi	r25, 0x00	; 0
    1d56:	95 95       	asr	r25
    1d58:	87 95       	ror	r24
    1d5a:	95 95       	asr	r25
    1d5c:	87 95       	ror	r24
    1d5e:	95 95       	asr	r25
    1d60:	87 95       	ror	r24
    1d62:	25 fb       	bst	r18, 5
    1d64:	99 27       	eor	r25, r25
    1d66:	90 f9       	bld	r25, 0
    1d68:	89 2b       	or	r24, r25
    1d6a:	8b 87       	std	Y+11, r24	; 0x0b
    1d6c:	86 e1       	ldi	r24, 0x16	; 22
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	9a 83       	std	Y+2, r25	; 0x02
    1d72:	89 83       	std	Y+1, r24	; 0x01
    1d74:	8f ef       	ldi	r24, 0xFF	; 255
    1d76:	9f e5       	ldi	r25, 0x5F	; 95
    1d78:	01 97       	sbiw	r24, 0x01	; 1
    1d7a:	f1 f7       	brne	.-4      	; 0x1d78 <send_stick_can+0xa4>
    1d7c:	00 c0       	rjmp	.+0      	; 0x1d7e <send_stick_can+0xaa>
    1d7e:	00 00       	nop
    1d80:	ce 01       	movw	r24, r28
    1d82:	01 96       	adiw	r24, 0x01	; 1
    1d84:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <send_can_msg>
    1d88:	2b 96       	adiw	r28, 0x0b	; 11
    1d8a:	0f b6       	in	r0, 0x3f	; 63
    1d8c:	f8 94       	cli
    1d8e:	de bf       	out	0x3e, r29	; 62
    1d90:	0f be       	out	0x3f, r0	; 63
    1d92:	cd bf       	out	0x3d, r28	; 61
    1d94:	df 91       	pop	r29
    1d96:	cf 91       	pop	r28
    1d98:	1f 91       	pop	r17
    1d9a:	0f 91       	pop	r16
    1d9c:	ff 90       	pop	r15
    1d9e:	ef 90       	pop	r14
    1da0:	08 95       	ret

00001da2 <send_difficulty_can>:
    1da2:	cf 93       	push	r28
    1da4:	df 93       	push	r29
    1da6:	cd b7       	in	r28, 0x3d	; 61
    1da8:	de b7       	in	r29, 0x3e	; 62
    1daa:	2b 97       	sbiw	r28, 0x0b	; 11
    1dac:	0f b6       	in	r0, 0x3f	; 63
    1dae:	f8 94       	cli
    1db0:	de bf       	out	0x3e, r29	; 62
    1db2:	0f be       	out	0x3f, r0	; 63
    1db4:	cd bf       	out	0x3d, r28	; 61
    1db6:	91 e0       	ldi	r25, 0x01	; 1
    1db8:	9b 83       	std	Y+3, r25	; 0x03
    1dba:	81 30       	cpi	r24, 0x01	; 1
    1dbc:	11 f4       	brne	.+4      	; 0x1dc2 <send_difficulty_can+0x20>
    1dbe:	8c 83       	std	Y+4, r24	; 0x04
    1dc0:	06 c0       	rjmp	.+12     	; 0x1dce <send_difficulty_can+0x2c>
    1dc2:	83 30       	cpi	r24, 0x03	; 3
    1dc4:	11 f4       	brne	.+4      	; 0x1dca <send_difficulty_can+0x28>
    1dc6:	8c 83       	std	Y+4, r24	; 0x04
    1dc8:	02 c0       	rjmp	.+4      	; 0x1dce <send_difficulty_can+0x2c>
    1dca:	82 e0       	ldi	r24, 0x02	; 2
    1dcc:	8c 83       	std	Y+4, r24	; 0x04
    1dce:	86 e0       	ldi	r24, 0x06	; 6
    1dd0:	90 e0       	ldi	r25, 0x00	; 0
    1dd2:	9a 83       	std	Y+2, r25	; 0x02
    1dd4:	89 83       	std	Y+1, r24	; 0x01
    1dd6:	8f ef       	ldi	r24, 0xFF	; 255
    1dd8:	9f e5       	ldi	r25, 0x5F	; 95
    1dda:	01 97       	sbiw	r24, 0x01	; 1
    1ddc:	f1 f7       	brne	.-4      	; 0x1dda <send_difficulty_can+0x38>
    1dde:	00 c0       	rjmp	.+0      	; 0x1de0 <send_difficulty_can+0x3e>
    1de0:	00 00       	nop
    1de2:	ce 01       	movw	r24, r28
    1de4:	01 96       	adiw	r24, 0x01	; 1
    1de6:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <send_can_msg>
    1dea:	2b 96       	adiw	r28, 0x0b	; 11
    1dec:	0f b6       	in	r0, 0x3f	; 63
    1dee:	f8 94       	cli
    1df0:	de bf       	out	0x3e, r29	; 62
    1df2:	0f be       	out	0x3f, r0	; 63
    1df4:	cd bf       	out	0x3d, r28	; 61
    1df6:	df 91       	pop	r29
    1df8:	cf 91       	pop	r28
    1dfa:	08 95       	ret

00001dfc <send_reaction_start_can>:

void send_reaction_start_can(){
    1dfc:	cf 93       	push	r28
    1dfe:	df 93       	push	r29
    1e00:	cd b7       	in	r28, 0x3d	; 61
    1e02:	de b7       	in	r29, 0x3e	; 62
    1e04:	2b 97       	sbiw	r28, 0x0b	; 11
    1e06:	0f b6       	in	r0, 0x3f	; 63
    1e08:	f8 94       	cli
    1e0a:	de bf       	out	0x3e, r29	; 62
    1e0c:	0f be       	out	0x3f, r0	; 63
    1e0e:	cd bf       	out	0x3d, r28	; 61
	can_message msgToSend;
	msgToSend.data_length = 1;
    1e10:	81 e0       	ldi	r24, 0x01	; 1
    1e12:	8b 83       	std	Y+3, r24	; 0x03
	msgToSend.id = 0x4;
    1e14:	84 e0       	ldi	r24, 0x04	; 4
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	9a 83       	std	Y+2, r25	; 0x02
    1e1a:	89 83       	std	Y+1, r24	; 0x01
	//
	msgToSend.data[0] = 0;
    1e1c:	1c 82       	std	Y+4, r1	; 0x04
	send_can_msg(&msgToSend);
    1e1e:	ce 01       	movw	r24, r28
    1e20:	01 96       	adiw	r24, 0x01	; 1
    1e22:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <send_can_msg>
}
    1e26:	2b 96       	adiw	r28, 0x0b	; 11
    1e28:	0f b6       	in	r0, 0x3f	; 63
    1e2a:	f8 94       	cli
    1e2c:	de bf       	out	0x3e, r29	; 62
    1e2e:	0f be       	out	0x3f, r0	; 63
    1e30:	cd bf       	out	0x3d, r28	; 61
    1e32:	df 91       	pop	r29
    1e34:	cf 91       	pop	r28
    1e36:	08 95       	ret

00001e38 <send_reaction_stop_can>:

void send_reaction_stop_can(){
    1e38:	cf 93       	push	r28
    1e3a:	df 93       	push	r29
    1e3c:	cd b7       	in	r28, 0x3d	; 61
    1e3e:	de b7       	in	r29, 0x3e	; 62
    1e40:	2b 97       	sbiw	r28, 0x0b	; 11
    1e42:	0f b6       	in	r0, 0x3f	; 63
    1e44:	f8 94       	cli
    1e46:	de bf       	out	0x3e, r29	; 62
    1e48:	0f be       	out	0x3f, r0	; 63
    1e4a:	cd bf       	out	0x3d, r28	; 61
	can_message msgToSend;
	msgToSend.data_length = 1;
    1e4c:	81 e0       	ldi	r24, 0x01	; 1
    1e4e:	8b 83       	std	Y+3, r24	; 0x03
	msgToSend.id = 0x3;
    1e50:	83 e0       	ldi	r24, 0x03	; 3
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	9a 83       	std	Y+2, r25	; 0x02
    1e56:	89 83       	std	Y+1, r24	; 0x01
	//placeholder
	msgToSend.data[0] = 0;
    1e58:	1c 82       	std	Y+4, r1	; 0x04
	send_can_msg(&msgToSend);
    1e5a:	ce 01       	movw	r24, r28
    1e5c:	01 96       	adiw	r24, 0x01	; 1
    1e5e:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <send_can_msg>
    1e62:	2b 96       	adiw	r28, 0x0b	; 11
    1e64:	0f b6       	in	r0, 0x3f	; 63
    1e66:	f8 94       	cli
    1e68:	de bf       	out	0x3e, r29	; 62
    1e6a:	0f be       	out	0x3f, r0	; 63
    1e6c:	cd bf       	out	0x3d, r28	; 61
    1e6e:	df 91       	pop	r29
    1e70:	cf 91       	pop	r28
    1e72:	08 95       	ret

00001e74 <mcp2515_read>:
	spi_init();
	mcp2515_reset();

}

uint8_t mcp2515_read(uint8_t address){
    1e74:	cf 93       	push	r28
    1e76:	c8 2f       	mov	r28, r24
	uint8_t result;
	
	PORTB &= ~(1<<PB4); //ss
    1e78:	c4 98       	cbi	0x18, 4	; 24
	spi_write(MCP_READ);
    1e7a:	83 e0       	ldi	r24, 0x03	; 3
    1e7c:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	spi_write(address);
    1e80:	8c 2f       	mov	r24, r28
    1e82:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	result = spi_read();
    1e86:	0e 94 99 15 	call	0x2b32	; 0x2b32 <spi_read>
	
	PORTB |= (1<<PB4); //!ss
    1e8a:	c4 9a       	sbi	0x18, 4	; 24
	
	return result;
}
    1e8c:	cf 91       	pop	r28
    1e8e:	08 95       	ret

00001e90 <mcp2515_write>:
void mcp2515_write(uint8_t address, uint8_t data){
    1e90:	cf 93       	push	r28
    1e92:	df 93       	push	r29
    1e94:	d8 2f       	mov	r29, r24
    1e96:	c6 2f       	mov	r28, r22
	PORTB &= ~(1<<PB4); //slave select
    1e98:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(MCP_WRITE);
    1e9a:	82 e0       	ldi	r24, 0x02	; 2
    1e9c:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	spi_write(address);
    1ea0:	8d 2f       	mov	r24, r29
    1ea2:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	spi_write(data);
    1ea6:	8c 2f       	mov	r24, r28
    1ea8:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	
	PORTB |= (1<<PB4); //slave deselect
    1eac:	c4 9a       	sbi	0x18, 4	; 24
}
    1eae:	df 91       	pop	r29
    1eb0:	cf 91       	pop	r28
    1eb2:	08 95       	ret

00001eb4 <mcp2515_request_to_send>:
void mcp2515_request_to_send(uint8_t command){
	PORTB &= ~(1<<PB4);
    1eb4:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(command);
    1eb6:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	
	
	PORTB |= (1<<PB4);
    1eba:	c4 9a       	sbi	0x18, 4	; 24
    1ebc:	08 95       	ret

00001ebe <mcp2515_bit_modify>:
}
void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data){
    1ebe:	1f 93       	push	r17
    1ec0:	cf 93       	push	r28
    1ec2:	df 93       	push	r29
    1ec4:	18 2f       	mov	r17, r24
    1ec6:	d6 2f       	mov	r29, r22
    1ec8:	c4 2f       	mov	r28, r20
	PORTB &= ~(1<<PB4); //slave select
    1eca:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(MCP_BITMOD);
    1ecc:	85 e0       	ldi	r24, 0x05	; 5
    1ece:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	spi_write(address);
    1ed2:	81 2f       	mov	r24, r17
    1ed4:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	spi_write(mask);
    1ed8:	8d 2f       	mov	r24, r29
    1eda:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	spi_write(data);
    1ede:	8c 2f       	mov	r24, r28
    1ee0:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	
	PORTB |= (1<<PB4); //slave deselect
    1ee4:	c4 9a       	sbi	0x18, 4	; 24
}
    1ee6:	df 91       	pop	r29
    1ee8:	cf 91       	pop	r28
    1eea:	1f 91       	pop	r17
    1eec:	08 95       	ret

00001eee <mcp2515_reset>:
void mcp2515_reset(){
	PORTB &= ~(1<<PB4); //slave select
    1eee:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(MCP_RESET);
    1ef0:	80 ec       	ldi	r24, 0xC0	; 192
    1ef2:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	
	PORTB |= (1<<PB4); //slave deselect
    1ef6:	c4 9a       	sbi	0x18, 4	; 24
    1ef8:	08 95       	ret

00001efa <mcp2515_init>:
//MCP_CANINTE to enable interupts
//MCP_CANINTF to read and clear interupts, need to clear before we can continue transmitting

void mcp2515_init(){
	
	spi_init();
    1efa:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <spi_init>
	mcp2515_reset();
    1efe:	0e 94 77 0f 	call	0x1eee	; 0x1eee <mcp2515_reset>
    1f02:	08 95       	ret

00001f04 <mcp2515_read_status>:
	PORTB |= (1<<PB4); //slave deselect
}
uint8_t mcp2515_read_status(){
	uint8_t result;
	
	PORTB &= ~(1<<PB4); //slave select
    1f04:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(MCP_READ_STATUS);
    1f06:	80 ea       	ldi	r24, 0xA0	; 160
    1f08:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	result = spi_read();
    1f0c:	0e 94 99 15 	call	0x2b32	; 0x2b32 <spi_read>
	
	
	PORTB |= (1<<PB4); //slave deselect
    1f10:	c4 9a       	sbi	0x18, 4	; 24
	
	return result;
}
    1f12:	08 95       	ret

00001f14 <show_credits>:
		(*(next_menu->fun_ptr));
	}*/

	write_menu_to_screen(next_menu);
	*menuHead = next_menu;
}
    1f14:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    1f18:	8a e0       	ldi	r24, 0x0A	; 10
    1f1a:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    1f1e:	45 e0       	ldi	r20, 0x05	; 5
    1f20:	6f e1       	ldi	r22, 0x1F	; 31
    1f22:	71 e0       	ldi	r23, 0x01	; 1
    1f24:	80 e0       	ldi	r24, 0x00	; 0
    1f26:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    1f2a:	8a e0       	ldi	r24, 0x0A	; 10
    1f2c:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    1f30:	45 e0       	ldi	r20, 0x05	; 5
    1f32:	68 e2       	ldi	r22, 0x28	; 40
    1f34:	71 e0       	ldi	r23, 0x01	; 1
    1f36:	82 e0       	ldi	r24, 0x02	; 2
    1f38:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    1f3c:	8a e0       	ldi	r24, 0x0A	; 10
    1f3e:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    1f42:	45 e0       	ldi	r20, 0x05	; 5
    1f44:	66 e3       	ldi	r22, 0x36	; 54
    1f46:	71 e0       	ldi	r23, 0x01	; 1
    1f48:	83 e0       	ldi	r24, 0x03	; 3
    1f4a:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    1f4e:	8a e0       	ldi	r24, 0x0A	; 10
    1f50:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    1f54:	45 e0       	ldi	r20, 0x05	; 5
    1f56:	63 e4       	ldi	r22, 0x43	; 67
    1f58:	71 e0       	ldi	r23, 0x01	; 1
    1f5a:	84 e0       	ldi	r24, 0x04	; 4
    1f5c:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    1f60:	8a e0       	ldi	r24, 0x0A	; 10
    1f62:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    1f66:	45 e0       	ldi	r20, 0x05	; 5
    1f68:	60 e5       	ldi	r22, 0x50	; 80
    1f6a:	71 e0       	ldi	r23, 0x01	; 1
    1f6c:	86 e0       	ldi	r24, 0x06	; 6
    1f6e:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    1f72:	8a e0       	ldi	r24, 0x0A	; 10
    1f74:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    1f78:	45 e0       	ldi	r20, 0x05	; 5
    1f7a:	68 e5       	ldi	r22, 0x58	; 88
    1f7c:	71 e0       	ldi	r23, 0x01	; 1
    1f7e:	87 e0       	ldi	r24, 0x07	; 7
    1f80:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    1f84:	2f ef       	ldi	r18, 0xFF	; 255
    1f86:	8f e7       	ldi	r24, 0x7F	; 127
    1f88:	96 e1       	ldi	r25, 0x16	; 22
    1f8a:	21 50       	subi	r18, 0x01	; 1
    1f8c:	80 40       	sbci	r24, 0x00	; 0
    1f8e:	90 40       	sbci	r25, 0x00	; 0
    1f90:	e1 f7       	brne	.-8      	; 0x1f8a <show_credits+0x76>
    1f92:	00 c0       	rjmp	.+0      	; 0x1f94 <show_credits+0x80>
    1f94:	00 c0       	rjmp	.+0      	; 0x1f96 <show_credits+0x82>
    1f96:	08 95       	ret

00001f98 <reset_scores>:
    1f98:	81 e0       	ldi	r24, 0x01	; 1
    1f9a:	90 e0       	ldi	r25, 0x00	; 0
    1f9c:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    1fa0:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    1fa4:	e8 0f       	add	r30, r24
    1fa6:	f9 1f       	adc	r31, r25
    1fa8:	10 82       	st	Z, r1
    1faa:	01 96       	adiw	r24, 0x01	; 1
    1fac:	85 30       	cpi	r24, 0x05	; 5
    1fae:	91 05       	cpc	r25, r1
    1fb0:	a9 f7       	brne	.-22     	; 0x1f9c <reset_scores+0x4>
    1fb2:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    1fb6:	8a e0       	ldi	r24, 0x0A	; 10
    1fb8:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    1fbc:	45 e0       	ldi	r20, 0x05	; 5
    1fbe:	6a e6       	ldi	r22, 0x6A	; 106
    1fc0:	71 e0       	ldi	r23, 0x01	; 1
    1fc2:	80 e0       	ldi	r24, 0x00	; 0
    1fc4:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    1fc8:	2f ef       	ldi	r18, 0xFF	; 255
    1fca:	8f e7       	ldi	r24, 0x7F	; 127
    1fcc:	96 e1       	ldi	r25, 0x16	; 22
    1fce:	21 50       	subi	r18, 0x01	; 1
    1fd0:	80 40       	sbci	r24, 0x00	; 0
    1fd2:	90 40       	sbci	r25, 0x00	; 0
    1fd4:	e1 f7       	brne	.-8      	; 0x1fce <reset_scores+0x36>
    1fd6:	00 c0       	rjmp	.+0      	; 0x1fd8 <reset_scores+0x40>
    1fd8:	00 c0       	rjmp	.+0      	; 0x1fda <reset_scores+0x42>
    1fda:	08 95       	ret

00001fdc <wojakprinter>:
    1fdc:	ef 92       	push	r14
    1fde:	0f 93       	push	r16
    1fe0:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    1fe4:	e1 2c       	mov	r14, r1
    1fe6:	02 e0       	ldi	r16, 0x02	; 2
    1fe8:	28 e2       	ldi	r18, 0x28	; 40
    1fea:	48 e2       	ldi	r20, 0x28	; 40
    1fec:	50 e0       	ldi	r21, 0x00	; 0
    1fee:	60 e4       	ldi	r22, 0x40	; 64
    1ff0:	70 e0       	ldi	r23, 0x00	; 0
    1ff2:	80 e7       	ldi	r24, 0x70	; 112
    1ff4:	9a e0       	ldi	r25, 0x0A	; 10
    1ff6:	0e 94 39 18 	call	0x3072	; 0x3072 <character_printer>
    1ffa:	2f ef       	ldi	r18, 0xFF	; 255
    1ffc:	8f ef       	ldi	r24, 0xFF	; 255
    1ffe:	9e e0       	ldi	r25, 0x0E	; 14
    2000:	21 50       	subi	r18, 0x01	; 1
    2002:	80 40       	sbci	r24, 0x00	; 0
    2004:	90 40       	sbci	r25, 0x00	; 0
    2006:	e1 f7       	brne	.-8      	; 0x2000 <wojakprinter+0x24>
    2008:	00 c0       	rjmp	.+0      	; 0x200a <wojakprinter+0x2e>
    200a:	00 00       	nop
    200c:	b1 99       	sbic	0x16, 1	; 22
    200e:	fe cf       	rjmp	.-4      	; 0x200c <wojakprinter+0x30>
    2010:	0f 91       	pop	r16
    2012:	ef 90       	pop	r14
    2014:	08 95       	ret

00002016 <choose_character>:
    2016:	ef 92       	push	r14
    2018:	0f 93       	push	r16
    201a:	1f 93       	push	r17
    201c:	cf 93       	push	r28
    201e:	df 93       	push	r29
    2020:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    2024:	45 e0       	ldi	r20, 0x05	; 5
    2026:	6b e7       	ldi	r22, 0x7B	; 123
    2028:	71 e0       	ldi	r23, 0x01	; 1
    202a:	80 e0       	ldi	r24, 0x00	; 0
    202c:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2030:	ee 24       	eor	r14, r14
    2032:	e3 94       	inc	r14
    2034:	01 e0       	ldi	r16, 0x01	; 1
    2036:	20 e0       	ldi	r18, 0x00	; 0
    2038:	48 e2       	ldi	r20, 0x28	; 40
    203a:	50 e0       	ldi	r21, 0x00	; 0
    203c:	60 e4       	ldi	r22, 0x40	; 64
    203e:	70 e0       	ldi	r23, 0x00	; 0
    2040:	80 e7       	ldi	r24, 0x70	; 112
    2042:	9a e0       	ldi	r25, 0x0A	; 10
    2044:	0e 94 39 18 	call	0x3072	; 0x3072 <character_printer>
    2048:	e1 2c       	mov	r14, r1
    204a:	20 e4       	ldi	r18, 0x40	; 64
    204c:	48 e2       	ldi	r20, 0x28	; 40
    204e:	50 e0       	ldi	r21, 0x00	; 0
    2050:	60 e4       	ldi	r22, 0x40	; 64
    2052:	70 e0       	ldi	r23, 0x00	; 0
    2054:	80 e7       	ldi	r24, 0x70	; 112
    2056:	90 e0       	ldi	r25, 0x00	; 0
    2058:	0e 94 39 18 	call	0x3072	; 0x3072 <character_printer>
    205c:	10 e0       	ldi	r17, 0x00	; 0
    205e:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <update_adc_values>
    2062:	80 b3       	in	r24, 0x10	; 16
    2064:	80 b3       	in	r24, 0x10	; 16
    2066:	d6 b3       	in	r29, 0x16	; 22
    2068:	d2 70       	andi	r29, 0x02	; 2
    206a:	8c 2f       	mov	r24, r28
    206c:	0e 94 33 16 	call	0x2c66	; 0x2c66 <joystick_direction>
    2070:	c8 2f       	mov	r28, r24
    2072:	8c ef       	ldi	r24, 0xFC	; 252
    2074:	8c 0f       	add	r24, r28
    2076:	82 30       	cpi	r24, 0x02	; 2
    2078:	08 f4       	brcc	.+2      	; 0x207c <choose_character+0x66>
    207a:	43 c0       	rjmp	.+134    	; 0x2102 <choose_character+0xec>
    207c:	c1 30       	cpi	r28, 0x01	; 1
    207e:	01 f5       	brne	.+64     	; 0x20c0 <choose_character+0xaa>
    2080:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    2084:	45 e0       	ldi	r20, 0x05	; 5
    2086:	6b e7       	ldi	r22, 0x7B	; 123
    2088:	71 e0       	ldi	r23, 0x01	; 1
    208a:	80 e0       	ldi	r24, 0x00	; 0
    208c:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2090:	e1 2c       	mov	r14, r1
    2092:	01 e0       	ldi	r16, 0x01	; 1
    2094:	20 e0       	ldi	r18, 0x00	; 0
    2096:	48 e2       	ldi	r20, 0x28	; 40
    2098:	50 e0       	ldi	r21, 0x00	; 0
    209a:	60 e4       	ldi	r22, 0x40	; 64
    209c:	70 e0       	ldi	r23, 0x00	; 0
    209e:	80 e7       	ldi	r24, 0x70	; 112
    20a0:	9a e0       	ldi	r25, 0x0A	; 10
    20a2:	0e 94 39 18 	call	0x3072	; 0x3072 <character_printer>
    20a6:	ee 24       	eor	r14, r14
    20a8:	e3 94       	inc	r14
    20aa:	20 e4       	ldi	r18, 0x40	; 64
    20ac:	48 e2       	ldi	r20, 0x28	; 40
    20ae:	50 e0       	ldi	r21, 0x00	; 0
    20b0:	60 e4       	ldi	r22, 0x40	; 64
    20b2:	70 e0       	ldi	r23, 0x00	; 0
    20b4:	80 e7       	ldi	r24, 0x70	; 112
    20b6:	90 e0       	ldi	r25, 0x00	; 0
    20b8:	0e 94 39 18 	call	0x3072	; 0x3072 <character_printer>
    20bc:	11 e0       	ldi	r17, 0x01	; 1
    20be:	21 c0       	rjmp	.+66     	; 0x2102 <choose_character+0xec>
    20c0:	c1 11       	cpse	r28, r1
    20c2:	1f c0       	rjmp	.+62     	; 0x2102 <choose_character+0xec>
    20c4:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    20c8:	45 e0       	ldi	r20, 0x05	; 5
    20ca:	6b e7       	ldi	r22, 0x7B	; 123
    20cc:	71 e0       	ldi	r23, 0x01	; 1
    20ce:	80 e0       	ldi	r24, 0x00	; 0
    20d0:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    20d4:	ee 24       	eor	r14, r14
    20d6:	e3 94       	inc	r14
    20d8:	01 e0       	ldi	r16, 0x01	; 1
    20da:	20 e0       	ldi	r18, 0x00	; 0
    20dc:	48 e2       	ldi	r20, 0x28	; 40
    20de:	50 e0       	ldi	r21, 0x00	; 0
    20e0:	60 e4       	ldi	r22, 0x40	; 64
    20e2:	70 e0       	ldi	r23, 0x00	; 0
    20e4:	80 e7       	ldi	r24, 0x70	; 112
    20e6:	9a e0       	ldi	r25, 0x0A	; 10
    20e8:	0e 94 39 18 	call	0x3072	; 0x3072 <character_printer>
    20ec:	e1 2c       	mov	r14, r1
    20ee:	20 e4       	ldi	r18, 0x40	; 64
    20f0:	48 e2       	ldi	r20, 0x28	; 40
    20f2:	50 e0       	ldi	r21, 0x00	; 0
    20f4:	60 e4       	ldi	r22, 0x40	; 64
    20f6:	70 e0       	ldi	r23, 0x00	; 0
    20f8:	80 e7       	ldi	r24, 0x70	; 112
    20fa:	90 e0       	ldi	r25, 0x00	; 0
    20fc:	0e 94 39 18 	call	0x3072	; 0x3072 <character_printer>
    2100:	10 e0       	ldi	r17, 0x00	; 0
    2102:	8d 2f       	mov	r24, r29
    2104:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <button_check>
    2108:	88 23       	and	r24, r24
    210a:	09 f4       	brne	.+2      	; 0x210e <choose_character+0xf8>
    210c:	a8 cf       	rjmp	.-176    	; 0x205e <choose_character+0x48>
    210e:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    2112:	11 11       	cpse	r17, r1
    2114:	0c c0       	rjmp	.+24     	; 0x212e <choose_character+0x118>
    2116:	45 e0       	ldi	r20, 0x05	; 5
    2118:	63 e8       	ldi	r22, 0x83	; 131
    211a:	71 e0       	ldi	r23, 0x01	; 1
    211c:	83 e0       	ldi	r24, 0x03	; 3
    211e:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2122:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    2126:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    212a:	10 82       	st	Z, r1
    212c:	0c c0       	rjmp	.+24     	; 0x2146 <choose_character+0x130>
    212e:	45 e0       	ldi	r20, 0x05	; 5
    2130:	60 e9       	ldi	r22, 0x90	; 144
    2132:	71 e0       	ldi	r23, 0x01	; 1
    2134:	83 e0       	ldi	r24, 0x03	; 3
    2136:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    213a:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    213e:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    2142:	81 e0       	ldi	r24, 0x01	; 1
    2144:	80 83       	st	Z, r24
    2146:	2f ef       	ldi	r18, 0xFF	; 255
    2148:	8f e7       	ldi	r24, 0x7F	; 127
    214a:	9a e0       	ldi	r25, 0x0A	; 10
    214c:	21 50       	subi	r18, 0x01	; 1
    214e:	80 40       	sbci	r24, 0x00	; 0
    2150:	90 40       	sbci	r25, 0x00	; 0
    2152:	e1 f7       	brne	.-8      	; 0x214c <choose_character+0x136>
    2154:	00 c0       	rjmp	.+0      	; 0x2156 <choose_character+0x140>
    2156:	00 c0       	rjmp	.+0      	; 0x2158 <choose_character+0x142>
    2158:	df 91       	pop	r29
    215a:	cf 91       	pop	r28
    215c:	1f 91       	pop	r17
    215e:	0f 91       	pop	r16
    2160:	ef 90       	pop	r14
    2162:	08 95       	ret

00002164 <hiscore>:
    2164:	ef 92       	push	r14
    2166:	ff 92       	push	r15
    2168:	0f 93       	push	r16
    216a:	1f 93       	push	r17
    216c:	cf 93       	push	r28
    216e:	df 93       	push	r29
    2170:	00 d0       	rcall	.+0      	; 0x2172 <hiscore+0xe>
    2172:	00 d0       	rcall	.+0      	; 0x2174 <hiscore+0x10>
    2174:	00 d0       	rcall	.+0      	; 0x2176 <hiscore+0x12>
    2176:	cd b7       	in	r28, 0x3d	; 61
    2178:	de b7       	in	r29, 0x3e	; 62
    217a:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    217e:	8a e0       	ldi	r24, 0x0A	; 10
    2180:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2184:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    2188:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    218c:	21 81       	ldd	r18, Z+1	; 0x01
    218e:	82 81       	ldd	r24, Z+2	; 0x02
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	98 2f       	mov	r25, r24
    2194:	88 27       	eor	r24, r24
    2196:	82 0f       	add	r24, r18
    2198:	91 1d       	adc	r25, r1
    219a:	9f 93       	push	r25
    219c:	8f 93       	push	r24
    219e:	0f 2e       	mov	r0, r31
    21a0:	fc e9       	ldi	r31, 0x9C	; 156
    21a2:	ef 2e       	mov	r14, r31
    21a4:	f1 e0       	ldi	r31, 0x01	; 1
    21a6:	ff 2e       	mov	r15, r31
    21a8:	f0 2d       	mov	r31, r0
    21aa:	ff 92       	push	r15
    21ac:	ef 92       	push	r14
    21ae:	8e 01       	movw	r16, r28
    21b0:	0f 5f       	subi	r16, 0xFF	; 255
    21b2:	1f 4f       	sbci	r17, 0xFF	; 255
    21b4:	1f 93       	push	r17
    21b6:	0f 93       	push	r16
    21b8:	0e 94 f6 1a 	call	0x35ec	; 0x35ec <sprintf>
    21bc:	45 e0       	ldi	r20, 0x05	; 5
    21be:	6f e9       	ldi	r22, 0x9F	; 159
    21c0:	71 e0       	ldi	r23, 0x01	; 1
    21c2:	81 e0       	ldi	r24, 0x01	; 1
    21c4:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    21c8:	8a e0       	ldi	r24, 0x0A	; 10
    21ca:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    21ce:	45 e0       	ldi	r20, 0x05	; 5
    21d0:	b8 01       	movw	r22, r16
    21d2:	82 e0       	ldi	r24, 0x02	; 2
    21d4:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    21d8:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    21dc:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    21e0:	23 81       	ldd	r18, Z+3	; 0x03
    21e2:	84 81       	ldd	r24, Z+4	; 0x04
    21e4:	90 e0       	ldi	r25, 0x00	; 0
    21e6:	98 2f       	mov	r25, r24
    21e8:	88 27       	eor	r24, r24
    21ea:	82 0f       	add	r24, r18
    21ec:	91 1d       	adc	r25, r1
    21ee:	9f 93       	push	r25
    21f0:	8f 93       	push	r24
    21f2:	ff 92       	push	r15
    21f4:	ef 92       	push	r14
    21f6:	1f 93       	push	r17
    21f8:	0f 93       	push	r16
    21fa:	0e 94 f6 1a 	call	0x35ec	; 0x35ec <sprintf>
    21fe:	8a e0       	ldi	r24, 0x0A	; 10
    2200:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2204:	45 e0       	ldi	r20, 0x05	; 5
    2206:	61 eb       	ldi	r22, 0xB1	; 177
    2208:	71 e0       	ldi	r23, 0x01	; 1
    220a:	84 e0       	ldi	r24, 0x04	; 4
    220c:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2210:	8a e0       	ldi	r24, 0x0A	; 10
    2212:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2216:	45 e0       	ldi	r20, 0x05	; 5
    2218:	b8 01       	movw	r22, r16
    221a:	85 e0       	ldi	r24, 0x05	; 5
    221c:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2220:	2f ef       	ldi	r18, 0xFF	; 255
    2222:	8f e7       	ldi	r24, 0x7F	; 127
    2224:	96 e1       	ldi	r25, 0x16	; 22
    2226:	21 50       	subi	r18, 0x01	; 1
    2228:	80 40       	sbci	r24, 0x00	; 0
    222a:	90 40       	sbci	r25, 0x00	; 0
    222c:	e1 f7       	brne	.-8      	; 0x2226 <hiscore+0xc2>
    222e:	00 c0       	rjmp	.+0      	; 0x2230 <hiscore+0xcc>
    2230:	00 c0       	rjmp	.+0      	; 0x2232 <hiscore+0xce>
    2232:	0f b6       	in	r0, 0x3f	; 63
    2234:	f8 94       	cli
    2236:	de bf       	out	0x3e, r29	; 62
    2238:	0f be       	out	0x3f, r0	; 63
    223a:	cd bf       	out	0x3d, r28	; 61
    223c:	26 96       	adiw	r28, 0x06	; 6
    223e:	0f b6       	in	r0, 0x3f	; 63
    2240:	f8 94       	cli
    2242:	de bf       	out	0x3e, r29	; 62
    2244:	0f be       	out	0x3f, r0	; 63
    2246:	cd bf       	out	0x3d, r28	; 61
    2248:	df 91       	pop	r29
    224a:	cf 91       	pop	r28
    224c:	1f 91       	pop	r17
    224e:	0f 91       	pop	r16
    2250:	ff 90       	pop	r15
    2252:	ef 90       	pop	r14
    2254:	08 95       	ret

00002256 <calibrate>:
    2256:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    225a:	80 e0       	ldi	r24, 0x00	; 0
    225c:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    2260:	8a e0       	ldi	r24, 0x0A	; 10
    2262:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2266:	45 e0       	ldi	r20, 0x05	; 5
    2268:	62 ec       	ldi	r22, 0xC2	; 194
    226a:	71 e0       	ldi	r23, 0x01	; 1
    226c:	80 e0       	ldi	r24, 0x00	; 0
    226e:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2272:	45 e0       	ldi	r20, 0x05	; 5
    2274:	69 ed       	ldi	r22, 0xD9	; 217
    2276:	71 e0       	ldi	r23, 0x01	; 1
    2278:	83 e0       	ldi	r24, 0x03	; 3
    227a:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    227e:	2f ef       	ldi	r18, 0xFF	; 255
    2280:	8f e7       	ldi	r24, 0x7F	; 127
    2282:	96 e1       	ldi	r25, 0x16	; 22
    2284:	21 50       	subi	r18, 0x01	; 1
    2286:	80 40       	sbci	r24, 0x00	; 0
    2288:	90 40       	sbci	r25, 0x00	; 0
    228a:	e1 f7       	brne	.-8      	; 0x2284 <calibrate+0x2e>
    228c:	00 c0       	rjmp	.+0      	; 0x228e <calibrate+0x38>
    228e:	00 c0       	rjmp	.+0      	; 0x2290 <calibrate+0x3a>
    2290:	48 e0       	ldi	r20, 0x08	; 8
    2292:	61 eb       	ldi	r22, 0xB1	; 177
    2294:	73 e0       	ldi	r23, 0x03	; 3
    2296:	84 e0       	ldi	r24, 0x04	; 4
    2298:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    229c:	2f ef       	ldi	r18, 0xFF	; 255
    229e:	8f e7       	ldi	r24, 0x7F	; 127
    22a0:	96 e1       	ldi	r25, 0x16	; 22
    22a2:	21 50       	subi	r18, 0x01	; 1
    22a4:	80 40       	sbci	r24, 0x00	; 0
    22a6:	90 40       	sbci	r25, 0x00	; 0
    22a8:	e1 f7       	brne	.-8      	; 0x22a2 <calibrate+0x4c>
    22aa:	00 c0       	rjmp	.+0      	; 0x22ac <calibrate+0x56>
    22ac:	00 c0       	rjmp	.+0      	; 0x22ae <calibrate+0x58>
    22ae:	48 e0       	ldi	r20, 0x08	; 8
    22b0:	68 ea       	ldi	r22, 0xA8	; 168
    22b2:	73 e0       	ldi	r23, 0x03	; 3
    22b4:	84 e0       	ldi	r24, 0x04	; 4
    22b6:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    22ba:	2f ef       	ldi	r18, 0xFF	; 255
    22bc:	8f e7       	ldi	r24, 0x7F	; 127
    22be:	96 e1       	ldi	r25, 0x16	; 22
    22c0:	21 50       	subi	r18, 0x01	; 1
    22c2:	80 40       	sbci	r24, 0x00	; 0
    22c4:	90 40       	sbci	r25, 0x00	; 0
    22c6:	e1 f7       	brne	.-8      	; 0x22c0 <calibrate+0x6a>
    22c8:	00 c0       	rjmp	.+0      	; 0x22ca <calibrate+0x74>
    22ca:	00 c0       	rjmp	.+0      	; 0x22cc <calibrate+0x76>
    22cc:	48 e0       	ldi	r20, 0x08	; 8
    22ce:	6f e9       	ldi	r22, 0x9F	; 159
    22d0:	73 e0       	ldi	r23, 0x03	; 3
    22d2:	84 e0       	ldi	r24, 0x04	; 4
    22d4:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    22d8:	2f ef       	ldi	r18, 0xFF	; 255
    22da:	8f e7       	ldi	r24, 0x7F	; 127
    22dc:	96 e1       	ldi	r25, 0x16	; 22
    22de:	21 50       	subi	r18, 0x01	; 1
    22e0:	80 40       	sbci	r24, 0x00	; 0
    22e2:	90 40       	sbci	r25, 0x00	; 0
    22e4:	e1 f7       	brne	.-8      	; 0x22de <calibrate+0x88>
    22e6:	00 c0       	rjmp	.+0      	; 0x22e8 <calibrate+0x92>
    22e8:	00 c0       	rjmp	.+0      	; 0x22ea <calibrate+0x94>
    22ea:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <calc_offset>
    22ee:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    22f2:	80 e0       	ldi	r24, 0x00	; 0
    22f4:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    22f8:	8a e0       	ldi	r24, 0x0A	; 10
    22fa:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    22fe:	45 e0       	ldi	r20, 0x05	; 5
    2300:	69 ee       	ldi	r22, 0xE9	; 233
    2302:	71 e0       	ldi	r23, 0x01	; 1
    2304:	80 e0       	ldi	r24, 0x00	; 0
    2306:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    230a:	2f ef       	ldi	r18, 0xFF	; 255
    230c:	8f e7       	ldi	r24, 0x7F	; 127
    230e:	96 e1       	ldi	r25, 0x16	; 22
    2310:	21 50       	subi	r18, 0x01	; 1
    2312:	80 40       	sbci	r24, 0x00	; 0
    2314:	90 40       	sbci	r25, 0x00	; 0
    2316:	e1 f7       	brne	.-8      	; 0x2310 <calibrate+0xba>
    2318:	00 c0       	rjmp	.+0      	; 0x231a <calibrate+0xc4>
    231a:	00 c0       	rjmp	.+0      	; 0x231c <calibrate+0xc6>
    231c:	08 95       	ret

0000231e <play_game>:
    231e:	bf 92       	push	r11
    2320:	cf 92       	push	r12
    2322:	df 92       	push	r13
    2324:	ef 92       	push	r14
    2326:	ff 92       	push	r15
    2328:	0f 93       	push	r16
    232a:	1f 93       	push	r17
    232c:	cf 93       	push	r28
    232e:	df 93       	push	r29
    2330:	00 d0       	rcall	.+0      	; 0x2332 <play_game+0x14>
    2332:	00 d0       	rcall	.+0      	; 0x2334 <play_game+0x16>
    2334:	00 d0       	rcall	.+0      	; 0x2336 <play_game+0x18>
    2336:	cd b7       	in	r28, 0x3d	; 61
    2338:	de b7       	in	r29, 0x3e	; 62
    233a:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    233e:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <calc_offset>
    2342:	10 e0       	ldi	r17, 0x00	; 0
    2344:	0f 2e       	mov	r0, r31
    2346:	f4 e6       	ldi	r31, 0x64	; 100
    2348:	cf 2e       	mov	r12, r31
    234a:	d1 2c       	mov	r13, r1
    234c:	f0 2d       	mov	r31, r0
    234e:	b7 c0       	rjmp	.+366    	; 0x24be <play_game+0x1a0>
    2350:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <send_stick_can>
    2354:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <can_interrupted>
    2358:	88 23       	and	r24, r24
    235a:	09 f4       	brne	.+2      	; 0x235e <play_game+0x40>
    235c:	b0 c0       	rjmp	.+352    	; 0x24be <play_game+0x1a0>
    235e:	80 e0       	ldi	r24, 0x00	; 0
    2360:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <receive_can_msg>
    2364:	7c 01       	movw	r14, r24
    2366:	dc 01       	movw	r26, r24
    2368:	8d 91       	ld	r24, X+
    236a:	9c 91       	ld	r25, X
    236c:	84 30       	cpi	r24, 0x04	; 4
    236e:	91 05       	cpc	r25, r1
    2370:	09 f4       	brne	.+2      	; 0x2374 <play_game+0x56>
    2372:	68 c0       	rjmp	.+208    	; 0x2444 <play_game+0x126>
    2374:	87 30       	cpi	r24, 0x07	; 7
    2376:	91 05       	cpc	r25, r1
    2378:	09 f4       	brne	.+2      	; 0x237c <play_game+0x5e>
    237a:	98 c0       	rjmp	.+304    	; 0x24ac <play_game+0x18e>
    237c:	01 97       	sbiw	r24, 0x01	; 1
    237e:	09 f0       	breq	.+2      	; 0x2382 <play_game+0x64>
    2380:	9e c0       	rjmp	.+316    	; 0x24be <play_game+0x1a0>
    2382:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    2386:	8a e0       	ldi	r24, 0x0A	; 10
    2388:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    238c:	45 e0       	ldi	r20, 0x05	; 5
    238e:	6d ef       	ldi	r22, 0xFD	; 253
    2390:	71 e0       	ldi	r23, 0x01	; 1
    2392:	83 e0       	ldi	r24, 0x03	; 3
    2394:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2398:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    239c:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    23a0:	80 81       	ld	r24, Z
    23a2:	81 11       	cpse	r24, r1
    23a4:	0d c0       	rjmp	.+26     	; 0x23c0 <play_game+0xa2>
    23a6:	d7 01       	movw	r26, r14
    23a8:	13 96       	adiw	r26, 0x03	; 3
    23aa:	8c 91       	ld	r24, X
    23ac:	13 97       	sbiw	r26, 0x03	; 3
    23ae:	81 83       	std	Z+1, r24	; 0x01
    23b0:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    23b4:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    23b8:	14 96       	adiw	r26, 0x04	; 4
    23ba:	8c 91       	ld	r24, X
    23bc:	82 83       	std	Z+2, r24	; 0x02
    23be:	0b c0       	rjmp	.+22     	; 0x23d6 <play_game+0xb8>
    23c0:	80 81       	ld	r24, Z
    23c2:	88 23       	and	r24, r24
    23c4:	41 f0       	breq	.+16     	; 0x23d6 <play_game+0xb8>
    23c6:	d7 01       	movw	r26, r14
    23c8:	13 96       	adiw	r26, 0x03	; 3
    23ca:	8c 91       	ld	r24, X
    23cc:	13 97       	sbiw	r26, 0x03	; 3
    23ce:	83 83       	std	Z+3, r24	; 0x03
    23d0:	14 96       	adiw	r26, 0x04	; 4
    23d2:	8c 91       	ld	r24, X
    23d4:	84 83       	std	Z+4, r24	; 0x04
    23d6:	f7 01       	movw	r30, r14
    23d8:	84 81       	ldd	r24, Z+4	; 0x04
    23da:	08 2e       	mov	r0, r24
    23dc:	00 0c       	add	r0, r0
    23de:	99 0b       	sbc	r25, r25
    23e0:	98 2f       	mov	r25, r24
    23e2:	88 27       	eor	r24, r24
    23e4:	23 81       	ldd	r18, Z+3	; 0x03
    23e6:	82 0f       	add	r24, r18
    23e8:	91 1d       	adc	r25, r1
    23ea:	27 fd       	sbrc	r18, 7
    23ec:	9a 95       	dec	r25
    23ee:	9f 93       	push	r25
    23f0:	8f 93       	push	r24
    23f2:	8c e9       	ldi	r24, 0x9C	; 156
    23f4:	91 e0       	ldi	r25, 0x01	; 1
    23f6:	9f 93       	push	r25
    23f8:	8f 93       	push	r24
    23fa:	8e 01       	movw	r16, r28
    23fc:	0f 5f       	subi	r16, 0xFF	; 255
    23fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2400:	1f 93       	push	r17
    2402:	0f 93       	push	r16
    2404:	0e 94 f6 1a 	call	0x35ec	; 0x35ec <sprintf>
    2408:	8a e0       	ldi	r24, 0x0A	; 10
    240a:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    240e:	45 e0       	ldi	r20, 0x05	; 5
    2410:	68 e0       	ldi	r22, 0x08	; 8
    2412:	72 e0       	ldi	r23, 0x02	; 2
    2414:	84 e0       	ldi	r24, 0x04	; 4
    2416:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    241a:	48 e0       	ldi	r20, 0x08	; 8
    241c:	b8 01       	movw	r22, r16
    241e:	85 e0       	ldi	r24, 0x05	; 5
    2420:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2424:	ff ef       	ldi	r31, 0xFF	; 255
    2426:	2f e7       	ldi	r18, 0x7F	; 127
    2428:	34 e3       	ldi	r19, 0x34	; 52
    242a:	f1 50       	subi	r31, 0x01	; 1
    242c:	20 40       	sbci	r18, 0x00	; 0
    242e:	30 40       	sbci	r19, 0x00	; 0
    2430:	e1 f7       	brne	.-8      	; 0x242a <play_game+0x10c>
    2432:	00 c0       	rjmp	.+0      	; 0x2434 <play_game+0x116>
    2434:	00 00       	nop
    2436:	0f 90       	pop	r0
    2438:	0f 90       	pop	r0
    243a:	0f 90       	pop	r0
    243c:	0f 90       	pop	r0
    243e:	0f 90       	pop	r0
    2440:	0f 90       	pop	r0
    2442:	3f c0       	rjmp	.+126    	; 0x24c2 <play_game+0x1a4>
    2444:	88 e0       	ldi	r24, 0x08	; 8
    2446:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    244a:	05 e0       	ldi	r16, 0x05	; 5
    244c:	01 0f       	add	r16, r17
    244e:	81 2f       	mov	r24, r17
    2450:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2454:	80 e0       	ldi	r24, 0x00	; 0
    2456:	0e 94 7e 16 	call	0x2cfc	; 0x2cfc <oled_write_data>
    245a:	1f 5f       	subi	r17, 0xFF	; 255
    245c:	01 13       	cpse	r16, r17
    245e:	f7 cf       	rjmp	.-18     	; 0x244e <play_game+0x130>
    2460:	d7 01       	movw	r26, r14
    2462:	13 96       	adiw	r26, 0x03	; 3
    2464:	2c 91       	ld	r18, X
    2466:	38 e7       	ldi	r19, 0x78	; 120
    2468:	23 03       	mulsu	r18, r19
    246a:	c0 01       	movw	r24, r0
    246c:	11 24       	eor	r1, r1
    246e:	b6 01       	movw	r22, r12
    2470:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2474:	16 2f       	mov	r17, r22
    2476:	0f 2e       	mov	r0, r31
    2478:	f5 e0       	ldi	r31, 0x05	; 5
    247a:	bf 2e       	mov	r11, r31
    247c:	f0 2d       	mov	r31, r0
    247e:	b6 0e       	add	r11, r22
    2480:	06 2f       	mov	r16, r22
    2482:	80 2f       	mov	r24, r16
    2484:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2488:	80 ef       	ldi	r24, 0xF0	; 240
    248a:	0e 94 7e 16 	call	0x2cfc	; 0x2cfc <oled_write_data>
    248e:	0f 5f       	subi	r16, 0xFF	; 255
    2490:	0b 11       	cpse	r16, r11
    2492:	f7 cf       	rjmp	.-18     	; 0x2482 <play_game+0x164>
    2494:	d7 01       	movw	r26, r14
    2496:	14 96       	adiw	r26, 0x04	; 4
    2498:	8c 91       	ld	r24, X
    249a:	88 23       	and	r24, r24
    249c:	81 f0       	breq	.+32     	; 0x24be <play_game+0x1a0>
    249e:	45 e0       	ldi	r20, 0x05	; 5
    24a0:	64 e1       	ldi	r22, 0x14	; 20
    24a2:	72 e0       	ldi	r23, 0x02	; 2
    24a4:	83 e0       	ldi	r24, 0x03	; 3
    24a6:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    24aa:	09 c0       	rjmp	.+18     	; 0x24be <play_game+0x1a0>
    24ac:	f7 01       	movw	r30, r14
    24ae:	63 81       	ldd	r22, Z+3	; 0x03
    24b0:	06 2e       	mov	r0, r22
    24b2:	00 0c       	add	r0, r0
    24b4:	77 0b       	sbc	r23, r23
    24b6:	45 e0       	ldi	r20, 0x05	; 5
    24b8:	80 e0       	ldi	r24, 0x00	; 0
    24ba:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    24be:	85 9b       	sbis	0x10, 5	; 16
    24c0:	47 cf       	rjmp	.-370    	; 0x2350 <play_game+0x32>
    24c2:	26 96       	adiw	r28, 0x06	; 6
    24c4:	0f b6       	in	r0, 0x3f	; 63
    24c6:	f8 94       	cli
    24c8:	de bf       	out	0x3e, r29	; 62
    24ca:	0f be       	out	0x3f, r0	; 63
    24cc:	cd bf       	out	0x3d, r28	; 61
    24ce:	df 91       	pop	r29
    24d0:	cf 91       	pop	r28
    24d2:	1f 91       	pop	r17
    24d4:	0f 91       	pop	r16
    24d6:	ff 90       	pop	r15
    24d8:	ef 90       	pop	r14
    24da:	df 90       	pop	r13
    24dc:	cf 90       	pop	r12
    24de:	bf 90       	pop	r11
    24e0:	08 95       	ret

000024e2 <set_easy>:
    24e2:	81 e0       	ldi	r24, 0x01	; 1
    24e4:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <send_difficulty_can>
    24e8:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    24ec:	80 e0       	ldi	r24, 0x00	; 0
    24ee:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    24f2:	8a e0       	ldi	r24, 0x0A	; 10
    24f4:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    24f8:	45 e0       	ldi	r20, 0x05	; 5
    24fa:	69 e1       	ldi	r22, 0x19	; 25
    24fc:	72 e0       	ldi	r23, 0x02	; 2
    24fe:	80 e0       	ldi	r24, 0x00	; 0
    2500:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2504:	2f ef       	ldi	r18, 0xFF	; 255
    2506:	8f e7       	ldi	r24, 0x7F	; 127
    2508:	96 e1       	ldi	r25, 0x16	; 22
    250a:	21 50       	subi	r18, 0x01	; 1
    250c:	80 40       	sbci	r24, 0x00	; 0
    250e:	90 40       	sbci	r25, 0x00	; 0
    2510:	e1 f7       	brne	.-8      	; 0x250a <set_easy+0x28>
    2512:	00 c0       	rjmp	.+0      	; 0x2514 <set_easy+0x32>
    2514:	00 c0       	rjmp	.+0      	; 0x2516 <set_easy+0x34>
    2516:	08 95       	ret

00002518 <set_medium>:
    2518:	82 e0       	ldi	r24, 0x02	; 2
    251a:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <send_difficulty_can>
    251e:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    2522:	80 e0       	ldi	r24, 0x00	; 0
    2524:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    2528:	8a e0       	ldi	r24, 0x0A	; 10
    252a:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    252e:	45 e0       	ldi	r20, 0x05	; 5
    2530:	60 e3       	ldi	r22, 0x30	; 48
    2532:	72 e0       	ldi	r23, 0x02	; 2
    2534:	80 e0       	ldi	r24, 0x00	; 0
    2536:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    253a:	2f ef       	ldi	r18, 0xFF	; 255
    253c:	8f e7       	ldi	r24, 0x7F	; 127
    253e:	96 e1       	ldi	r25, 0x16	; 22
    2540:	21 50       	subi	r18, 0x01	; 1
    2542:	80 40       	sbci	r24, 0x00	; 0
    2544:	90 40       	sbci	r25, 0x00	; 0
    2546:	e1 f7       	brne	.-8      	; 0x2540 <set_medium+0x28>
    2548:	00 c0       	rjmp	.+0      	; 0x254a <set_medium+0x32>
    254a:	00 c0       	rjmp	.+0      	; 0x254c <set_medium+0x34>
    254c:	08 95       	ret

0000254e <set_hard>:
    254e:	83 e0       	ldi	r24, 0x03	; 3
    2550:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <send_difficulty_can>
    2554:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    2558:	80 e0       	ldi	r24, 0x00	; 0
    255a:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    255e:	8a e0       	ldi	r24, 0x0A	; 10
    2560:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2564:	45 e0       	ldi	r20, 0x05	; 5
    2566:	69 e4       	ldi	r22, 0x49	; 73
    2568:	72 e0       	ldi	r23, 0x02	; 2
    256a:	80 e0       	ldi	r24, 0x00	; 0
    256c:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2570:	2f ef       	ldi	r18, 0xFF	; 255
    2572:	8f e7       	ldi	r24, 0x7F	; 127
    2574:	96 e1       	ldi	r25, 0x16	; 22
    2576:	21 50       	subi	r18, 0x01	; 1
    2578:	80 40       	sbci	r24, 0x00	; 0
    257a:	90 40       	sbci	r25, 0x00	; 0
    257c:	e1 f7       	brne	.-8      	; 0x2576 <set_hard+0x28>
    257e:	00 c0       	rjmp	.+0      	; 0x2580 <set_hard+0x32>
    2580:	00 c0       	rjmp	.+0      	; 0x2582 <set_hard+0x34>
    2582:	08 95       	ret

00002584 <reaction_test>:
    2584:	cf 92       	push	r12
    2586:	df 92       	push	r13
    2588:	ef 92       	push	r14
    258a:	ff 92       	push	r15
    258c:	0f 93       	push	r16
    258e:	1f 93       	push	r17
    2590:	cf 93       	push	r28
    2592:	df 93       	push	r29
    2594:	00 d0       	rcall	.+0      	; 0x2596 <reaction_test+0x12>
    2596:	00 d0       	rcall	.+0      	; 0x2598 <reaction_test+0x14>
    2598:	00 d0       	rcall	.+0      	; 0x259a <reaction_test+0x16>
    259a:	cd b7       	in	r28, 0x3d	; 61
    259c:	de b7       	in	r29, 0x3e	; 62
    259e:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    25a2:	8a e0       	ldi	r24, 0x0A	; 10
    25a4:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    25a8:	45 e0       	ldi	r20, 0x05	; 5
    25aa:	60 e6       	ldi	r22, 0x60	; 96
    25ac:	72 e0       	ldi	r23, 0x02	; 2
    25ae:	80 e0       	ldi	r24, 0x00	; 0
    25b0:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    25b4:	8a e0       	ldi	r24, 0x0A	; 10
    25b6:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    25ba:	45 e0       	ldi	r20, 0x05	; 5
    25bc:	63 e7       	ldi	r22, 0x73	; 115
    25be:	72 e0       	ldi	r23, 0x02	; 2
    25c0:	81 e0       	ldi	r24, 0x01	; 1
    25c2:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    25c6:	8a e0       	ldi	r24, 0x0A	; 10
    25c8:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    25cc:	45 e0       	ldi	r20, 0x05	; 5
    25ce:	6f e7       	ldi	r22, 0x7F	; 127
    25d0:	72 e0       	ldi	r23, 0x02	; 2
    25d2:	82 e0       	ldi	r24, 0x02	; 2
    25d4:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    25d8:	8a e0       	ldi	r24, 0x0A	; 10
    25da:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    25de:	45 e0       	ldi	r20, 0x05	; 5
    25e0:	63 e9       	ldi	r22, 0x93	; 147
    25e2:	72 e0       	ldi	r23, 0x02	; 2
    25e4:	83 e0       	ldi	r24, 0x03	; 3
    25e6:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    25ea:	2f ef       	ldi	r18, 0xFF	; 255
    25ec:	8f e7       	ldi	r24, 0x7F	; 127
    25ee:	95 e2       	ldi	r25, 0x25	; 37
    25f0:	21 50       	subi	r18, 0x01	; 1
    25f2:	80 40       	sbci	r24, 0x00	; 0
    25f4:	90 40       	sbci	r25, 0x00	; 0
    25f6:	e1 f7       	brne	.-8      	; 0x25f0 <reaction_test+0x6c>
    25f8:	00 c0       	rjmp	.+0      	; 0x25fa <reaction_test+0x76>
    25fa:	00 00       	nop
    25fc:	10 e0       	ldi	r17, 0x00	; 0
    25fe:	0f 2e       	mov	r0, r31
    2600:	ff e1       	ldi	r31, 0x1F	; 31
    2602:	cf 2e       	mov	r12, r31
    2604:	d1 2c       	mov	r13, r1
    2606:	f0 2d       	mov	r31, r0
    2608:	ee 24       	eor	r14, r14
    260a:	e3 94       	inc	r14
    260c:	34 c0       	rjmp	.+104    	; 0x2676 <reaction_test+0xf2>
    260e:	ef ef       	ldi	r30, 0xFF	; 255
    2610:	ff e7       	ldi	r31, 0x7F	; 127
    2612:	21 e0       	ldi	r18, 0x01	; 1
    2614:	e1 50       	subi	r30, 0x01	; 1
    2616:	f0 40       	sbci	r31, 0x00	; 0
    2618:	20 40       	sbci	r18, 0x00	; 0
    261a:	e1 f7       	brne	.-8      	; 0x2614 <reaction_test+0x90>
    261c:	00 c0       	rjmp	.+0      	; 0x261e <reaction_test+0x9a>
    261e:	00 c0       	rjmp	.+0      	; 0x2620 <reaction_test+0x9c>
    2620:	0e 94 85 1a 	call	0x350a	; 0x350a <rand>
    2624:	b6 01       	movw	r22, r12
    2626:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    262a:	8a 30       	cpi	r24, 0x0A	; 10
    262c:	21 f5       	brne	.+72     	; 0x2676 <reaction_test+0xf2>
    262e:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <send_reaction_start_can>
    2632:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    2636:	0f 2d       	mov	r16, r15
    2638:	0f c0       	rjmp	.+30     	; 0x2658 <reaction_test+0xd4>
    263a:	81 2f       	mov	r24, r17
    263c:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2640:	80 2f       	mov	r24, r16
    2642:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    2646:	8f ef       	ldi	r24, 0xFF	; 255
    2648:	0e 94 7e 16 	call	0x2cfc	; 0x2cfc <oled_write_data>
    264c:	1f 5f       	subi	r17, 0xFF	; 255
    264e:	10 34       	cpi	r17, 0x40	; 64
    2650:	a1 f7       	brne	.-24     	; 0x263a <reaction_test+0xb6>
    2652:	0f 5f       	subi	r16, 0xFF	; 255
    2654:	08 30       	cpi	r16, 0x08	; 8
    2656:	11 f0       	breq	.+4      	; 0x265c <reaction_test+0xd8>
    2658:	1f 2d       	mov	r17, r15
    265a:	ef cf       	rjmp	.-34     	; 0x263a <reaction_test+0xb6>
    265c:	80 b3       	in	r24, 0x10	; 16
    265e:	80 71       	andi	r24, 0x10	; 16
    2660:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <button_check>
    2664:	81 11       	cpse	r24, r1
    2666:	06 c0       	rjmp	.+12     	; 0x2674 <reaction_test+0xf0>
    2668:	80 b3       	in	r24, 0x10	; 16
    266a:	80 72       	andi	r24, 0x20	; 32
    266c:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <button_check>
    2670:	88 23       	and	r24, r24
    2672:	a1 f3       	breq	.-24     	; 0x265c <reaction_test+0xd8>
    2674:	1e 2d       	mov	r17, r14
    2676:	80 b3       	in	r24, 0x10	; 16
    2678:	80 71       	andi	r24, 0x10	; 16
    267a:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <button_check>
    267e:	81 11       	cpse	r24, r1
    2680:	08 c0       	rjmp	.+16     	; 0x2692 <reaction_test+0x10e>
    2682:	80 b3       	in	r24, 0x10	; 16
    2684:	80 72       	andi	r24, 0x20	; 32
    2686:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <button_check>
    268a:	f8 2e       	mov	r15, r24
    268c:	88 23       	and	r24, r24
    268e:	09 f4       	brne	.+2      	; 0x2692 <reaction_test+0x10e>
    2690:	be cf       	rjmp	.-132    	; 0x260e <reaction_test+0x8a>
    2692:	11 11       	cpse	r17, r1
    2694:	15 c0       	rjmp	.+42     	; 0x26c0 <reaction_test+0x13c>
    2696:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    269a:	8a e0       	ldi	r24, 0x0A	; 10
    269c:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    26a0:	45 e0       	ldi	r20, 0x05	; 5
    26a2:	60 ea       	ldi	r22, 0xA0	; 160
    26a4:	72 e0       	ldi	r23, 0x02	; 2
    26a6:	80 e0       	ldi	r24, 0x00	; 0
    26a8:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    26ac:	8f ef       	ldi	r24, 0xFF	; 255
    26ae:	9f e7       	ldi	r25, 0x7F	; 127
    26b0:	e6 e1       	ldi	r30, 0x16	; 22
    26b2:	81 50       	subi	r24, 0x01	; 1
    26b4:	90 40       	sbci	r25, 0x00	; 0
    26b6:	e0 40       	sbci	r30, 0x00	; 0
    26b8:	e1 f7       	brne	.-8      	; 0x26b2 <reaction_test+0x12e>
    26ba:	00 c0       	rjmp	.+0      	; 0x26bc <reaction_test+0x138>
    26bc:	00 c0       	rjmp	.+0      	; 0x26be <reaction_test+0x13a>
    26be:	6e c0       	rjmp	.+220    	; 0x279c <reaction_test+0x218>
    26c0:	11 30       	cpi	r17, 0x01	; 1
    26c2:	09 f0       	breq	.+2      	; 0x26c6 <reaction_test+0x142>
    26c4:	57 c0       	rjmp	.+174    	; 0x2774 <reaction_test+0x1f0>
    26c6:	84 9b       	sbis	0x10, 4	; 16
    26c8:	55 c0       	rjmp	.+170    	; 0x2774 <reaction_test+0x1f0>
    26ca:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    26ce:	0e 94 1c 0f 	call	0x1e38	; 0x1e38 <send_reaction_stop_can>
    26d2:	80 e0       	ldi	r24, 0x00	; 0
    26d4:	90 ef       	ldi	r25, 0xF0	; 240
    26d6:	01 97       	sbiw	r24, 0x01	; 1
    26d8:	f1 f7       	brne	.-4      	; 0x26d6 <reaction_test+0x152>
    26da:	80 e0       	ldi	r24, 0x00	; 0
    26dc:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <receive_can_msg>
    26e0:	fc 01       	movw	r30, r24
    26e2:	20 81       	ld	r18, Z
    26e4:	22 30       	cpi	r18, 0x02	; 2
    26e6:	99 f7       	brne	.-26     	; 0x26ce <reaction_test+0x14a>
    26e8:	04 81       	ldd	r16, Z+4	; 0x04
    26ea:	00 2e       	mov	r0, r16
    26ec:	00 0c       	add	r0, r0
    26ee:	11 0b       	sbc	r17, r17
    26f0:	10 2f       	mov	r17, r16
    26f2:	00 27       	eor	r16, r16
    26f4:	83 81       	ldd	r24, Z+3	; 0x03
    26f6:	08 0f       	add	r16, r24
    26f8:	11 1d       	adc	r17, r1
    26fa:	87 fd       	sbrc	r24, 7
    26fc:	1a 95       	dec	r17
    26fe:	1f 93       	push	r17
    2700:	0f 93       	push	r16
    2702:	81 eb       	ldi	r24, 0xB1	; 177
    2704:	92 e0       	ldi	r25, 0x02	; 2
    2706:	9f 93       	push	r25
    2708:	8f 93       	push	r24
    270a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <printf>
    270e:	8a e0       	ldi	r24, 0x0A	; 10
    2710:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2714:	45 e0       	ldi	r20, 0x05	; 5
    2716:	6d eb       	ldi	r22, 0xBD	; 189
    2718:	72 e0       	ldi	r23, 0x02	; 2
    271a:	81 e0       	ldi	r24, 0x01	; 1
    271c:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2720:	8a e0       	ldi	r24, 0x0A	; 10
    2722:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2726:	1f 93       	push	r17
    2728:	0f 93       	push	r16
    272a:	8c e9       	ldi	r24, 0x9C	; 156
    272c:	91 e0       	ldi	r25, 0x01	; 1
    272e:	9f 93       	push	r25
    2730:	8f 93       	push	r24
    2732:	8e 01       	movw	r16, r28
    2734:	0f 5f       	subi	r16, 0xFF	; 255
    2736:	1f 4f       	sbci	r17, 0xFF	; 255
    2738:	1f 93       	push	r17
    273a:	0f 93       	push	r16
    273c:	0e 94 f6 1a 	call	0x35ec	; 0x35ec <sprintf>
    2740:	45 e0       	ldi	r20, 0x05	; 5
    2742:	b8 01       	movw	r22, r16
    2744:	82 e0       	ldi	r24, 0x02	; 2
    2746:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    274a:	45 e0       	ldi	r20, 0x05	; 5
    274c:	60 ed       	ldi	r22, 0xD0	; 208
    274e:	72 e0       	ldi	r23, 0x02	; 2
    2750:	83 e0       	ldi	r24, 0x03	; 3
    2752:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    2756:	ff ef       	ldi	r31, 0xFF	; 255
    2758:	2f e7       	ldi	r18, 0x7F	; 127
    275a:	85 e2       	ldi	r24, 0x25	; 37
    275c:	f1 50       	subi	r31, 0x01	; 1
    275e:	20 40       	sbci	r18, 0x00	; 0
    2760:	80 40       	sbci	r24, 0x00	; 0
    2762:	e1 f7       	brne	.-8      	; 0x275c <reaction_test+0x1d8>
    2764:	00 c0       	rjmp	.+0      	; 0x2766 <reaction_test+0x1e2>
    2766:	00 00       	nop
    2768:	0f b6       	in	r0, 0x3f	; 63
    276a:	f8 94       	cli
    276c:	de bf       	out	0x3e, r29	; 62
    276e:	0f be       	out	0x3f, r0	; 63
    2770:	cd bf       	out	0x3d, r28	; 61
    2772:	14 c0       	rjmp	.+40     	; 0x279c <reaction_test+0x218>
    2774:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
    2778:	8a e0       	ldi	r24, 0x0A	; 10
    277a:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    277e:	45 e0       	ldi	r20, 0x05	; 5
    2780:	6e ed       	ldi	r22, 0xDE	; 222
    2782:	72 e0       	ldi	r23, 0x02	; 2
    2784:	80 e0       	ldi	r24, 0x00	; 0
    2786:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    278a:	ff ef       	ldi	r31, 0xFF	; 255
    278c:	2f e7       	ldi	r18, 0x7F	; 127
    278e:	86 e1       	ldi	r24, 0x16	; 22
    2790:	f1 50       	subi	r31, 0x01	; 1
    2792:	20 40       	sbci	r18, 0x00	; 0
    2794:	80 40       	sbci	r24, 0x00	; 0
    2796:	e1 f7       	brne	.-8      	; 0x2790 <reaction_test+0x20c>
    2798:	00 c0       	rjmp	.+0      	; 0x279a <reaction_test+0x216>
    279a:	00 c0       	rjmp	.+0      	; 0x279c <reaction_test+0x218>
    279c:	26 96       	adiw	r28, 0x06	; 6
    279e:	0f b6       	in	r0, 0x3f	; 63
    27a0:	f8 94       	cli
    27a2:	de bf       	out	0x3e, r29	; 62
    27a4:	0f be       	out	0x3f, r0	; 63
    27a6:	cd bf       	out	0x3d, r28	; 61
    27a8:	df 91       	pop	r29
    27aa:	cf 91       	pop	r28
    27ac:	1f 91       	pop	r17
    27ae:	0f 91       	pop	r16
    27b0:	ff 90       	pop	r15
    27b2:	ef 90       	pop	r14
    27b4:	df 90       	pop	r13
    27b6:	cf 90       	pop	r12
    27b8:	08 95       	ret

000027ba <new_menu>:
    27ba:	cf 93       	push	r28
    27bc:	df 93       	push	r29
    27be:	ec 01       	movw	r28, r24
    27c0:	81 e3       	ldi	r24, 0x31	; 49
    27c2:	90 e0       	ldi	r25, 0x00	; 0
    27c4:	0e 94 18 19 	call	0x3230	; 0x3230 <malloc>
    27c8:	aa e0       	ldi	r26, 0x0A	; 10
    27ca:	b1 e0       	ldi	r27, 0x01	; 1
    27cc:	fc 01       	movw	r30, r24
    27ce:	4a e1       	ldi	r20, 0x1A	; 26
    27d0:	51 e0       	ldi	r21, 0x01	; 1
    27d2:	11 8a       	std	Z+17, r1	; 0x11
    27d4:	10 8a       	std	Z+16, r1	; 0x10
    27d6:	11 a2       	std	Z+33, r1	; 0x21
    27d8:	10 a2       	std	Z+32, r1	; 0x20
    27da:	2d 91       	ld	r18, X+
    27dc:	3d 91       	ld	r19, X+
    27de:	21 93       	st	Z+, r18
    27e0:	31 93       	st	Z+, r19
    27e2:	a4 17       	cp	r26, r20
    27e4:	b5 07       	cpc	r27, r21
    27e6:	a9 f7       	brne	.-22     	; 0x27d2 <new_menu+0x18>
    27e8:	fc 01       	movw	r30, r24
    27ea:	10 aa       	std	Z+48, r1	; 0x30
    27ec:	d7 8f       	std	Z+31, r29	; 0x1f
    27ee:	c6 8f       	std	Z+30, r28	; 0x1e
    27f0:	df 91       	pop	r29
    27f2:	cf 91       	pop	r28
    27f4:	08 95       	ret

000027f6 <invert_selected>:
    27f6:	cf 93       	push	r28
    27f8:	df 93       	push	r29
    27fa:	ec 01       	movw	r28, r24
    27fc:	80 e0       	ldi	r24, 0x00	; 0
    27fe:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2802:	88 a9       	ldd	r24, Y+48	; 0x30
    2804:	e8 2f       	mov	r30, r24
    2806:	f0 e0       	ldi	r31, 0x00	; 0
    2808:	ee 0f       	add	r30, r30
    280a:	ff 1f       	adc	r31, r31
    280c:	ec 0f       	add	r30, r28
    280e:	fd 1f       	adc	r31, r29
    2810:	60 81       	ld	r22, Z
    2812:	71 81       	ldd	r23, Z+1	; 0x01
    2814:	45 e0       	ldi	r20, 0x05	; 5
    2816:	0e 94 eb 17 	call	0x2fd6	; 0x2fd6 <oled_write_string_inverted>
    281a:	df 91       	pop	r29
    281c:	cf 91       	pop	r28
    281e:	08 95       	ret

00002820 <write_menu_to_screen>:
    2820:	ff 92       	push	r15
    2822:	0f 93       	push	r16
    2824:	1f 93       	push	r17
    2826:	cf 93       	push	r28
    2828:	df 93       	push	r29
    282a:	f8 2e       	mov	r15, r24
    282c:	d9 2f       	mov	r29, r25
    282e:	0e 94 d6 16 	call	0x2dac	; 0x2dac <clear_oled_new>
    2832:	0f 2d       	mov	r16, r15
    2834:	1d 2f       	mov	r17, r29
    2836:	c0 e0       	ldi	r28, 0x00	; 0
    2838:	80 e0       	ldi	r24, 0x00	; 0
    283a:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    283e:	f8 01       	movw	r30, r16
    2840:	61 91       	ld	r22, Z+
    2842:	71 91       	ld	r23, Z+
    2844:	8f 01       	movw	r16, r30
    2846:	45 e0       	ldi	r20, 0x05	; 5
    2848:	8c 2f       	mov	r24, r28
    284a:	0e 94 44 17 	call	0x2e88	; 0x2e88 <oled_write_string>
    284e:	cf 5f       	subi	r28, 0xFF	; 255
    2850:	c8 30       	cpi	r28, 0x08	; 8
    2852:	91 f7       	brne	.-28     	; 0x2838 <write_menu_to_screen+0x18>
    2854:	8f 2d       	mov	r24, r15
    2856:	9d 2f       	mov	r25, r29
    2858:	0e 94 fb 13 	call	0x27f6	; 0x27f6 <invert_selected>
    285c:	df 91       	pop	r29
    285e:	cf 91       	pop	r28
    2860:	1f 91       	pop	r17
    2862:	0f 91       	pop	r16
    2864:	ff 90       	pop	r15
    2866:	08 95       	ret

00002868 <change_selected>:
void invert_selected(menu* menuPointer){
	go_to_column(0);
	oled_write_string_inverted((menuPointer->selected), menuPointer->labels[(menuPointer->selected)], 5);
}

void change_selected(menu** menuHead, DIRECTION d){
    2868:	cf 93       	push	r28
    286a:	df 93       	push	r29
    286c:	dc 01       	movw	r26, r24
	if(d == UP){
    286e:	62 30       	cpi	r22, 0x02	; 2
    2870:	39 f5       	brne	.+78     	; 0x28c0 <change_selected+0x58>
		((*(menuHead))->selected)--;
    2872:	ed 91       	ld	r30, X+
    2874:	fc 91       	ld	r31, X
    2876:	11 97       	sbiw	r26, 0x01	; 1
    2878:	80 a9       	ldd	r24, Z+48	; 0x30
    287a:	81 50       	subi	r24, 0x01	; 1
    287c:	80 ab       	std	Z+48, r24	; 0x30
		while(((*(menuHead))->labels[((*(menuHead))->selected)]) == ""){
    287e:	cd 91       	ld	r28, X+
    2880:	dc 91       	ld	r29, X
    2882:	11 97       	sbiw	r26, 0x01	; 1
    2884:	98 a9       	ldd	r25, Y+48	; 0x30
    2886:	e9 2f       	mov	r30, r25
    2888:	f0 e0       	ldi	r31, 0x00	; 0
    288a:	ee 0f       	add	r30, r30
    288c:	ff 1f       	adc	r31, r31
    288e:	ec 0f       	add	r30, r28
    2890:	fd 1f       	adc	r31, r29
    2892:	20 81       	ld	r18, Z
    2894:	31 81       	ldd	r19, Z+1	; 0x01
    2896:	22 58       	subi	r18, 0x82	; 130
    2898:	31 40       	sbci	r19, 0x01	; 1
    289a:	d1 f5       	brne	.+116    	; 0x2910 <change_selected+0xa8>
			((*(menuHead))->selected)--;
    289c:	91 50       	subi	r25, 0x01	; 1
    289e:	98 ab       	std	Y+48, r25	; 0x30
}

void change_selected(menu** menuHead, DIRECTION d){
	if(d == UP){
		((*(menuHead))->selected)--;
		while(((*(menuHead))->labels[((*(menuHead))->selected)]) == ""){
    28a0:	cd 91       	ld	r28, X+
    28a2:	dc 91       	ld	r29, X
    28a4:	11 97       	sbiw	r26, 0x01	; 1
    28a6:	98 a9       	ldd	r25, Y+48	; 0x30
    28a8:	e9 2f       	mov	r30, r25
    28aa:	f0 e0       	ldi	r31, 0x00	; 0
    28ac:	ee 0f       	add	r30, r30
    28ae:	ff 1f       	adc	r31, r31
    28b0:	ec 0f       	add	r30, r28
    28b2:	fd 1f       	adc	r31, r29
    28b4:	20 81       	ld	r18, Z
    28b6:	31 81       	ldd	r19, Z+1	; 0x01
    28b8:	22 58       	subi	r18, 0x82	; 130
    28ba:	31 40       	sbci	r19, 0x01	; 1
    28bc:	79 f3       	breq	.-34     	; 0x289c <change_selected+0x34>
    28be:	28 c0       	rjmp	.+80     	; 0x2910 <change_selected+0xa8>
			((*(menuHead))->selected)--;
		}
	}
	if(d == DOWN){
    28c0:	63 30       	cpi	r22, 0x03	; 3
    28c2:	31 f5       	brne	.+76     	; 0x2910 <change_selected+0xa8>
		((*(menuHead))->selected)++;
    28c4:	ed 91       	ld	r30, X+
    28c6:	fc 91       	ld	r31, X
    28c8:	11 97       	sbiw	r26, 0x01	; 1
    28ca:	80 a9       	ldd	r24, Z+48	; 0x30
    28cc:	8f 5f       	subi	r24, 0xFF	; 255
    28ce:	80 ab       	std	Z+48, r24	; 0x30
		while(((*(menuHead))->labels[((*(menuHead))->selected)]) == ""){
    28d0:	cd 91       	ld	r28, X+
    28d2:	dc 91       	ld	r29, X
    28d4:	11 97       	sbiw	r26, 0x01	; 1
    28d6:	98 a9       	ldd	r25, Y+48	; 0x30
    28d8:	e9 2f       	mov	r30, r25
    28da:	f0 e0       	ldi	r31, 0x00	; 0
    28dc:	ee 0f       	add	r30, r30
    28de:	ff 1f       	adc	r31, r31
    28e0:	ec 0f       	add	r30, r28
    28e2:	fd 1f       	adc	r31, r29
    28e4:	20 81       	ld	r18, Z
    28e6:	31 81       	ldd	r19, Z+1	; 0x01
    28e8:	22 58       	subi	r18, 0x82	; 130
    28ea:	31 40       	sbci	r19, 0x01	; 1
    28ec:	89 f4       	brne	.+34     	; 0x2910 <change_selected+0xa8>
			((*(menuHead))->selected)++;
    28ee:	9f 5f       	subi	r25, 0xFF	; 255
    28f0:	98 ab       	std	Y+48, r25	; 0x30
			((*(menuHead))->selected)--;
		}
	}
	if(d == DOWN){
		((*(menuHead))->selected)++;
		while(((*(menuHead))->labels[((*(menuHead))->selected)]) == ""){
    28f2:	cd 91       	ld	r28, X+
    28f4:	dc 91       	ld	r29, X
    28f6:	11 97       	sbiw	r26, 0x01	; 1
    28f8:	98 a9       	ldd	r25, Y+48	; 0x30
    28fa:	e9 2f       	mov	r30, r25
    28fc:	f0 e0       	ldi	r31, 0x00	; 0
    28fe:	ee 0f       	add	r30, r30
    2900:	ff 1f       	adc	r31, r31
    2902:	ec 0f       	add	r30, r28
    2904:	fd 1f       	adc	r31, r29
    2906:	20 81       	ld	r18, Z
    2908:	31 81       	ldd	r19, Z+1	; 0x01
    290a:	22 58       	subi	r18, 0x82	; 130
    290c:	31 40       	sbci	r19, 0x01	; 1
    290e:	79 f3       	breq	.-34     	; 0x28ee <change_selected+0x86>
			((*(menuHead))->selected)++;
		}
	}
	if(((*(menuHead))->selected) == 8){
    2910:	ed 91       	ld	r30, X+
    2912:	fc 91       	ld	r31, X
    2914:	11 97       	sbiw	r26, 0x01	; 1
    2916:	80 a9       	ldd	r24, Z+48	; 0x30
    2918:	88 30       	cpi	r24, 0x08	; 8
    291a:	09 f4       	brne	.+2      	; 0x291e <change_selected+0xb6>
		((*(menuHead))->selected) = 0;
    291c:	10 aa       	std	Z+48, r1	; 0x30
	}
	if(((*(menuHead))->selected) == 255){
    291e:	ed 91       	ld	r30, X+
    2920:	fc 91       	ld	r31, X
    2922:	11 97       	sbiw	r26, 0x01	; 1
    2924:	80 a9       	ldd	r24, Z+48	; 0x30
    2926:	8f 3f       	cpi	r24, 0xFF	; 255
    2928:	11 f4       	brne	.+4      	; 0x292e <change_selected+0xc6>
		((*(menuHead))->selected) = 7;
    292a:	87 e0       	ldi	r24, 0x07	; 7
    292c:	80 ab       	std	Z+48, r24	; 0x30
	}
	if(d != WAITING && d != NEUTRAL){
    292e:	64 50       	subi	r22, 0x04	; 4
    2930:	62 30       	cpi	r22, 0x02	; 2
    2932:	20 f0       	brcs	.+8      	; 0x293c <change_selected+0xd4>
		write_menu_to_screen(*(menuHead));
    2934:	8d 91       	ld	r24, X+
    2936:	9c 91       	ld	r25, X
    2938:	0e 94 10 14 	call	0x2820	; 0x2820 <write_menu_to_screen>
	}
	
}
    293c:	df 91       	pop	r29
    293e:	cf 91       	pop	r28
    2940:	08 95       	ret

00002942 <button_pressed>:

void button_pressed(menu** menuHead){
    2942:	0f 93       	push	r16
    2944:	1f 93       	push	r17
    2946:	cf 93       	push	r28
    2948:	df 93       	push	r29
    294a:	ec 01       	movw	r28, r24
	if((*(menuHead))->f[((*(menuHead))->selected)] != NULL){
    294c:	e8 81       	ld	r30, Y
    294e:	f9 81       	ldd	r31, Y+1	; 0x01
    2950:	80 a9       	ldd	r24, Z+48	; 0x30
    2952:	a8 2f       	mov	r26, r24
    2954:	b0 e0       	ldi	r27, 0x00	; 0
    2956:	aa 0f       	add	r26, r26
    2958:	bb 1f       	adc	r27, r27
    295a:	ae 0f       	add	r26, r30
    295c:	bf 1f       	adc	r27, r31
    295e:	90 96       	adiw	r26, 0x20	; 32
    2960:	ed 91       	ld	r30, X+
    2962:	fc 91       	ld	r31, X
    2964:	91 97       	sbiw	r26, 0x21	; 33
    2966:	30 97       	sbiw	r30, 0x00	; 0
    2968:	31 f0       	breq	.+12     	; 0x2976 <button_pressed+0x34>
		(*(menuHead))->f[((*(menuHead))->selected)]();
    296a:	09 95       	icall
		write_menu_to_screen(*(menuHead));
    296c:	88 81       	ld	r24, Y
    296e:	99 81       	ldd	r25, Y+1	; 0x01
    2970:	0e 94 10 14 	call	0x2820	; 0x2820 <write_menu_to_screen>
    2974:	0c c0       	rjmp	.+24     	; 0x298e <button_pressed+0x4c>
	}
	else if((*(menuHead))->links[((*(menuHead))->selected)] != NULL){
    2976:	50 96       	adiw	r26, 0x10	; 16
    2978:	0d 91       	ld	r16, X+
    297a:	1c 91       	ld	r17, X
    297c:	51 97       	sbiw	r26, 0x11	; 17
    297e:	01 15       	cp	r16, r1
    2980:	11 05       	cpc	r17, r1
    2982:	29 f0       	breq	.+10     	; 0x298e <button_pressed+0x4c>
void change_menu(menu* next_menu, menu** menuHead){
	/*if (next_menu->fun_ptr != NULL){
		(*(next_menu->fun_ptr));
	}*/

	write_menu_to_screen(next_menu);
    2984:	c8 01       	movw	r24, r16
    2986:	0e 94 10 14 	call	0x2820	; 0x2820 <write_menu_to_screen>
	*menuHead = next_menu;
    298a:	19 83       	std	Y+1, r17	; 0x01
    298c:	08 83       	st	Y, r16
		write_menu_to_screen(*(menuHead));
	}
	else if((*(menuHead))->links[((*(menuHead))->selected)] != NULL){
		change_menu((*(menuHead))->links[((*(menuHead))->selected)], menuHead);
	}
}
    298e:	df 91       	pop	r29
    2990:	cf 91       	pop	r28
    2992:	1f 91       	pop	r17
    2994:	0f 91       	pop	r16
    2996:	08 95       	ret

00002998 <launch_menusystem>:

void launch_menusystem(){
	
	//INITIATE
	
	oled_init();
    2998:	0e 94 81 16 	call	0x2d02	; 0x2d02 <oled_init>
	clear_oled();
    299c:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <clear_oled>
	menu** headPointer = NULL;
	
		static menu* mainMenu;
		mainMenu = new_menu(NULL);
    29a0:	80 e0       	ldi	r24, 0x00	; 0
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	0e 94 dd 13 	call	0x27ba	; 0x27ba <new_menu>
    29a8:	90 93 d4 03 	sts	0x03D4, r25	; 0x8003d4 <mainMenu.2578+0x1>
    29ac:	80 93 d3 03 	sts	0x03D3, r24	; 0x8003d3 <mainMenu.2578>
		menu* submenu2 = new_menu(mainMenu);
    29b0:	0e 94 dd 13 	call	0x27ba	; 0x27ba <new_menu>
    29b4:	8c 01       	movw	r16, r24
		menu* difficulties = new_menu(mainMenu);
    29b6:	80 91 d3 03 	lds	r24, 0x03D3	; 0x8003d3 <mainMenu.2578>
    29ba:	90 91 d4 03 	lds	r25, 0x03D4	; 0x8003d4 <mainMenu.2578+0x1>
    29be:	0e 94 dd 13 	call	0x27ba	; 0x27ba <new_menu>
    29c2:	dc 01       	movw	r26, r24
		
		mainMenu->labels[0] = "Play ping-pong";
    29c4:	e0 91 d3 03 	lds	r30, 0x03D3	; 0x8003d3 <mainMenu.2578>
    29c8:	f0 91 d4 03 	lds	r31, 0x03D4	; 0x8003d4 <mainMenu.2578+0x1>
    29cc:	83 ef       	ldi	r24, 0xF3	; 243
    29ce:	92 e0       	ldi	r25, 0x02	; 2
    29d0:	91 83       	std	Z+1, r25	; 0x01
    29d2:	80 83       	st	Z, r24
		mainMenu->f[0] = play_game;
    29d4:	e0 91 d3 03 	lds	r30, 0x03D3	; 0x8003d3 <mainMenu.2578>
    29d8:	f0 91 d4 03 	lds	r31, 0x03D4	; 0x8003d4 <mainMenu.2578+0x1>
    29dc:	8f e8       	ldi	r24, 0x8F	; 143
    29de:	91 e1       	ldi	r25, 0x11	; 17
    29e0:	91 a3       	std	Z+33, r25	; 0x21
    29e2:	80 a3       	std	Z+32, r24	; 0x20

		mainMenu->labels[1] = "Graphics";
    29e4:	82 e0       	ldi	r24, 0x02	; 2
    29e6:	93 e0       	ldi	r25, 0x03	; 3
    29e8:	93 83       	std	Z+3, r25	; 0x03
    29ea:	82 83       	std	Z+2, r24	; 0x02

		mainMenu->labels[2] = "Characters";
    29ec:	8b e0       	ldi	r24, 0x0B	; 11
    29ee:	93 e0       	ldi	r25, 0x03	; 3
    29f0:	95 83       	std	Z+5, r25	; 0x05
    29f2:	84 83       	std	Z+4, r24	; 0x04
		mainMenu->links[2] = submenu2;
    29f4:	15 8b       	std	Z+21, r17	; 0x15
    29f6:	04 8b       	std	Z+20, r16	; 0x14

		mainMenu->labels[3] = "Calibrate stick";
    29f8:	86 e1       	ldi	r24, 0x16	; 22
    29fa:	93 e0       	ldi	r25, 0x03	; 3
    29fc:	97 83       	std	Z+7, r25	; 0x07
    29fe:	86 83       	std	Z+6, r24	; 0x06
		mainMenu->f[3] = calibrate;
    2a00:	8b e2       	ldi	r24, 0x2B	; 43
    2a02:	91 e1       	ldi	r25, 0x11	; 17
    2a04:	97 a3       	std	Z+39, r25	; 0x27
    2a06:	86 a3       	std	Z+38, r24	; 0x26

		mainMenu->labels[4] = "Difficulty";
    2a08:	86 e2       	ldi	r24, 0x26	; 38
    2a0a:	93 e0       	ldi	r25, 0x03	; 3
    2a0c:	91 87       	std	Z+9, r25	; 0x09
    2a0e:	80 87       	std	Z+8, r24	; 0x08
		mainMenu->links[4] = difficulties;
    2a10:	b1 8f       	std	Z+25, r27	; 0x19
    2a12:	a0 8f       	std	Z+24, r26	; 0x18
		difficulties->labels[0] = "easy";
    2a14:	8b e2       	ldi	r24, 0x2B	; 43
    2a16:	92 e0       	ldi	r25, 0x02	; 2
    2a18:	11 96       	adiw	r26, 0x01	; 1
    2a1a:	9c 93       	st	X, r25
    2a1c:	8e 93       	st	-X, r24
		difficulties->f[0] = set_easy;
    2a1e:	81 e7       	ldi	r24, 0x71	; 113
    2a20:	92 e1       	ldi	r25, 0x12	; 18
    2a22:	91 96       	adiw	r26, 0x21	; 33
    2a24:	9c 93       	st	X, r25
    2a26:	8e 93       	st	-X, r24
    2a28:	90 97       	sbiw	r26, 0x20	; 32
		difficulties->labels[1] = "medium";
    2a2a:	82 e4       	ldi	r24, 0x42	; 66
    2a2c:	92 e0       	ldi	r25, 0x02	; 2
    2a2e:	13 96       	adiw	r26, 0x03	; 3
    2a30:	9c 93       	st	X, r25
    2a32:	8e 93       	st	-X, r24
    2a34:	12 97       	sbiw	r26, 0x02	; 2
		difficulties->f[1] = set_medium;
    2a36:	8c e8       	ldi	r24, 0x8C	; 140
    2a38:	92 e1       	ldi	r25, 0x12	; 18
    2a3a:	93 96       	adiw	r26, 0x23	; 35
    2a3c:	9c 93       	st	X, r25
    2a3e:	8e 93       	st	-X, r24
    2a40:	92 97       	sbiw	r26, 0x22	; 34
		difficulties->labels[2] = "hard";
    2a42:	8b e5       	ldi	r24, 0x5B	; 91
    2a44:	92 e0       	ldi	r25, 0x02	; 2
    2a46:	15 96       	adiw	r26, 0x05	; 5
    2a48:	9c 93       	st	X, r25
    2a4a:	8e 93       	st	-X, r24
    2a4c:	14 97       	sbiw	r26, 0x04	; 4
		difficulties->f[2] = set_hard;
    2a4e:	87 ea       	ldi	r24, 0xA7	; 167
    2a50:	92 e1       	ldi	r25, 0x12	; 18
    2a52:	95 96       	adiw	r26, 0x25	; 37
    2a54:	9c 93       	st	X, r25
    2a56:	8e 93       	st	-X, r24
    2a58:	94 97       	sbiw	r26, 0x24	; 36

		mainMenu->labels[5] = "Reaction test";
    2a5a:	e0 91 d3 03 	lds	r30, 0x03D3	; 0x8003d3 <mainMenu.2578>
    2a5e:	f0 91 d4 03 	lds	r31, 0x03D4	; 0x8003d4 <mainMenu.2578+0x1>
    2a62:	81 e3       	ldi	r24, 0x31	; 49
    2a64:	93 e0       	ldi	r25, 0x03	; 3
    2a66:	93 87       	std	Z+11, r25	; 0x0b
    2a68:	82 87       	std	Z+10, r24	; 0x0a
		mainMenu->f[5] = reaction_test;
    2a6a:	82 ec       	ldi	r24, 0xC2	; 194
    2a6c:	92 e1       	ldi	r25, 0x12	; 18
    2a6e:	93 a7       	std	Z+43, r25	; 0x2b
    2a70:	82 a7       	std	Z+42, r24	; 0x2a

		mainMenu->labels[6] = "Draw a wojak";
    2a72:	8f e3       	ldi	r24, 0x3F	; 63
    2a74:	93 e0       	ldi	r25, 0x03	; 3
    2a76:	95 87       	std	Z+13, r25	; 0x0d
    2a78:	84 87       	std	Z+12, r24	; 0x0c
		mainMenu->f[6] = wojakprinter;
    2a7a:	8e ee       	ldi	r24, 0xEE	; 238
    2a7c:	9f e0       	ldi	r25, 0x0F	; 15
    2a7e:	95 a7       	std	Z+45, r25	; 0x2d
    2a80:	84 a7       	std	Z+44, r24	; 0x2c
		mainMenu->labels[7] = "Credits";
    2a82:	8c e4       	ldi	r24, 0x4C	; 76
    2a84:	93 e0       	ldi	r25, 0x03	; 3
    2a86:	97 87       	std	Z+15, r25	; 0x0f
    2a88:	86 87       	std	Z+14, r24	; 0x0e
		mainMenu->f[7] = show_credits;
    2a8a:	8a e8       	ldi	r24, 0x8A	; 138
    2a8c:	9f e0       	ldi	r25, 0x0F	; 15
    2a8e:	97 a7       	std	Z+47, r25	; 0x2f
    2a90:	86 a7       	std	Z+46, r24	; 0x2e

		submenu2->labels[0] = "Choose character";
    2a92:	84 e5       	ldi	r24, 0x54	; 84
    2a94:	93 e0       	ldi	r25, 0x03	; 3
    2a96:	f8 01       	movw	r30, r16
    2a98:	91 83       	std	Z+1, r25	; 0x01
    2a9a:	80 83       	st	Z, r24
		submenu2->f[0] = choose_character;
    2a9c:	8b e0       	ldi	r24, 0x0B	; 11
    2a9e:	90 e1       	ldi	r25, 0x10	; 16
    2aa0:	91 a3       	std	Z+33, r25	; 0x21
    2aa2:	80 a3       	std	Z+32, r24	; 0x20
		submenu2->labels[1] = "Hiscores";
    2aa4:	85 e6       	ldi	r24, 0x65	; 101
    2aa6:	93 e0       	ldi	r25, 0x03	; 3
    2aa8:	93 83       	std	Z+3, r25	; 0x03
    2aaa:	82 83       	std	Z+2, r24	; 0x02
		submenu2->f[1] = hiscore;
    2aac:	82 eb       	ldi	r24, 0xB2	; 178
    2aae:	90 e1       	ldi	r25, 0x10	; 16
    2ab0:	93 a3       	std	Z+35, r25	; 0x23
    2ab2:	82 a3       	std	Z+34, r24	; 0x22
		submenu2->labels[2] = "Reset scores";
    2ab4:	8e e6       	ldi	r24, 0x6E	; 110
    2ab6:	93 e0       	ldi	r25, 0x03	; 3
    2ab8:	95 83       	std	Z+5, r25	; 0x05
    2aba:	84 83       	std	Z+4, r24	; 0x04
		submenu2->f[2] = reset_scores;
    2abc:	8c ec       	ldi	r24, 0xCC	; 204
    2abe:	9f e0       	ldi	r25, 0x0F	; 15
    2ac0:	95 a3       	std	Z+37, r25	; 0x25
    2ac2:	84 a3       	std	Z+36, r24	; 0x24
		submenu2->labels[4] = "";
    2ac4:	82 e8       	ldi	r24, 0x82	; 130
    2ac6:	91 e0       	ldi	r25, 0x01	; 1
    2ac8:	91 87       	std	Z+9, r25	; 0x09
    2aca:	80 87       	std	Z+8, r24	; 0x08
		submenu2->labels[5] = "";
    2acc:	93 87       	std	Z+11, r25	; 0x0b
    2ace:	82 87       	std	Z+10, r24	; 0x0a
		submenu2->labels[6] = "";
    2ad0:	95 87       	std	Z+13, r25	; 0x0d
    2ad2:	84 87       	std	Z+12, r24	; 0x0c
		
		
	headPointer = &mainMenu;
	write_menu_to_screen(*headPointer);
    2ad4:	80 91 d3 03 	lds	r24, 0x03D3	; 0x8003d3 <mainMenu.2578>
    2ad8:	90 91 d4 03 	lds	r25, 0x03D4	; 0x8003d4 <mainMenu.2578+0x1>
    2adc:	0e 94 10 14 	call	0x2820	; 0x2820 <write_menu_to_screen>
	const int *BASE = 0x1000;
	const int *ADC = 0x1401;
	volatile amap* atmelMap = (amap*) BASE;
	 
	calc_offset();
    2ae0:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <calc_offset>

	//RUN
	while(1){
		
		update_adc_values();
    2ae4:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <update_adc_values>
		
		uint8_t left_button = PIND & (1<< PIND4);
    2ae8:	80 b3       	in	r24, 0x10	; 16
		uint8_t right_button = PIND & (1<< PIND5);
    2aea:	80 b3       	in	r24, 0x10	; 16
		uint8_t joy_button = PINB & (1<< PINB1);
    2aec:	c6 b3       	in	r28, 0x16	; 22
    2aee:	c2 70       	andi	r28, 0x02	; 2
	
	
		//_delay_ms(1);
		DIRECTION current_dir = joystick_direction(current_dir);
    2af0:	8d 2f       	mov	r24, r29
    2af2:	0e 94 33 16 	call	0x2c66	; 0x2c66 <joystick_direction>
    2af6:	d8 2f       	mov	r29, r24
		if(current_dir != NEUTRAL && current_dir != WAITING){
    2af8:	8c ef       	ldi	r24, 0xFC	; 252
    2afa:	8d 0f       	add	r24, r29
    2afc:	82 30       	cpi	r24, 0x02	; 2
    2afe:	28 f0       	brcs	.+10     	; 0x2b0a <launch_menusystem+0x172>
			change_selected(headPointer, current_dir);
    2b00:	6d 2f       	mov	r22, r29
    2b02:	83 ed       	ldi	r24, 0xD3	; 211
    2b04:	93 e0       	ldi	r25, 0x03	; 3
    2b06:	0e 94 34 14 	call	0x2868	; 0x2868 <change_selected>
		}
		if(button_check(joy_button)){
    2b0a:	8c 2f       	mov	r24, r28
    2b0c:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <button_check>
    2b10:	88 23       	and	r24, r24
    2b12:	41 f3       	breq	.-48     	; 0x2ae4 <launch_menusystem+0x14c>
			button_pressed(headPointer);
    2b14:	83 ed       	ldi	r24, 0xD3	; 211
    2b16:	93 e0       	ldi	r25, 0x03	; 3
    2b18:	0e 94 a1 14 	call	0x2942	; 0x2942 <button_pressed>
    2b1c:	e3 cf       	rjmp	.-58     	; 0x2ae4 <launch_menusystem+0x14c>

00002b1e <spi_init>:
	spi_write(0xf0);
	return SPDR;
}

void spi_init(){
	DDRB = (1<<DDB4)|(1<<DDB5)|(1<<DDB7); //chip select, mosi, clock
    2b1e:	80 eb       	ldi	r24, 0xB0	; 176
    2b20:	87 bb       	out	0x17, r24	; 23
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    2b22:	81 e5       	ldi	r24, 0x51	; 81
    2b24:	8d b9       	out	0x0d, r24	; 13
	
	PORTB |= 1<<PB4;
    2b26:	c4 9a       	sbi	0x18, 4	; 24
    2b28:	08 95       	ret

00002b2a <spi_write>:
}

void spi_write(char data){
	SPDR = data;
    2b2a:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF))){
    2b2c:	77 9b       	sbis	0x0e, 7	; 14
    2b2e:	fe cf       	rjmp	.-4      	; 0x2b2c <spi_write+0x2>
		
	}
    2b30:	08 95       	ret

00002b32 <spi_read>:



uint8_t spi_read(){
	
	spi_write(0xf0);
    2b32:	80 ef       	ldi	r24, 0xF0	; 240
    2b34:	0e 94 95 15 	call	0x2b2a	; 0x2b2a <spi_write>
	return SPDR;
    2b38:	8f b1       	in	r24, 0x0f	; 15
}
    2b3a:	08 95       	ret

00002b3c <get_joyvals>:
static sliderVal slider;
DIRECTION direction;

joyVal get_joyvals(){
	return joystick;
}
    2b3c:	80 91 d7 03 	lds	r24, 0x03D7	; 0x8003d7 <joystick>
    2b40:	90 91 d8 03 	lds	r25, 0x03D8	; 0x8003d8 <joystick+0x1>
    2b44:	08 95       	ret

00002b46 <get_slidervals>:

sliderVal get_slidervals(){
	return slider;
}
    2b46:	80 91 d5 03 	lds	r24, 0x03D5	; 0x8003d5 <slider>
    2b4a:	90 91 d6 03 	lds	r25, 0x03D6	; 0x8003d6 <slider+0x1>
    2b4e:	08 95       	ret

00002b50 <calc_offset>:

void calc_offset(){
	volatile char *adc = (char *) 0x1400;
	adc[0] = 0x01;
    2b50:	e0 e0       	ldi	r30, 0x00	; 0
    2b52:	f4 e1       	ldi	r31, 0x14	; 20
    2b54:	81 e0       	ldi	r24, 0x01	; 1
    2b56:	80 83       	st	Z, r24
	x_offset = adc[0];
    2b58:	80 81       	ld	r24, Z
    2b5a:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <x_offset>
	y_offset = adc[0];
    2b5e:	80 81       	ld	r24, Z
    2b60:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <y_offset>
    2b64:	08 95       	ret

00002b66 <button_check>:
}

uint8_t button_check(uint8_t current){
	if(current == 0 && previous == 1){
    2b66:	81 11       	cpse	r24, r1
    2b68:	07 c0       	rjmp	.+14     	; 0x2b78 <button_check+0x12>
    2b6a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <previous>
    2b6e:	81 30       	cpi	r24, 0x01	; 1
    2b70:	41 f4       	brne	.+16     	; 0x2b82 <button_check+0x1c>
		previous = 0;
    2b72:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <previous>
		return 1;
    2b76:	08 95       	ret
	}else if(current != 0){
		previous = 1;
    2b78:	81 e0       	ldi	r24, 0x01	; 1
    2b7a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <previous>
	}
	return 0;
    2b7e:	80 e0       	ldi	r24, 0x00	; 0
    2b80:	08 95       	ret
    2b82:	80 e0       	ldi	r24, 0x00	; 0
}
    2b84:	08 95       	ret

00002b86 <update_adc_values>:

void update_adc_values(){
    2b86:	0f 93       	push	r16
    2b88:	1f 93       	push	r17
    2b8a:	cf 93       	push	r28
	volatile char *adc = (char *) 0x1400;
	adc[0] = 0x01; // M� skrives til for � oppdatere adc registrene.
    2b8c:	e0 e0       	ldi	r30, 0x00	; 0
    2b8e:	f4 e1       	ldi	r31, 0x14	; 20
    2b90:	81 e0       	ldi	r24, 0x01	; 1
    2b92:	80 83       	st	Z, r24
	uint8_t x = adc[0];
    2b94:	40 81       	ld	r20, Z
	uint8_t y = adc[0];
    2b96:	20 81       	ld	r18, Z
	uint8_t left = adc[0];
    2b98:	30 81       	ld	r19, Z
	uint8_t right = adc[0];
    2b9a:	c0 81       	ld	r28, Z
	
	if(x>=x_offset){
    2b9c:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <x_offset>
    2ba0:	4e 17       	cp	r20, r30
    2ba2:	98 f0       	brcs	.+38     	; 0x2bca <update_adc_values+0x44>
		joystick.x_val = (x-x_offset)*(100)/(255-x_offset);
    2ba4:	f0 e0       	ldi	r31, 0x00	; 0
    2ba6:	50 e0       	ldi	r21, 0x00	; 0
    2ba8:	4e 1b       	sub	r20, r30
    2baa:	5f 0b       	sbc	r21, r31
    2bac:	64 e6       	ldi	r22, 0x64	; 100
    2bae:	64 9f       	mul	r22, r20
    2bb0:	c0 01       	movw	r24, r0
    2bb2:	65 9f       	mul	r22, r21
    2bb4:	90 0d       	add	r25, r0
    2bb6:	11 24       	eor	r1, r1
    2bb8:	6f ef       	ldi	r22, 0xFF	; 255
    2bba:	70 e0       	ldi	r23, 0x00	; 0
    2bbc:	6e 1b       	sub	r22, r30
    2bbe:	7f 0b       	sbc	r23, r31
    2bc0:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2bc4:	60 93 d7 03 	sts	0x03D7, r22	; 0x8003d7 <joystick>
    2bc8:	0f c0       	rjmp	.+30     	; 0x2be8 <update_adc_values+0x62>
	}
	else if(x<x_offset){
		joystick.x_val = -(x_offset-x)*(100)/x_offset;
    2bca:	6e 2f       	mov	r22, r30
    2bcc:	70 e0       	ldi	r23, 0x00	; 0
    2bce:	50 e0       	ldi	r21, 0x00	; 0
    2bd0:	46 1b       	sub	r20, r22
    2bd2:	57 0b       	sbc	r21, r23
    2bd4:	e4 e6       	ldi	r30, 0x64	; 100
    2bd6:	e4 9f       	mul	r30, r20
    2bd8:	c0 01       	movw	r24, r0
    2bda:	e5 9f       	mul	r30, r21
    2bdc:	90 0d       	add	r25, r0
    2bde:	11 24       	eor	r1, r1
    2be0:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2be4:	60 93 d7 03 	sts	0x03D7, r22	; 0x8003d7 <joystick>
	}
	if(y>=y_offset){
    2be8:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <y_offset>
    2bec:	26 17       	cp	r18, r22
    2bee:	a8 f0       	brcs	.+42     	; 0x2c1a <update_adc_values+0x94>
		joystick.y_val = (y-y_offset)*(100)/(255-y_offset);
    2bf0:	46 2f       	mov	r20, r22
    2bf2:	50 e0       	ldi	r21, 0x00	; 0
    2bf4:	62 2f       	mov	r22, r18
    2bf6:	70 e0       	ldi	r23, 0x00	; 0
    2bf8:	64 1b       	sub	r22, r20
    2bfa:	75 0b       	sbc	r23, r21
    2bfc:	24 e6       	ldi	r18, 0x64	; 100
    2bfe:	26 9f       	mul	r18, r22
    2c00:	c0 01       	movw	r24, r0
    2c02:	27 9f       	mul	r18, r23
    2c04:	90 0d       	add	r25, r0
    2c06:	11 24       	eor	r1, r1
    2c08:	6f ef       	ldi	r22, 0xFF	; 255
    2c0a:	70 e0       	ldi	r23, 0x00	; 0
    2c0c:	64 1b       	sub	r22, r20
    2c0e:	75 0b       	sbc	r23, r21
    2c10:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2c14:	60 93 d8 03 	sts	0x03D8, r22	; 0x8003d8 <joystick+0x1>
    2c18:	0f c0       	rjmp	.+30     	; 0x2c38 <update_adc_values+0xb2>
	}
	else if(y<y_offset){
		joystick.y_val = -(y_offset-y)*(100)/y_offset;
    2c1a:	70 e0       	ldi	r23, 0x00	; 0
    2c1c:	42 2f       	mov	r20, r18
    2c1e:	50 e0       	ldi	r21, 0x00	; 0
    2c20:	46 1b       	sub	r20, r22
    2c22:	57 0b       	sbc	r21, r23
    2c24:	24 e6       	ldi	r18, 0x64	; 100
    2c26:	24 9f       	mul	r18, r20
    2c28:	c0 01       	movw	r24, r0
    2c2a:	25 9f       	mul	r18, r21
    2c2c:	90 0d       	add	r25, r0
    2c2e:	11 24       	eor	r1, r1
    2c30:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2c34:	60 93 d8 03 	sts	0x03D8, r22	; 0x8003d8 <joystick+0x1>
	}
	
	slider.l_val = left*100/255;
    2c38:	e5 ed       	ldi	r30, 0xD5	; 213
    2c3a:	f3 e0       	ldi	r31, 0x03	; 3
    2c3c:	24 e6       	ldi	r18, 0x64	; 100
    2c3e:	23 9f       	mul	r18, r19
    2c40:	c0 01       	movw	r24, r0
    2c42:	11 24       	eor	r1, r1
    2c44:	0f ef       	ldi	r16, 0xFF	; 255
    2c46:	10 e0       	ldi	r17, 0x00	; 0
    2c48:	b8 01       	movw	r22, r16
    2c4a:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2c4e:	60 83       	st	Z, r22
	slider.r_val = right*100/255;
    2c50:	2c 9f       	mul	r18, r28
    2c52:	c0 01       	movw	r24, r0
    2c54:	11 24       	eor	r1, r1
    2c56:	b8 01       	movw	r22, r16
    2c58:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2c5c:	61 83       	std	Z+1, r22	; 0x01
}
    2c5e:	cf 91       	pop	r28
    2c60:	1f 91       	pop	r17
    2c62:	0f 91       	pop	r16
    2c64:	08 95       	ret

00002c66 <joystick_direction>:
	return joydir;
	
}*/

DIRECTION joystick_direction(DIRECTION dir){
	if(joystick.x_val < 50 && joystick.x_val > -50 && joystick.y_val < 50 && joystick.y_val > -50 ){
    2c66:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <joystick>
    2c6a:	21 e3       	ldi	r18, 0x31	; 49
    2c6c:	29 0f       	add	r18, r25
    2c6e:	23 36       	cpi	r18, 0x63	; 99
    2c70:	28 f4       	brcc	.+10     	; 0x2c7c <joystick_direction+0x16>
    2c72:	20 91 d8 03 	lds	r18, 0x03D8	; 0x8003d8 <joystick+0x1>
    2c76:	2f 5c       	subi	r18, 0xCF	; 207
    2c78:	23 36       	cpi	r18, 0x63	; 99
    2c7a:	10 f0       	brcs	.+4      	; 0x2c80 <joystick_direction+0x1a>
		dir = NEUTRAL;
	}
	if(dir == NEUTRAL){
    2c7c:	84 30       	cpi	r24, 0x04	; 4
    2c7e:	61 f4       	brne	.+24     	; 0x2c98 <joystick_direction+0x32>
		if(joystick.x_val > 95){
    2c80:	90 36       	cpi	r25, 0x60	; 96
    2c82:	64 f4       	brge	.+24     	; 0x2c9c <joystick_direction+0x36>
			return RIGHT;
		}
		if(joystick.x_val < -95){
    2c84:	91 3a       	cpi	r25, 0xA1	; 161
    2c86:	64 f0       	brlt	.+24     	; 0x2ca0 <joystick_direction+0x3a>
			return LEFT;
		}
		if(joystick.y_val < -95){
    2c88:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <joystick+0x1>
    2c8c:	81 3a       	cpi	r24, 0xA1	; 161
    2c8e:	54 f0       	brlt	.+20     	; 0x2ca4 <joystick_direction+0x3e>
			return DOWN;
		}
		if(joystick.y_val > 95){
    2c90:	80 36       	cpi	r24, 0x60	; 96
    2c92:	54 f4       	brge	.+20     	; 0x2ca8 <joystick_direction+0x42>
			return UP;
		}
		return NEUTRAL;
    2c94:	84 e0       	ldi	r24, 0x04	; 4
    2c96:	08 95       	ret
	}
	return WAITING;
    2c98:	85 e0       	ldi	r24, 0x05	; 5
    2c9a:	08 95       	ret
	if(joystick.x_val < 50 && joystick.x_val > -50 && joystick.y_val < 50 && joystick.y_val > -50 ){
		dir = NEUTRAL;
	}
	if(dir == NEUTRAL){
		if(joystick.x_val > 95){
			return RIGHT;
    2c9c:	81 e0       	ldi	r24, 0x01	; 1
    2c9e:	08 95       	ret
		}
		if(joystick.x_val < -95){
			return LEFT;
    2ca0:	80 e0       	ldi	r24, 0x00	; 0
    2ca2:	08 95       	ret
		}
		if(joystick.y_val < -95){
			return DOWN;
    2ca4:	83 e0       	ldi	r24, 0x03	; 3
    2ca6:	08 95       	ret
		}
		if(joystick.y_val > 95){
			return UP;
    2ca8:	82 e0       	ldi	r24, 0x02	; 2
		}
		return NEUTRAL;
	}
	return WAITING;
}
    2caa:	08 95       	ret

00002cac <main>:
	
//  	joyVal joystick; 
//  	sliderVal slider; 
//	volatile amap* atmelMap = (amap*) BASE;
	
	USART_Init ( MYUBRR );
    2cac:	8f e1       	ldi	r24, 0x1F	; 31
    2cae:	90 e0       	ldi	r25, 0x00	; 0
    2cb0:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <USART_Init>
	
	//enable external memory interface
	MCUCR |= (1<<SRE);
    2cb4:	85 b7       	in	r24, 0x35	; 53
    2cb6:	80 68       	ori	r24, 0x80	; 128
    2cb8:	85 bf       	out	0x35, r24	; 53
	
	//select which c pins on atmega to be released for normal use, the rest is used for high address bytes
	SFIOR &= ~(1<<XMM0);
    2cba:	80 b7       	in	r24, 0x30	; 48
    2cbc:	87 7f       	andi	r24, 0xF7	; 247
    2cbe:	80 bf       	out	0x30, r24	; 48
	SFIOR &= ~(1<<XMM1);
    2cc0:	80 b7       	in	r24, 0x30	; 48
    2cc2:	8f 7e       	andi	r24, 0xEF	; 239
    2cc4:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1<<XMM2);
    2cc6:	80 b7       	in	r24, 0x30	; 48
    2cc8:	80 62       	ori	r24, 0x20	; 32
    2cca:	80 bf       	out	0x30, r24	; 48
	
	DDRA |= 0x18;
    2ccc:	8a b3       	in	r24, 0x1a	; 26
    2cce:	88 61       	ori	r24, 0x18	; 24
    2cd0:	8a bb       	out	0x1a, r24	; 26
	printf("\n\n\n\n\nasdhfkajsdhfjksa %d \r\n\n\n\n\n", ext_ram[15]);
	printf("\n\n\n\n\nasdhfkajsdhfjksa %d \r\n\n\n\n\n", ext_ram[16]);
	_delay_ms(1000);
	*//*
	volatile char * sram = (char *) 0x1800;*/
	can_init();
    2cd2:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <can_init>
	

	can_interrupt_enable();
    2cd6:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <can_interrupt_enable>
	//SRAM_test(); _delay_ms(1000);
	launch_menusystem();
    2cda:	0e 94 cc 14 	call	0x2998	; 0x2998 <launch_menusystem>
		//send_can_msg(&msgToSend);
		send_stick_can();
		_delay_ms(50);


		printf("menu fail");
    2cde:	cb eb       	ldi	r28, 0xBB	; 187
    2ce0:	d3 e0       	ldi	r29, 0x03	; 3
	while(1){
		// CAN BUS TEST
		//msgToReceive = receive_can_msg(0);
		//_delay_ms(5000);
		//send_can_msg(&msgToSend);
		send_stick_can();
    2ce2:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <send_stick_can>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2ce6:	80 e0       	ldi	r24, 0x00	; 0
    2ce8:	90 ef       	ldi	r25, 0xF0	; 240
    2cea:	01 97       	sbiw	r24, 0x01	; 1
    2cec:	f1 f7       	brne	.-4      	; 0x2cea <main+0x3e>
		_delay_ms(50);


		printf("menu fail");
    2cee:	df 93       	push	r29
    2cf0:	cf 93       	push	r28
    2cf2:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <printf>
    2cf6:	0f 90       	pop	r0
    2cf8:	0f 90       	pop	r0
    2cfa:	f3 cf       	rjmp	.-26     	; 0x2ce2 <main+0x36>

00002cfc <oled_write_data>:
	
	for (int i=0; i < 8; i++) {
		oled_write_data(pgm_read_byte(&(font8[character][i])));
	}
	
}
    2cfc:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xe1d>
    2d00:	08 95       	ret

00002d02 <oled_init>:
    2d02:	e0 e0       	ldi	r30, 0x00	; 0
    2d04:	f0 e1       	ldi	r31, 0x10	; 16
    2d06:	8e ea       	ldi	r24, 0xAE	; 174
    2d08:	80 83       	st	Z, r24
    2d0a:	81 ea       	ldi	r24, 0xA1	; 161
    2d0c:	80 83       	st	Z, r24
    2d0e:	8a ed       	ldi	r24, 0xDA	; 218
    2d10:	80 83       	st	Z, r24
    2d12:	82 e1       	ldi	r24, 0x12	; 18
    2d14:	80 83       	st	Z, r24
    2d16:	88 ec       	ldi	r24, 0xC8	; 200
    2d18:	80 83       	st	Z, r24
    2d1a:	88 ea       	ldi	r24, 0xA8	; 168
    2d1c:	80 83       	st	Z, r24
    2d1e:	8f e3       	ldi	r24, 0x3F	; 63
    2d20:	80 83       	st	Z, r24
    2d22:	85 ed       	ldi	r24, 0xD5	; 213
    2d24:	80 83       	st	Z, r24
    2d26:	80 e8       	ldi	r24, 0x80	; 128
    2d28:	80 83       	st	Z, r24
    2d2a:	81 e8       	ldi	r24, 0x81	; 129
    2d2c:	80 83       	st	Z, r24
    2d2e:	80 e5       	ldi	r24, 0x50	; 80
    2d30:	80 83       	st	Z, r24
    2d32:	89 ed       	ldi	r24, 0xD9	; 217
    2d34:	80 83       	st	Z, r24
    2d36:	81 e2       	ldi	r24, 0x21	; 33
    2d38:	80 83       	st	Z, r24
    2d3a:	80 e2       	ldi	r24, 0x20	; 32
    2d3c:	80 83       	st	Z, r24
    2d3e:	82 e0       	ldi	r24, 0x02	; 2
    2d40:	80 83       	st	Z, r24
    2d42:	8b ed       	ldi	r24, 0xDB	; 219
    2d44:	80 83       	st	Z, r24
    2d46:	80 e3       	ldi	r24, 0x30	; 48
    2d48:	80 83       	st	Z, r24
    2d4a:	8d ea       	ldi	r24, 0xAD	; 173
    2d4c:	80 83       	st	Z, r24
    2d4e:	10 82       	st	Z, r1
    2d50:	84 ea       	ldi	r24, 0xA4	; 164
    2d52:	80 83       	st	Z, r24
    2d54:	86 ea       	ldi	r24, 0xA6	; 166
    2d56:	80 83       	st	Z, r24
    2d58:	8f ea       	ldi	r24, 0xAF	; 175
    2d5a:	80 83       	st	Z, r24
    2d5c:	08 95       	ret

00002d5e <go_to_line>:
    2d5e:	87 70       	andi	r24, 0x07	; 7
    2d60:	80 55       	subi	r24, 0x50	; 80
    2d62:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xc1d>
    2d66:	08 95       	ret

00002d68 <go_to_column>:
    2d68:	98 2f       	mov	r25, r24
    2d6a:	9f 70       	andi	r25, 0x0F	; 15
    2d6c:	e0 e0       	ldi	r30, 0x00	; 0
    2d6e:	f0 e1       	ldi	r31, 0x10	; 16
    2d70:	90 83       	st	Z, r25
    2d72:	82 95       	swap	r24
    2d74:	8f 70       	andi	r24, 0x0F	; 15
    2d76:	80 5f       	subi	r24, 0xF0	; 240
    2d78:	80 83       	st	Z, r24
    2d7a:	08 95       	ret

00002d7c <clear_oled>:
    2d7c:	1f 93       	push	r17
    2d7e:	cf 93       	push	r28
    2d80:	df 93       	push	r29
    2d82:	10 e0       	ldi	r17, 0x00	; 0
    2d84:	c0 e0       	ldi	r28, 0x00	; 0
    2d86:	d2 e1       	ldi	r29, 0x12	; 18
    2d88:	81 2f       	mov	r24, r17
    2d8a:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    2d8e:	80 e0       	ldi	r24, 0x00	; 0
    2d90:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2d94:	80 e8       	ldi	r24, 0x80	; 128
    2d96:	90 e0       	ldi	r25, 0x00	; 0
    2d98:	18 82       	st	Y, r1
    2d9a:	01 97       	sbiw	r24, 0x01	; 1
    2d9c:	e9 f7       	brne	.-6      	; 0x2d98 <clear_oled+0x1c>
    2d9e:	1f 5f       	subi	r17, 0xFF	; 255
    2da0:	18 30       	cpi	r17, 0x08	; 8
    2da2:	91 f7       	brne	.-28     	; 0x2d88 <clear_oled+0xc>
    2da4:	df 91       	pop	r29
    2da6:	cf 91       	pop	r28
    2da8:	1f 91       	pop	r17
    2daa:	08 95       	ret

00002dac <clear_oled_new>:
    2dac:	1f 93       	push	r17
    2dae:	cf 93       	push	r28
    2db0:	df 93       	push	r29
    2db2:	10 e0       	ldi	r17, 0x00	; 0
    2db4:	c0 e0       	ldi	r28, 0x00	; 0
    2db6:	d2 e1       	ldi	r29, 0x12	; 18
    2db8:	81 2f       	mov	r24, r17
    2dba:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    2dbe:	80 e0       	ldi	r24, 0x00	; 0
    2dc0:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2dc4:	80 e8       	ldi	r24, 0x80	; 128
    2dc6:	90 e0       	ldi	r25, 0x00	; 0
    2dc8:	18 82       	st	Y, r1
    2dca:	01 97       	sbiw	r24, 0x01	; 1
    2dcc:	e9 f7       	brne	.-6      	; 0x2dc8 <clear_oled_new+0x1c>
    2dce:	1f 5f       	subi	r17, 0xFF	; 255
    2dd0:	18 30       	cpi	r17, 0x08	; 8
    2dd2:	91 f7       	brne	.-28     	; 0x2db8 <clear_oled_new+0xc>
    2dd4:	df 91       	pop	r29
    2dd6:	cf 91       	pop	r28
    2dd8:	1f 91       	pop	r17
    2dda:	08 95       	ret

00002ddc <oled_write_char_using_font>:
    2ddc:	80 52       	subi	r24, 0x20	; 32
    2dde:	68 30       	cpi	r22, 0x08	; 8
    2de0:	f1 f4       	brne	.+60     	; 0x2e1e <oled_write_char_using_font+0x42>
    2de2:	90 e0       	ldi	r25, 0x00	; 0
    2de4:	9c 01       	movw	r18, r24
    2de6:	22 0f       	add	r18, r18
    2de8:	33 1f       	adc	r19, r19
    2dea:	22 0f       	add	r18, r18
    2dec:	33 1f       	adc	r19, r19
    2dee:	22 0f       	add	r18, r18
    2df0:	33 1f       	adc	r19, r19
    2df2:	29 53       	subi	r18, 0x39	; 57
    2df4:	38 4e       	sbci	r19, 0xE8	; 232
    2df6:	88 0f       	add	r24, r24
    2df8:	99 1f       	adc	r25, r25
    2dfa:	88 0f       	add	r24, r24
    2dfc:	99 1f       	adc	r25, r25
    2dfe:	88 0f       	add	r24, r24
    2e00:	99 1f       	adc	r25, r25
    2e02:	81 53       	subi	r24, 0x31	; 49
    2e04:	98 4e       	sbci	r25, 0xE8	; 232
    2e06:	a0 e0       	ldi	r26, 0x00	; 0
    2e08:	b2 e1       	ldi	r27, 0x12	; 18
    2e0a:	f9 01       	movw	r30, r18
    2e0c:	45 91       	lpm	r20, Z+
    2e0e:	54 91       	lpm	r21, Z
    2e10:	4c 93       	st	X, r20
    2e12:	2f 5f       	subi	r18, 0xFF	; 255
    2e14:	3f 4f       	sbci	r19, 0xFF	; 255
    2e16:	82 17       	cp	r24, r18
    2e18:	93 07       	cpc	r25, r19
    2e1a:	b9 f7       	brne	.-18     	; 0x2e0a <oled_write_char_using_font+0x2e>
    2e1c:	08 95       	ret
    2e1e:	65 30       	cpi	r22, 0x05	; 5
    2e20:	d1 f4       	brne	.+52     	; 0x2e56 <oled_write_char_using_font+0x7a>
    2e22:	90 e0       	ldi	r25, 0x00	; 0
    2e24:	9c 01       	movw	r18, r24
    2e26:	22 0f       	add	r18, r18
    2e28:	33 1f       	adc	r19, r19
    2e2a:	22 0f       	add	r18, r18
    2e2c:	33 1f       	adc	r19, r19
    2e2e:	82 0f       	add	r24, r18
    2e30:	93 1f       	adc	r25, r19
    2e32:	20 e0       	ldi	r18, 0x00	; 0
    2e34:	30 e0       	ldi	r19, 0x00	; 0
    2e36:	a0 e0       	ldi	r26, 0x00	; 0
    2e38:	b2 e1       	ldi	r27, 0x12	; 18
    2e3a:	f9 01       	movw	r30, r18
    2e3c:	e8 0f       	add	r30, r24
    2e3e:	f9 1f       	adc	r31, r25
    2e40:	e4 51       	subi	r30, 0x14	; 20
    2e42:	fa 4e       	sbci	r31, 0xEA	; 234
    2e44:	45 91       	lpm	r20, Z+
    2e46:	54 91       	lpm	r21, Z
    2e48:	4c 93       	st	X, r20
    2e4a:	2f 5f       	subi	r18, 0xFF	; 255
    2e4c:	3f 4f       	sbci	r19, 0xFF	; 255
    2e4e:	25 30       	cpi	r18, 0x05	; 5
    2e50:	31 05       	cpc	r19, r1
    2e52:	99 f7       	brne	.-26     	; 0x2e3a <oled_write_char_using_font+0x5e>
    2e54:	08 95       	ret
    2e56:	64 30       	cpi	r22, 0x04	; 4
    2e58:	b1 f4       	brne	.+44     	; 0x2e86 <oled_write_char_using_font+0xaa>
    2e5a:	90 e0       	ldi	r25, 0x00	; 0
    2e5c:	88 0f       	add	r24, r24
    2e5e:	99 1f       	adc	r25, r25
    2e60:	88 0f       	add	r24, r24
    2e62:	99 1f       	adc	r25, r25
    2e64:	20 e0       	ldi	r18, 0x00	; 0
    2e66:	30 e0       	ldi	r19, 0x00	; 0
    2e68:	a0 e0       	ldi	r26, 0x00	; 0
    2e6a:	b2 e1       	ldi	r27, 0x12	; 18
    2e6c:	f9 01       	movw	r30, r18
    2e6e:	e8 0f       	add	r30, r24
    2e70:	f9 1f       	adc	r31, r25
    2e72:	e0 59       	subi	r30, 0x90	; 144
    2e74:	fb 4e       	sbci	r31, 0xEB	; 235
    2e76:	45 91       	lpm	r20, Z+
    2e78:	54 91       	lpm	r21, Z
    2e7a:	4c 93       	st	X, r20
    2e7c:	2f 5f       	subi	r18, 0xFF	; 255
    2e7e:	3f 4f       	sbci	r19, 0xFF	; 255
    2e80:	24 30       	cpi	r18, 0x04	; 4
    2e82:	31 05       	cpc	r19, r1
    2e84:	99 f7       	brne	.-26     	; 0x2e6c <oled_write_char_using_font+0x90>
    2e86:	08 95       	ret

00002e88 <oled_write_string>:
    2e88:	8f 92       	push	r8
    2e8a:	9f 92       	push	r9
    2e8c:	af 92       	push	r10
    2e8e:	bf 92       	push	r11
    2e90:	cf 92       	push	r12
    2e92:	df 92       	push	r13
    2e94:	ef 92       	push	r14
    2e96:	ff 92       	push	r15
    2e98:	0f 93       	push	r16
    2e9a:	1f 93       	push	r17
    2e9c:	cf 93       	push	r28
    2e9e:	df 93       	push	r29
    2ea0:	88 2e       	mov	r8, r24
    2ea2:	8b 01       	movw	r16, r22
    2ea4:	94 2e       	mov	r9, r20
    2ea6:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    2eaa:	78 01       	movw	r14, r16
    2eac:	c0 e0       	ldi	r28, 0x00	; 0
    2eae:	d0 e0       	ldi	r29, 0x00	; 0
    2eb0:	a9 2c       	mov	r10, r9
    2eb2:	b1 2c       	mov	r11, r1
    2eb4:	68 94       	set
    2eb6:	cc 24       	eor	r12, r12
    2eb8:	c7 f8       	bld	r12, 7
    2eba:	d1 2c       	mov	r13, r1
    2ebc:	19 c0       	rjmp	.+50     	; 0x2ef0 <oled_write_string+0x68>
    2ebe:	c6 01       	movw	r24, r12
    2ec0:	b5 01       	movw	r22, r10
    2ec2:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2ec6:	9b 01       	movw	r18, r22
    2ec8:	ce 01       	movw	r24, r28
    2eca:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2ece:	89 2b       	or	r24, r25
    2ed0:	41 f4       	brne	.+16     	; 0x2ee2 <oled_write_string+0x5a>
    2ed2:	ce 01       	movw	r24, r28
    2ed4:	b9 01       	movw	r22, r18
    2ed6:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    2eda:	88 2d       	mov	r24, r8
    2edc:	86 0f       	add	r24, r22
    2ede:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    2ee2:	69 2d       	mov	r22, r9
    2ee4:	f7 01       	movw	r30, r14
    2ee6:	81 91       	ld	r24, Z+
    2ee8:	7f 01       	movw	r14, r30
    2eea:	0e 94 ee 16 	call	0x2ddc	; 0x2ddc <oled_write_char_using_font>
    2eee:	21 96       	adiw	r28, 0x01	; 1
    2ef0:	f8 01       	movw	r30, r16
    2ef2:	01 90       	ld	r0, Z+
    2ef4:	00 20       	and	r0, r0
    2ef6:	e9 f7       	brne	.-6      	; 0x2ef2 <oled_write_string+0x6a>
    2ef8:	31 97       	sbiw	r30, 0x01	; 1
    2efa:	e0 1b       	sub	r30, r16
    2efc:	f1 0b       	sbc	r31, r17
    2efe:	ce 17       	cp	r28, r30
    2f00:	df 07       	cpc	r29, r31
    2f02:	e8 f2       	brcs	.-70     	; 0x2ebe <oled_write_string+0x36>
    2f04:	80 e0       	ldi	r24, 0x00	; 0
    2f06:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    2f0a:	df 91       	pop	r29
    2f0c:	cf 91       	pop	r28
    2f0e:	1f 91       	pop	r17
    2f10:	0f 91       	pop	r16
    2f12:	ff 90       	pop	r15
    2f14:	ef 90       	pop	r14
    2f16:	df 90       	pop	r13
    2f18:	cf 90       	pop	r12
    2f1a:	bf 90       	pop	r11
    2f1c:	af 90       	pop	r10
    2f1e:	9f 90       	pop	r9
    2f20:	8f 90       	pop	r8
    2f22:	08 95       	ret

00002f24 <oled_write_inverted_char_using_font>:
    2f24:	80 52       	subi	r24, 0x20	; 32
    2f26:	68 30       	cpi	r22, 0x08	; 8
    2f28:	f9 f4       	brne	.+62     	; 0x2f68 <oled_write_inverted_char_using_font+0x44>
    2f2a:	90 e0       	ldi	r25, 0x00	; 0
    2f2c:	9c 01       	movw	r18, r24
    2f2e:	22 0f       	add	r18, r18
    2f30:	33 1f       	adc	r19, r19
    2f32:	22 0f       	add	r18, r18
    2f34:	33 1f       	adc	r19, r19
    2f36:	22 0f       	add	r18, r18
    2f38:	33 1f       	adc	r19, r19
    2f3a:	29 53       	subi	r18, 0x39	; 57
    2f3c:	38 4e       	sbci	r19, 0xE8	; 232
    2f3e:	88 0f       	add	r24, r24
    2f40:	99 1f       	adc	r25, r25
    2f42:	88 0f       	add	r24, r24
    2f44:	99 1f       	adc	r25, r25
    2f46:	88 0f       	add	r24, r24
    2f48:	99 1f       	adc	r25, r25
    2f4a:	81 53       	subi	r24, 0x31	; 49
    2f4c:	98 4e       	sbci	r25, 0xE8	; 232
    2f4e:	a0 e0       	ldi	r26, 0x00	; 0
    2f50:	b2 e1       	ldi	r27, 0x12	; 18
    2f52:	f9 01       	movw	r30, r18
    2f54:	45 91       	lpm	r20, Z+
    2f56:	54 91       	lpm	r21, Z
    2f58:	40 95       	com	r20
    2f5a:	4c 93       	st	X, r20
    2f5c:	2f 5f       	subi	r18, 0xFF	; 255
    2f5e:	3f 4f       	sbci	r19, 0xFF	; 255
    2f60:	82 17       	cp	r24, r18
    2f62:	93 07       	cpc	r25, r19
    2f64:	b1 f7       	brne	.-20     	; 0x2f52 <oled_write_inverted_char_using_font+0x2e>
    2f66:	08 95       	ret
    2f68:	65 30       	cpi	r22, 0x05	; 5
    2f6a:	d9 f4       	brne	.+54     	; 0x2fa2 <oled_write_inverted_char_using_font+0x7e>
    2f6c:	90 e0       	ldi	r25, 0x00	; 0
    2f6e:	9c 01       	movw	r18, r24
    2f70:	22 0f       	add	r18, r18
    2f72:	33 1f       	adc	r19, r19
    2f74:	22 0f       	add	r18, r18
    2f76:	33 1f       	adc	r19, r19
    2f78:	82 0f       	add	r24, r18
    2f7a:	93 1f       	adc	r25, r19
    2f7c:	20 e0       	ldi	r18, 0x00	; 0
    2f7e:	30 e0       	ldi	r19, 0x00	; 0
    2f80:	a0 e0       	ldi	r26, 0x00	; 0
    2f82:	b2 e1       	ldi	r27, 0x12	; 18
    2f84:	f9 01       	movw	r30, r18
    2f86:	e8 0f       	add	r30, r24
    2f88:	f9 1f       	adc	r31, r25
    2f8a:	e4 51       	subi	r30, 0x14	; 20
    2f8c:	fa 4e       	sbci	r31, 0xEA	; 234
    2f8e:	45 91       	lpm	r20, Z+
    2f90:	54 91       	lpm	r21, Z
    2f92:	40 95       	com	r20
    2f94:	4c 93       	st	X, r20
    2f96:	2f 5f       	subi	r18, 0xFF	; 255
    2f98:	3f 4f       	sbci	r19, 0xFF	; 255
    2f9a:	25 30       	cpi	r18, 0x05	; 5
    2f9c:	31 05       	cpc	r19, r1
    2f9e:	91 f7       	brne	.-28     	; 0x2f84 <oled_write_inverted_char_using_font+0x60>
    2fa0:	08 95       	ret
    2fa2:	64 30       	cpi	r22, 0x04	; 4
    2fa4:	b9 f4       	brne	.+46     	; 0x2fd4 <oled_write_inverted_char_using_font+0xb0>
    2fa6:	90 e0       	ldi	r25, 0x00	; 0
    2fa8:	88 0f       	add	r24, r24
    2faa:	99 1f       	adc	r25, r25
    2fac:	88 0f       	add	r24, r24
    2fae:	99 1f       	adc	r25, r25
    2fb0:	20 e0       	ldi	r18, 0x00	; 0
    2fb2:	30 e0       	ldi	r19, 0x00	; 0
    2fb4:	a0 e0       	ldi	r26, 0x00	; 0
    2fb6:	b2 e1       	ldi	r27, 0x12	; 18
    2fb8:	f9 01       	movw	r30, r18
    2fba:	e8 0f       	add	r30, r24
    2fbc:	f9 1f       	adc	r31, r25
    2fbe:	e0 59       	subi	r30, 0x90	; 144
    2fc0:	fb 4e       	sbci	r31, 0xEB	; 235
    2fc2:	45 91       	lpm	r20, Z+
    2fc4:	54 91       	lpm	r21, Z
    2fc6:	40 95       	com	r20
    2fc8:	4c 93       	st	X, r20
    2fca:	2f 5f       	subi	r18, 0xFF	; 255
    2fcc:	3f 4f       	sbci	r19, 0xFF	; 255
    2fce:	24 30       	cpi	r18, 0x04	; 4
    2fd0:	31 05       	cpc	r19, r1
    2fd2:	91 f7       	brne	.-28     	; 0x2fb8 <oled_write_inverted_char_using_font+0x94>
    2fd4:	08 95       	ret

00002fd6 <oled_write_string_inverted>:
    2fd6:	8f 92       	push	r8
    2fd8:	9f 92       	push	r9
    2fda:	af 92       	push	r10
    2fdc:	bf 92       	push	r11
    2fde:	cf 92       	push	r12
    2fe0:	df 92       	push	r13
    2fe2:	ef 92       	push	r14
    2fe4:	ff 92       	push	r15
    2fe6:	0f 93       	push	r16
    2fe8:	1f 93       	push	r17
    2fea:	cf 93       	push	r28
    2fec:	df 93       	push	r29
    2fee:	88 2e       	mov	r8, r24
    2ff0:	8b 01       	movw	r16, r22
    2ff2:	94 2e       	mov	r9, r20
    2ff4:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    2ff8:	78 01       	movw	r14, r16
    2ffa:	c0 e0       	ldi	r28, 0x00	; 0
    2ffc:	d0 e0       	ldi	r29, 0x00	; 0
    2ffe:	a9 2c       	mov	r10, r9
    3000:	b1 2c       	mov	r11, r1
    3002:	68 94       	set
    3004:	cc 24       	eor	r12, r12
    3006:	c7 f8       	bld	r12, 7
    3008:	d1 2c       	mov	r13, r1
    300a:	19 c0       	rjmp	.+50     	; 0x303e <oled_write_string_inverted+0x68>
    300c:	c6 01       	movw	r24, r12
    300e:	b5 01       	movw	r22, r10
    3010:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    3014:	9b 01       	movw	r18, r22
    3016:	ce 01       	movw	r24, r28
    3018:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    301c:	89 2b       	or	r24, r25
    301e:	41 f4       	brne	.+16     	; 0x3030 <oled_write_string_inverted+0x5a>
    3020:	ce 01       	movw	r24, r28
    3022:	b9 01       	movw	r22, r18
    3024:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divmodhi4>
    3028:	88 2d       	mov	r24, r8
    302a:	86 0f       	add	r24, r22
    302c:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
    3030:	69 2d       	mov	r22, r9
    3032:	f7 01       	movw	r30, r14
    3034:	81 91       	ld	r24, Z+
    3036:	7f 01       	movw	r14, r30
    3038:	0e 94 92 17 	call	0x2f24	; 0x2f24 <oled_write_inverted_char_using_font>
    303c:	21 96       	adiw	r28, 0x01	; 1
    303e:	f8 01       	movw	r30, r16
    3040:	01 90       	ld	r0, Z+
    3042:	00 20       	and	r0, r0
    3044:	e9 f7       	brne	.-6      	; 0x3040 <oled_write_string_inverted+0x6a>
    3046:	31 97       	sbiw	r30, 0x01	; 1
    3048:	e0 1b       	sub	r30, r16
    304a:	f1 0b       	sbc	r31, r17
    304c:	ce 17       	cp	r28, r30
    304e:	df 07       	cpc	r29, r31
    3050:	e8 f2       	brcs	.-70     	; 0x300c <oled_write_string_inverted+0x36>
    3052:	80 e0       	ldi	r24, 0x00	; 0
    3054:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
    3058:	df 91       	pop	r29
    305a:	cf 91       	pop	r28
    305c:	1f 91       	pop	r17
    305e:	0f 91       	pop	r16
    3060:	ff 90       	pop	r15
    3062:	ef 90       	pop	r14
    3064:	df 90       	pop	r13
    3066:	cf 90       	pop	r12
    3068:	bf 90       	pop	r11
    306a:	af 90       	pop	r10
    306c:	9f 90       	pop	r9
    306e:	8f 90       	pop	r8
    3070:	08 95       	ret

00003072 <character_printer>:

//warning: array must have percieved height and width divisible by 8
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
    3072:	2f 92       	push	r2
    3074:	3f 92       	push	r3
    3076:	4f 92       	push	r4
    3078:	5f 92       	push	r5
    307a:	6f 92       	push	r6
    307c:	7f 92       	push	r7
    307e:	8f 92       	push	r8
    3080:	9f 92       	push	r9
    3082:	af 92       	push	r10
    3084:	bf 92       	push	r11
    3086:	cf 92       	push	r12
    3088:	df 92       	push	r13
    308a:	ef 92       	push	r14
    308c:	ff 92       	push	r15
    308e:	0f 93       	push	r16
    3090:	1f 93       	push	r17
    3092:	cf 93       	push	r28
    3094:	df 93       	push	r29
    3096:	cd b7       	in	r28, 0x3d	; 61
    3098:	de b7       	in	r29, 0x3e	; 62
    309a:	27 97       	sbiw	r28, 0x07	; 7
    309c:	0f b6       	in	r0, 0x3f	; 63
    309e:	f8 94       	cli
    30a0:	de bf       	out	0x3e, r29	; 62
    30a2:	0f be       	out	0x3f, r0	; 63
    30a4:	cd bf       	out	0x3d, r28	; 61
		for (int line = 0; line < height/8; line++){
    30a6:	fa 01       	movw	r30, r20
    30a8:	ff 23       	and	r31, r31
    30aa:	0c f4       	brge	.+2      	; 0x30ae <character_printer+0x3c>
    30ac:	37 96       	adiw	r30, 0x07	; 7
    30ae:	af 01       	movw	r20, r30
    30b0:	55 95       	asr	r21
    30b2:	47 95       	ror	r20
    30b4:	55 95       	asr	r21
    30b6:	47 95       	ror	r20
    30b8:	55 95       	asr	r21
    30ba:	47 95       	ror	r20
    30bc:	5a 83       	std	Y+2, r21	; 0x02
    30be:	49 83       	std	Y+1, r20	; 0x01
    30c0:	14 16       	cp	r1, r20
    30c2:	15 06       	cpc	r1, r21
    30c4:	0c f0       	brlt	.+2      	; 0x30c8 <character_printer+0x56>
    30c6:	5a c0       	rjmp	.+180    	; 0x317c <character_printer+0x10a>
    30c8:	2e 2c       	mov	r2, r14
    30ca:	2d 83       	std	Y+5, r18	; 0x05
    30cc:	3b 01       	movw	r6, r22
    30ce:	fb 01       	movw	r30, r22
    30d0:	ee 0f       	add	r30, r30
    30d2:	ff 1f       	adc	r31, r31
    30d4:	ee 0f       	add	r30, r30
    30d6:	ff 1f       	adc	r31, r31
    30d8:	ee 0f       	add	r30, r30
    30da:	ff 1f       	adc	r31, r31
    30dc:	fc 83       	std	Y+4, r31	; 0x04
    30de:	eb 83       	std	Y+3, r30	; 0x03
    30e0:	a8 2e       	mov	r10, r24
    30e2:	b9 2e       	mov	r11, r25
    30e4:	30 2e       	mov	r3, r16
    30e6:	81 2c       	mov	r8, r1
    30e8:	91 2c       	mov	r9, r1
    30ea:	7f 83       	std	Y+7, r23	; 0x07
    30ec:	6e 83       	std	Y+6, r22	; 0x06
	ext_ram[0] = c;
}
void oled_write_data(char c)
{
	volatile char *ext_ram = (char *) 0x1200;
	ext_ram[0] = c;
    30ee:	0f 2e       	mov	r0, r31
    30f0:	c1 2c       	mov	r12, r1
    30f2:	f2 e1       	ldi	r31, 0x12	; 18
    30f4:	df 2e       	mov	r13, r31
    30f6:	f0 2d       	mov	r31, r0

//warning: array must have percieved height and width divisible by 8
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
		for (int line = 0; line < height/8; line++){
			int offset = line*width*8;
			for (int col = 0; col < width; col++){
    30f8:	16 14       	cp	r1, r6
    30fa:	17 04       	cpc	r1, r7
    30fc:	8c f5       	brge	.+98     	; 0x3160 <character_printer+0xee>
    30fe:	75 01       	movw	r14, r10
    3100:	e6 0c       	add	r14, r6
    3102:	f7 1c       	adc	r15, r7
    3104:	85 01       	movw	r16, r10
    3106:	4d 80       	ldd	r4, Y+5	; 0x05
    3108:	26 c0       	rjmp	.+76     	; 0x3156 <character_printer+0xe4>
				unsigned char c = 0b00000000;
				for (int i = 0; i < 8; i++){
					c |= (pgm_read_byte(&(arr[i*width + col + offset])) << i);
    310a:	84 91       	lpm	r24, Z
    310c:	90 e0       	ldi	r25, 0x00	; 0
    310e:	02 2e       	mov	r0, r18
    3110:	02 c0       	rjmp	.+4      	; 0x3116 <character_printer+0xa4>
    3112:	88 0f       	add	r24, r24
    3114:	99 1f       	adc	r25, r25
    3116:	0a 94       	dec	r0
    3118:	e2 f7       	brpl	.-8      	; 0x3112 <character_printer+0xa0>
    311a:	58 2a       	or	r5, r24
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
		for (int line = 0; line < height/8; line++){
			int offset = line*width*8;
			for (int col = 0; col < width; col++){
				unsigned char c = 0b00000000;
				for (int i = 0; i < 8; i++){
    311c:	2f 5f       	subi	r18, 0xFF	; 255
    311e:	3f 4f       	sbci	r19, 0xFF	; 255
    3120:	4e 81       	ldd	r20, Y+6	; 0x06
    3122:	5f 81       	ldd	r21, Y+7	; 0x07
    3124:	e4 0f       	add	r30, r20
    3126:	f5 1f       	adc	r31, r21
    3128:	28 30       	cpi	r18, 0x08	; 8
    312a:	31 05       	cpc	r19, r1
    312c:	71 f7       	brne	.-36     	; 0x310a <character_printer+0x98>
					c |= (pgm_read_byte(&(arr[i*width + col + offset])) << i);
				}
				go_to_line(line + y_offset);
    312e:	83 2d       	mov	r24, r3
    3130:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <go_to_line>
				go_to_column(col + x_offset);
    3134:	84 2d       	mov	r24, r4
    3136:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <go_to_column>
				if(inverted){
    313a:	22 20       	and	r2, r2
    313c:	21 f0       	breq	.+8      	; 0x3146 <character_printer+0xd4>
					oled_write_data(~c);
    313e:	50 94       	com	r5
	ext_ram[0] = c;
}
void oled_write_data(char c)
{
	volatile char *ext_ram = (char *) 0x1200;
	ext_ram[0] = c;
    3140:	f6 01       	movw	r30, r12
    3142:	50 82       	st	Z, r5
    3144:	02 c0       	rjmp	.+4      	; 0x314a <character_printer+0xd8>
    3146:	f6 01       	movw	r30, r12
    3148:	50 82       	st	Z, r5
    314a:	43 94       	inc	r4
    314c:	0f 5f       	subi	r16, 0xFF	; 255
    314e:	1f 4f       	sbci	r17, 0xFF	; 255

//warning: array must have percieved height and width divisible by 8
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
		for (int line = 0; line < height/8; line++){
			int offset = line*width*8;
			for (int col = 0; col < width; col++){
    3150:	0e 15       	cp	r16, r14
    3152:	1f 05       	cpc	r17, r15
    3154:	29 f0       	breq	.+10     	; 0x3160 <character_printer+0xee>
	
}

//warning: array must have percieved height and width divisible by 8
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
		for (int line = 0; line < height/8; line++){
    3156:	f8 01       	movw	r30, r16
    3158:	20 e0       	ldi	r18, 0x00	; 0
    315a:	30 e0       	ldi	r19, 0x00	; 0
    315c:	51 2c       	mov	r5, r1
    315e:	d5 cf       	rjmp	.-86     	; 0x310a <character_printer+0x98>
    3160:	ff ef       	ldi	r31, 0xFF	; 255
    3162:	8f 1a       	sub	r8, r31
    3164:	9f 0a       	sbc	r9, r31
    3166:	33 94       	inc	r3
    3168:	2b 81       	ldd	r18, Y+3	; 0x03
    316a:	3c 81       	ldd	r19, Y+4	; 0x04
    316c:	a2 0e       	add	r10, r18
    316e:	b3 1e       	adc	r11, r19
    3170:	49 81       	ldd	r20, Y+1	; 0x01
    3172:	5a 81       	ldd	r21, Y+2	; 0x02
    3174:	84 16       	cp	r8, r20
    3176:	95 06       	cpc	r9, r21
    3178:	09 f0       	breq	.+2      	; 0x317c <character_printer+0x10a>
    317a:	be cf       	rjmp	.-132    	; 0x30f8 <character_printer+0x86>
				else{
					oled_write_data(c);
				}
			}
		}
}
    317c:	27 96       	adiw	r28, 0x07	; 7
    317e:	0f b6       	in	r0, 0x3f	; 63
    3180:	f8 94       	cli
    3182:	de bf       	out	0x3e, r29	; 62
    3184:	0f be       	out	0x3f, r0	; 63
    3186:	cd bf       	out	0x3d, r28	; 61
    3188:	df 91       	pop	r29
    318a:	cf 91       	pop	r28
    318c:	1f 91       	pop	r17
    318e:	0f 91       	pop	r16
    3190:	ff 90       	pop	r15
    3192:	ef 90       	pop	r14
    3194:	df 90       	pop	r13
    3196:	cf 90       	pop	r12
    3198:	bf 90       	pop	r11
    319a:	af 90       	pop	r10
    319c:	9f 90       	pop	r9
    319e:	8f 90       	pop	r8
    31a0:	7f 90       	pop	r7
    31a2:	6f 90       	pop	r6
    31a4:	5f 90       	pop	r5
    31a6:	4f 90       	pop	r4
    31a8:	3f 90       	pop	r3
    31aa:	2f 90       	pop	r2
    31ac:	08 95       	ret

000031ae <USART_Transmit>:
	UCSR1C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
	clear_bit(UCSR0C, 0); // Clock polarity
	fdevopen(USART_Transmit, USART_Receive);
}
void USART_Transmit(unsigned char data){
	while (!(UCSR0A & (1<<UDRE0)));
    31ae:	5d 9b       	sbis	0x0b, 5	; 11
    31b0:	fe cf       	rjmp	.-4      	; 0x31ae <USART_Transmit>
	
	UDR0 = data;
    31b2:	8c b9       	out	0x0c, r24	; 12
    31b4:	08 95       	ret

000031b6 <USART_Receive>:
}

unsigned int USART_Receive(void)
{
	
	while (!(UCSR0A & (1<<RXC0)));
    31b6:	5f 9b       	sbis	0x0b, 7	; 11
    31b8:	fe cf       	rjmp	.-4      	; 0x31b6 <USART_Receive>
	

	return UDR0;
    31ba:	8c b1       	in	r24, 0x0c	; 12
    31bc:	90 e0       	ldi	r25, 0x00	; 0
    31be:	08 95       	ret

000031c0 <USART_Init>:
#include <stdio.h>
#define clear_bit( reg, bit ) (reg &= ~(1 << bit))

void USART_Init (unsigned int ubrr ){
	
	UBRR0H = (unsigned char)(ubrr>>8);
    31c0:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
    31c2:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    31c4:	88 e1       	ldi	r24, 0x18	; 24
    31c6:	8a b9       	out	0x0a, r24	; 10
	
	UCSR1C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
    31c8:	8e e8       	ldi	r24, 0x8E	; 142
    31ca:	8c bf       	out	0x3c, r24	; 60
	clear_bit(UCSR0C, 0); // Clock polarity
    31cc:	80 b5       	in	r24, 0x20	; 32
    31ce:	8e 7f       	andi	r24, 0xFE	; 254
    31d0:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
    31d2:	6b ed       	ldi	r22, 0xDB	; 219
    31d4:	78 e1       	ldi	r23, 0x18	; 24
    31d6:	87 ed       	ldi	r24, 0xD7	; 215
    31d8:	98 e1       	ldi	r25, 0x18	; 24
    31da:	0e 94 95 1a 	call	0x352a	; 0x352a <fdevopen>
    31de:	08 95       	ret

000031e0 <__divmodhi4>:
    31e0:	97 fb       	bst	r25, 7
    31e2:	07 2e       	mov	r0, r23
    31e4:	16 f4       	brtc	.+4      	; 0x31ea <__divmodhi4+0xa>
    31e6:	00 94       	com	r0
    31e8:	07 d0       	rcall	.+14     	; 0x31f8 <__divmodhi4_neg1>
    31ea:	77 fd       	sbrc	r23, 7
    31ec:	09 d0       	rcall	.+18     	; 0x3200 <__divmodhi4_neg2>
    31ee:	0e 94 04 19 	call	0x3208	; 0x3208 <__udivmodhi4>
    31f2:	07 fc       	sbrc	r0, 7
    31f4:	05 d0       	rcall	.+10     	; 0x3200 <__divmodhi4_neg2>
    31f6:	3e f4       	brtc	.+14     	; 0x3206 <__divmodhi4_exit>

000031f8 <__divmodhi4_neg1>:
    31f8:	90 95       	com	r25
    31fa:	81 95       	neg	r24
    31fc:	9f 4f       	sbci	r25, 0xFF	; 255
    31fe:	08 95       	ret

00003200 <__divmodhi4_neg2>:
    3200:	70 95       	com	r23
    3202:	61 95       	neg	r22
    3204:	7f 4f       	sbci	r23, 0xFF	; 255

00003206 <__divmodhi4_exit>:
    3206:	08 95       	ret

00003208 <__udivmodhi4>:
    3208:	aa 1b       	sub	r26, r26
    320a:	bb 1b       	sub	r27, r27
    320c:	51 e1       	ldi	r21, 0x11	; 17
    320e:	07 c0       	rjmp	.+14     	; 0x321e <__udivmodhi4_ep>

00003210 <__udivmodhi4_loop>:
    3210:	aa 1f       	adc	r26, r26
    3212:	bb 1f       	adc	r27, r27
    3214:	a6 17       	cp	r26, r22
    3216:	b7 07       	cpc	r27, r23
    3218:	10 f0       	brcs	.+4      	; 0x321e <__udivmodhi4_ep>
    321a:	a6 1b       	sub	r26, r22
    321c:	b7 0b       	sbc	r27, r23

0000321e <__udivmodhi4_ep>:
    321e:	88 1f       	adc	r24, r24
    3220:	99 1f       	adc	r25, r25
    3222:	5a 95       	dec	r21
    3224:	a9 f7       	brne	.-22     	; 0x3210 <__udivmodhi4_loop>
    3226:	80 95       	com	r24
    3228:	90 95       	com	r25
    322a:	bc 01       	movw	r22, r24
    322c:	cd 01       	movw	r24, r26
    322e:	08 95       	ret

00003230 <malloc>:
    3230:	0f 93       	push	r16
    3232:	1f 93       	push	r17
    3234:	cf 93       	push	r28
    3236:	df 93       	push	r29
    3238:	82 30       	cpi	r24, 0x02	; 2
    323a:	91 05       	cpc	r25, r1
    323c:	10 f4       	brcc	.+4      	; 0x3242 <malloc+0x12>
    323e:	82 e0       	ldi	r24, 0x02	; 2
    3240:	90 e0       	ldi	r25, 0x00	; 0
    3242:	e0 91 db 03 	lds	r30, 0x03DB	; 0x8003db <__flp>
    3246:	f0 91 dc 03 	lds	r31, 0x03DC	; 0x8003dc <__flp+0x1>
    324a:	20 e0       	ldi	r18, 0x00	; 0
    324c:	30 e0       	ldi	r19, 0x00	; 0
    324e:	a0 e0       	ldi	r26, 0x00	; 0
    3250:	b0 e0       	ldi	r27, 0x00	; 0
    3252:	30 97       	sbiw	r30, 0x00	; 0
    3254:	19 f1       	breq	.+70     	; 0x329c <malloc+0x6c>
    3256:	40 81       	ld	r20, Z
    3258:	51 81       	ldd	r21, Z+1	; 0x01
    325a:	02 81       	ldd	r16, Z+2	; 0x02
    325c:	13 81       	ldd	r17, Z+3	; 0x03
    325e:	48 17       	cp	r20, r24
    3260:	59 07       	cpc	r21, r25
    3262:	c8 f0       	brcs	.+50     	; 0x3296 <malloc+0x66>
    3264:	84 17       	cp	r24, r20
    3266:	95 07       	cpc	r25, r21
    3268:	69 f4       	brne	.+26     	; 0x3284 <malloc+0x54>
    326a:	10 97       	sbiw	r26, 0x00	; 0
    326c:	31 f0       	breq	.+12     	; 0x327a <malloc+0x4a>
    326e:	12 96       	adiw	r26, 0x02	; 2
    3270:	0c 93       	st	X, r16
    3272:	12 97       	sbiw	r26, 0x02	; 2
    3274:	13 96       	adiw	r26, 0x03	; 3
    3276:	1c 93       	st	X, r17
    3278:	27 c0       	rjmp	.+78     	; 0x32c8 <malloc+0x98>
    327a:	00 93 db 03 	sts	0x03DB, r16	; 0x8003db <__flp>
    327e:	10 93 dc 03 	sts	0x03DC, r17	; 0x8003dc <__flp+0x1>
    3282:	22 c0       	rjmp	.+68     	; 0x32c8 <malloc+0x98>
    3284:	21 15       	cp	r18, r1
    3286:	31 05       	cpc	r19, r1
    3288:	19 f0       	breq	.+6      	; 0x3290 <malloc+0x60>
    328a:	42 17       	cp	r20, r18
    328c:	53 07       	cpc	r21, r19
    328e:	18 f4       	brcc	.+6      	; 0x3296 <malloc+0x66>
    3290:	9a 01       	movw	r18, r20
    3292:	bd 01       	movw	r22, r26
    3294:	ef 01       	movw	r28, r30
    3296:	df 01       	movw	r26, r30
    3298:	f8 01       	movw	r30, r16
    329a:	db cf       	rjmp	.-74     	; 0x3252 <malloc+0x22>
    329c:	21 15       	cp	r18, r1
    329e:	31 05       	cpc	r19, r1
    32a0:	f9 f0       	breq	.+62     	; 0x32e0 <malloc+0xb0>
    32a2:	28 1b       	sub	r18, r24
    32a4:	39 0b       	sbc	r19, r25
    32a6:	24 30       	cpi	r18, 0x04	; 4
    32a8:	31 05       	cpc	r19, r1
    32aa:	80 f4       	brcc	.+32     	; 0x32cc <malloc+0x9c>
    32ac:	8a 81       	ldd	r24, Y+2	; 0x02
    32ae:	9b 81       	ldd	r25, Y+3	; 0x03
    32b0:	61 15       	cp	r22, r1
    32b2:	71 05       	cpc	r23, r1
    32b4:	21 f0       	breq	.+8      	; 0x32be <malloc+0x8e>
    32b6:	fb 01       	movw	r30, r22
    32b8:	93 83       	std	Z+3, r25	; 0x03
    32ba:	82 83       	std	Z+2, r24	; 0x02
    32bc:	04 c0       	rjmp	.+8      	; 0x32c6 <malloc+0x96>
    32be:	90 93 dc 03 	sts	0x03DC, r25	; 0x8003dc <__flp+0x1>
    32c2:	80 93 db 03 	sts	0x03DB, r24	; 0x8003db <__flp>
    32c6:	fe 01       	movw	r30, r28
    32c8:	32 96       	adiw	r30, 0x02	; 2
    32ca:	44 c0       	rjmp	.+136    	; 0x3354 <malloc+0x124>
    32cc:	fe 01       	movw	r30, r28
    32ce:	e2 0f       	add	r30, r18
    32d0:	f3 1f       	adc	r31, r19
    32d2:	81 93       	st	Z+, r24
    32d4:	91 93       	st	Z+, r25
    32d6:	22 50       	subi	r18, 0x02	; 2
    32d8:	31 09       	sbc	r19, r1
    32da:	39 83       	std	Y+1, r19	; 0x01
    32dc:	28 83       	st	Y, r18
    32de:	3a c0       	rjmp	.+116    	; 0x3354 <malloc+0x124>
    32e0:	20 91 d9 03 	lds	r18, 0x03D9	; 0x8003d9 <__brkval>
    32e4:	30 91 da 03 	lds	r19, 0x03DA	; 0x8003da <__brkval+0x1>
    32e8:	23 2b       	or	r18, r19
    32ea:	41 f4       	brne	.+16     	; 0x32fc <malloc+0xcc>
    32ec:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    32f0:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    32f4:	30 93 da 03 	sts	0x03DA, r19	; 0x8003da <__brkval+0x1>
    32f8:	20 93 d9 03 	sts	0x03D9, r18	; 0x8003d9 <__brkval>
    32fc:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    3300:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    3304:	21 15       	cp	r18, r1
    3306:	31 05       	cpc	r19, r1
    3308:	41 f4       	brne	.+16     	; 0x331a <malloc+0xea>
    330a:	2d b7       	in	r18, 0x3d	; 61
    330c:	3e b7       	in	r19, 0x3e	; 62
    330e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    3312:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    3316:	24 1b       	sub	r18, r20
    3318:	35 0b       	sbc	r19, r21
    331a:	e0 91 d9 03 	lds	r30, 0x03D9	; 0x8003d9 <__brkval>
    331e:	f0 91 da 03 	lds	r31, 0x03DA	; 0x8003da <__brkval+0x1>
    3322:	e2 17       	cp	r30, r18
    3324:	f3 07       	cpc	r31, r19
    3326:	a0 f4       	brcc	.+40     	; 0x3350 <malloc+0x120>
    3328:	2e 1b       	sub	r18, r30
    332a:	3f 0b       	sbc	r19, r31
    332c:	28 17       	cp	r18, r24
    332e:	39 07       	cpc	r19, r25
    3330:	78 f0       	brcs	.+30     	; 0x3350 <malloc+0x120>
    3332:	ac 01       	movw	r20, r24
    3334:	4e 5f       	subi	r20, 0xFE	; 254
    3336:	5f 4f       	sbci	r21, 0xFF	; 255
    3338:	24 17       	cp	r18, r20
    333a:	35 07       	cpc	r19, r21
    333c:	48 f0       	brcs	.+18     	; 0x3350 <malloc+0x120>
    333e:	4e 0f       	add	r20, r30
    3340:	5f 1f       	adc	r21, r31
    3342:	50 93 da 03 	sts	0x03DA, r21	; 0x8003da <__brkval+0x1>
    3346:	40 93 d9 03 	sts	0x03D9, r20	; 0x8003d9 <__brkval>
    334a:	81 93       	st	Z+, r24
    334c:	91 93       	st	Z+, r25
    334e:	02 c0       	rjmp	.+4      	; 0x3354 <malloc+0x124>
    3350:	e0 e0       	ldi	r30, 0x00	; 0
    3352:	f0 e0       	ldi	r31, 0x00	; 0
    3354:	cf 01       	movw	r24, r30
    3356:	df 91       	pop	r29
    3358:	cf 91       	pop	r28
    335a:	1f 91       	pop	r17
    335c:	0f 91       	pop	r16
    335e:	08 95       	ret

00003360 <free>:
    3360:	cf 93       	push	r28
    3362:	df 93       	push	r29
    3364:	00 97       	sbiw	r24, 0x00	; 0
    3366:	09 f4       	brne	.+2      	; 0x336a <free+0xa>
    3368:	81 c0       	rjmp	.+258    	; 0x346c <free+0x10c>
    336a:	fc 01       	movw	r30, r24
    336c:	32 97       	sbiw	r30, 0x02	; 2
    336e:	13 82       	std	Z+3, r1	; 0x03
    3370:	12 82       	std	Z+2, r1	; 0x02
    3372:	a0 91 db 03 	lds	r26, 0x03DB	; 0x8003db <__flp>
    3376:	b0 91 dc 03 	lds	r27, 0x03DC	; 0x8003dc <__flp+0x1>
    337a:	10 97       	sbiw	r26, 0x00	; 0
    337c:	81 f4       	brne	.+32     	; 0x339e <free+0x3e>
    337e:	20 81       	ld	r18, Z
    3380:	31 81       	ldd	r19, Z+1	; 0x01
    3382:	82 0f       	add	r24, r18
    3384:	93 1f       	adc	r25, r19
    3386:	20 91 d9 03 	lds	r18, 0x03D9	; 0x8003d9 <__brkval>
    338a:	30 91 da 03 	lds	r19, 0x03DA	; 0x8003da <__brkval+0x1>
    338e:	28 17       	cp	r18, r24
    3390:	39 07       	cpc	r19, r25
    3392:	51 f5       	brne	.+84     	; 0x33e8 <free+0x88>
    3394:	f0 93 da 03 	sts	0x03DA, r31	; 0x8003da <__brkval+0x1>
    3398:	e0 93 d9 03 	sts	0x03D9, r30	; 0x8003d9 <__brkval>
    339c:	67 c0       	rjmp	.+206    	; 0x346c <free+0x10c>
    339e:	ed 01       	movw	r28, r26
    33a0:	20 e0       	ldi	r18, 0x00	; 0
    33a2:	30 e0       	ldi	r19, 0x00	; 0
    33a4:	ce 17       	cp	r28, r30
    33a6:	df 07       	cpc	r29, r31
    33a8:	40 f4       	brcc	.+16     	; 0x33ba <free+0x5a>
    33aa:	4a 81       	ldd	r20, Y+2	; 0x02
    33ac:	5b 81       	ldd	r21, Y+3	; 0x03
    33ae:	9e 01       	movw	r18, r28
    33b0:	41 15       	cp	r20, r1
    33b2:	51 05       	cpc	r21, r1
    33b4:	f1 f0       	breq	.+60     	; 0x33f2 <free+0x92>
    33b6:	ea 01       	movw	r28, r20
    33b8:	f5 cf       	rjmp	.-22     	; 0x33a4 <free+0x44>
    33ba:	d3 83       	std	Z+3, r29	; 0x03
    33bc:	c2 83       	std	Z+2, r28	; 0x02
    33be:	40 81       	ld	r20, Z
    33c0:	51 81       	ldd	r21, Z+1	; 0x01
    33c2:	84 0f       	add	r24, r20
    33c4:	95 1f       	adc	r25, r21
    33c6:	c8 17       	cp	r28, r24
    33c8:	d9 07       	cpc	r29, r25
    33ca:	59 f4       	brne	.+22     	; 0x33e2 <free+0x82>
    33cc:	88 81       	ld	r24, Y
    33ce:	99 81       	ldd	r25, Y+1	; 0x01
    33d0:	84 0f       	add	r24, r20
    33d2:	95 1f       	adc	r25, r21
    33d4:	02 96       	adiw	r24, 0x02	; 2
    33d6:	91 83       	std	Z+1, r25	; 0x01
    33d8:	80 83       	st	Z, r24
    33da:	8a 81       	ldd	r24, Y+2	; 0x02
    33dc:	9b 81       	ldd	r25, Y+3	; 0x03
    33de:	93 83       	std	Z+3, r25	; 0x03
    33e0:	82 83       	std	Z+2, r24	; 0x02
    33e2:	21 15       	cp	r18, r1
    33e4:	31 05       	cpc	r19, r1
    33e6:	29 f4       	brne	.+10     	; 0x33f2 <free+0x92>
    33e8:	f0 93 dc 03 	sts	0x03DC, r31	; 0x8003dc <__flp+0x1>
    33ec:	e0 93 db 03 	sts	0x03DB, r30	; 0x8003db <__flp>
    33f0:	3d c0       	rjmp	.+122    	; 0x346c <free+0x10c>
    33f2:	e9 01       	movw	r28, r18
    33f4:	fb 83       	std	Y+3, r31	; 0x03
    33f6:	ea 83       	std	Y+2, r30	; 0x02
    33f8:	49 91       	ld	r20, Y+
    33fa:	59 91       	ld	r21, Y+
    33fc:	c4 0f       	add	r28, r20
    33fe:	d5 1f       	adc	r29, r21
    3400:	ec 17       	cp	r30, r28
    3402:	fd 07       	cpc	r31, r29
    3404:	61 f4       	brne	.+24     	; 0x341e <free+0xbe>
    3406:	80 81       	ld	r24, Z
    3408:	91 81       	ldd	r25, Z+1	; 0x01
    340a:	84 0f       	add	r24, r20
    340c:	95 1f       	adc	r25, r21
    340e:	02 96       	adiw	r24, 0x02	; 2
    3410:	e9 01       	movw	r28, r18
    3412:	99 83       	std	Y+1, r25	; 0x01
    3414:	88 83       	st	Y, r24
    3416:	82 81       	ldd	r24, Z+2	; 0x02
    3418:	93 81       	ldd	r25, Z+3	; 0x03
    341a:	9b 83       	std	Y+3, r25	; 0x03
    341c:	8a 83       	std	Y+2, r24	; 0x02
    341e:	e0 e0       	ldi	r30, 0x00	; 0
    3420:	f0 e0       	ldi	r31, 0x00	; 0
    3422:	12 96       	adiw	r26, 0x02	; 2
    3424:	8d 91       	ld	r24, X+
    3426:	9c 91       	ld	r25, X
    3428:	13 97       	sbiw	r26, 0x03	; 3
    342a:	00 97       	sbiw	r24, 0x00	; 0
    342c:	19 f0       	breq	.+6      	; 0x3434 <free+0xd4>
    342e:	fd 01       	movw	r30, r26
    3430:	dc 01       	movw	r26, r24
    3432:	f7 cf       	rjmp	.-18     	; 0x3422 <free+0xc2>
    3434:	8d 91       	ld	r24, X+
    3436:	9c 91       	ld	r25, X
    3438:	11 97       	sbiw	r26, 0x01	; 1
    343a:	9d 01       	movw	r18, r26
    343c:	2e 5f       	subi	r18, 0xFE	; 254
    343e:	3f 4f       	sbci	r19, 0xFF	; 255
    3440:	82 0f       	add	r24, r18
    3442:	93 1f       	adc	r25, r19
    3444:	20 91 d9 03 	lds	r18, 0x03D9	; 0x8003d9 <__brkval>
    3448:	30 91 da 03 	lds	r19, 0x03DA	; 0x8003da <__brkval+0x1>
    344c:	28 17       	cp	r18, r24
    344e:	39 07       	cpc	r19, r25
    3450:	69 f4       	brne	.+26     	; 0x346c <free+0x10c>
    3452:	30 97       	sbiw	r30, 0x00	; 0
    3454:	29 f4       	brne	.+10     	; 0x3460 <free+0x100>
    3456:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <__flp+0x1>
    345a:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <__flp>
    345e:	02 c0       	rjmp	.+4      	; 0x3464 <free+0x104>
    3460:	13 82       	std	Z+3, r1	; 0x03
    3462:	12 82       	std	Z+2, r1	; 0x02
    3464:	b0 93 da 03 	sts	0x03DA, r27	; 0x8003da <__brkval+0x1>
    3468:	a0 93 d9 03 	sts	0x03D9, r26	; 0x8003d9 <__brkval>
    346c:	df 91       	pop	r29
    346e:	cf 91       	pop	r28
    3470:	08 95       	ret

00003472 <do_rand>:
    3472:	8f 92       	push	r8
    3474:	9f 92       	push	r9
    3476:	af 92       	push	r10
    3478:	bf 92       	push	r11
    347a:	cf 92       	push	r12
    347c:	df 92       	push	r13
    347e:	ef 92       	push	r14
    3480:	ff 92       	push	r15
    3482:	cf 93       	push	r28
    3484:	df 93       	push	r29
    3486:	ec 01       	movw	r28, r24
    3488:	68 81       	ld	r22, Y
    348a:	79 81       	ldd	r23, Y+1	; 0x01
    348c:	8a 81       	ldd	r24, Y+2	; 0x02
    348e:	9b 81       	ldd	r25, Y+3	; 0x03
    3490:	61 15       	cp	r22, r1
    3492:	71 05       	cpc	r23, r1
    3494:	81 05       	cpc	r24, r1
    3496:	91 05       	cpc	r25, r1
    3498:	21 f4       	brne	.+8      	; 0x34a2 <do_rand+0x30>
    349a:	64 e2       	ldi	r22, 0x24	; 36
    349c:	79 ed       	ldi	r23, 0xD9	; 217
    349e:	8b e5       	ldi	r24, 0x5B	; 91
    34a0:	97 e0       	ldi	r25, 0x07	; 7
    34a2:	2d e1       	ldi	r18, 0x1D	; 29
    34a4:	33 ef       	ldi	r19, 0xF3	; 243
    34a6:	41 e0       	ldi	r20, 0x01	; 1
    34a8:	50 e0       	ldi	r21, 0x00	; 0
    34aa:	0e 94 cc 1d 	call	0x3b98	; 0x3b98 <__divmodsi4>
    34ae:	49 01       	movw	r8, r18
    34b0:	5a 01       	movw	r10, r20
    34b2:	9b 01       	movw	r18, r22
    34b4:	ac 01       	movw	r20, r24
    34b6:	a7 ea       	ldi	r26, 0xA7	; 167
    34b8:	b1 e4       	ldi	r27, 0x41	; 65
    34ba:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <__muluhisi3>
    34be:	6b 01       	movw	r12, r22
    34c0:	7c 01       	movw	r14, r24
    34c2:	ac ee       	ldi	r26, 0xEC	; 236
    34c4:	b4 ef       	ldi	r27, 0xF4	; 244
    34c6:	a5 01       	movw	r20, r10
    34c8:	94 01       	movw	r18, r8
    34ca:	0e 94 f9 1d 	call	0x3bf2	; 0x3bf2 <__mulohisi3>
    34ce:	dc 01       	movw	r26, r24
    34d0:	cb 01       	movw	r24, r22
    34d2:	8c 0d       	add	r24, r12
    34d4:	9d 1d       	adc	r25, r13
    34d6:	ae 1d       	adc	r26, r14
    34d8:	bf 1d       	adc	r27, r15
    34da:	b7 ff       	sbrs	r27, 7
    34dc:	03 c0       	rjmp	.+6      	; 0x34e4 <do_rand+0x72>
    34de:	01 97       	sbiw	r24, 0x01	; 1
    34e0:	a1 09       	sbc	r26, r1
    34e2:	b0 48       	sbci	r27, 0x80	; 128
    34e4:	88 83       	st	Y, r24
    34e6:	99 83       	std	Y+1, r25	; 0x01
    34e8:	aa 83       	std	Y+2, r26	; 0x02
    34ea:	bb 83       	std	Y+3, r27	; 0x03
    34ec:	9f 77       	andi	r25, 0x7F	; 127
    34ee:	df 91       	pop	r29
    34f0:	cf 91       	pop	r28
    34f2:	ff 90       	pop	r15
    34f4:	ef 90       	pop	r14
    34f6:	df 90       	pop	r13
    34f8:	cf 90       	pop	r12
    34fa:	bf 90       	pop	r11
    34fc:	af 90       	pop	r10
    34fe:	9f 90       	pop	r9
    3500:	8f 90       	pop	r8
    3502:	08 95       	ret

00003504 <rand_r>:
    3504:	0e 94 39 1a 	call	0x3472	; 0x3472 <do_rand>
    3508:	08 95       	ret

0000350a <rand>:
    350a:	86 e0       	ldi	r24, 0x06	; 6
    350c:	91 e0       	ldi	r25, 0x01	; 1
    350e:	0e 94 39 1a 	call	0x3472	; 0x3472 <do_rand>
    3512:	08 95       	ret

00003514 <srand>:
    3514:	a0 e0       	ldi	r26, 0x00	; 0
    3516:	b0 e0       	ldi	r27, 0x00	; 0
    3518:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
    351c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
    3520:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
    3524:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
    3528:	08 95       	ret

0000352a <fdevopen>:
    352a:	0f 93       	push	r16
    352c:	1f 93       	push	r17
    352e:	cf 93       	push	r28
    3530:	df 93       	push	r29
    3532:	00 97       	sbiw	r24, 0x00	; 0
    3534:	31 f4       	brne	.+12     	; 0x3542 <fdevopen+0x18>
    3536:	61 15       	cp	r22, r1
    3538:	71 05       	cpc	r23, r1
    353a:	19 f4       	brne	.+6      	; 0x3542 <fdevopen+0x18>
    353c:	80 e0       	ldi	r24, 0x00	; 0
    353e:	90 e0       	ldi	r25, 0x00	; 0
    3540:	3a c0       	rjmp	.+116    	; 0x35b6 <fdevopen+0x8c>
    3542:	8b 01       	movw	r16, r22
    3544:	ec 01       	movw	r28, r24
    3546:	6e e0       	ldi	r22, 0x0E	; 14
    3548:	70 e0       	ldi	r23, 0x00	; 0
    354a:	81 e0       	ldi	r24, 0x01	; 1
    354c:	90 e0       	ldi	r25, 0x00	; 0
    354e:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <calloc>
    3552:	fc 01       	movw	r30, r24
    3554:	89 2b       	or	r24, r25
    3556:	91 f3       	breq	.-28     	; 0x353c <fdevopen+0x12>
    3558:	80 e8       	ldi	r24, 0x80	; 128
    355a:	83 83       	std	Z+3, r24	; 0x03
    355c:	01 15       	cp	r16, r1
    355e:	11 05       	cpc	r17, r1
    3560:	71 f0       	breq	.+28     	; 0x357e <fdevopen+0x54>
    3562:	13 87       	std	Z+11, r17	; 0x0b
    3564:	02 87       	std	Z+10, r16	; 0x0a
    3566:	81 e8       	ldi	r24, 0x81	; 129
    3568:	83 83       	std	Z+3, r24	; 0x03
    356a:	80 91 dd 03 	lds	r24, 0x03DD	; 0x8003dd <__iob>
    356e:	90 91 de 03 	lds	r25, 0x03DE	; 0x8003de <__iob+0x1>
    3572:	89 2b       	or	r24, r25
    3574:	21 f4       	brne	.+8      	; 0x357e <fdevopen+0x54>
    3576:	f0 93 de 03 	sts	0x03DE, r31	; 0x8003de <__iob+0x1>
    357a:	e0 93 dd 03 	sts	0x03DD, r30	; 0x8003dd <__iob>
    357e:	20 97       	sbiw	r28, 0x00	; 0
    3580:	c9 f0       	breq	.+50     	; 0x35b4 <fdevopen+0x8a>
    3582:	d1 87       	std	Z+9, r29	; 0x09
    3584:	c0 87       	std	Z+8, r28	; 0x08
    3586:	83 81       	ldd	r24, Z+3	; 0x03
    3588:	82 60       	ori	r24, 0x02	; 2
    358a:	83 83       	std	Z+3, r24	; 0x03
    358c:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    3590:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    3594:	89 2b       	or	r24, r25
    3596:	71 f4       	brne	.+28     	; 0x35b4 <fdevopen+0x8a>
    3598:	f0 93 e0 03 	sts	0x03E0, r31	; 0x8003e0 <__iob+0x3>
    359c:	e0 93 df 03 	sts	0x03DF, r30	; 0x8003df <__iob+0x2>
    35a0:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <__iob+0x4>
    35a4:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <__iob+0x5>
    35a8:	89 2b       	or	r24, r25
    35aa:	21 f4       	brne	.+8      	; 0x35b4 <fdevopen+0x8a>
    35ac:	f0 93 e2 03 	sts	0x03E2, r31	; 0x8003e2 <__iob+0x5>
    35b0:	e0 93 e1 03 	sts	0x03E1, r30	; 0x8003e1 <__iob+0x4>
    35b4:	cf 01       	movw	r24, r30
    35b6:	df 91       	pop	r29
    35b8:	cf 91       	pop	r28
    35ba:	1f 91       	pop	r17
    35bc:	0f 91       	pop	r16
    35be:	08 95       	ret

000035c0 <printf>:
    35c0:	a0 e0       	ldi	r26, 0x00	; 0
    35c2:	b0 e0       	ldi	r27, 0x00	; 0
    35c4:	e6 ee       	ldi	r30, 0xE6	; 230
    35c6:	fa e1       	ldi	r31, 0x1A	; 26
    35c8:	0c 94 0e 1e 	jmp	0x3c1c	; 0x3c1c <__prologue_saves__+0x20>
    35cc:	ae 01       	movw	r20, r28
    35ce:	4b 5f       	subi	r20, 0xFB	; 251
    35d0:	5f 4f       	sbci	r21, 0xFF	; 255
    35d2:	fa 01       	movw	r30, r20
    35d4:	61 91       	ld	r22, Z+
    35d6:	71 91       	ld	r23, Z+
    35d8:	af 01       	movw	r20, r30
    35da:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    35de:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    35e2:	0e 94 18 1b 	call	0x3630	; 0x3630 <vfprintf>
    35e6:	e2 e0       	ldi	r30, 0x02	; 2
    35e8:	0c 94 2a 1e 	jmp	0x3c54	; 0x3c54 <__epilogue_restores__+0x20>

000035ec <sprintf>:
    35ec:	ae e0       	ldi	r26, 0x0E	; 14
    35ee:	b0 e0       	ldi	r27, 0x00	; 0
    35f0:	ec ef       	ldi	r30, 0xFC	; 252
    35f2:	fa e1       	ldi	r31, 0x1A	; 26
    35f4:	0c 94 0c 1e 	jmp	0x3c18	; 0x3c18 <__prologue_saves__+0x1c>
    35f8:	0d 89       	ldd	r16, Y+21	; 0x15
    35fa:	1e 89       	ldd	r17, Y+22	; 0x16
    35fc:	86 e0       	ldi	r24, 0x06	; 6
    35fe:	8c 83       	std	Y+4, r24	; 0x04
    3600:	1a 83       	std	Y+2, r17	; 0x02
    3602:	09 83       	std	Y+1, r16	; 0x01
    3604:	8f ef       	ldi	r24, 0xFF	; 255
    3606:	9f e7       	ldi	r25, 0x7F	; 127
    3608:	9e 83       	std	Y+6, r25	; 0x06
    360a:	8d 83       	std	Y+5, r24	; 0x05
    360c:	ae 01       	movw	r20, r28
    360e:	47 5e       	subi	r20, 0xE7	; 231
    3610:	5f 4f       	sbci	r21, 0xFF	; 255
    3612:	6f 89       	ldd	r22, Y+23	; 0x17
    3614:	78 8d       	ldd	r23, Y+24	; 0x18
    3616:	ce 01       	movw	r24, r28
    3618:	01 96       	adiw	r24, 0x01	; 1
    361a:	0e 94 18 1b 	call	0x3630	; 0x3630 <vfprintf>
    361e:	ef 81       	ldd	r30, Y+7	; 0x07
    3620:	f8 85       	ldd	r31, Y+8	; 0x08
    3622:	e0 0f       	add	r30, r16
    3624:	f1 1f       	adc	r31, r17
    3626:	10 82       	st	Z, r1
    3628:	2e 96       	adiw	r28, 0x0e	; 14
    362a:	e4 e0       	ldi	r30, 0x04	; 4
    362c:	0c 94 28 1e 	jmp	0x3c50	; 0x3c50 <__epilogue_restores__+0x1c>

00003630 <vfprintf>:
    3630:	ab e0       	ldi	r26, 0x0B	; 11
    3632:	b0 e0       	ldi	r27, 0x00	; 0
    3634:	ee e1       	ldi	r30, 0x1E	; 30
    3636:	fb e1       	ldi	r31, 0x1B	; 27
    3638:	0c 94 fe 1d 	jmp	0x3bfc	; 0x3bfc <__prologue_saves__>
    363c:	6c 01       	movw	r12, r24
    363e:	7b 01       	movw	r14, r22
    3640:	8a 01       	movw	r16, r20
    3642:	fc 01       	movw	r30, r24
    3644:	17 82       	std	Z+7, r1	; 0x07
    3646:	16 82       	std	Z+6, r1	; 0x06
    3648:	83 81       	ldd	r24, Z+3	; 0x03
    364a:	81 ff       	sbrs	r24, 1
    364c:	cc c1       	rjmp	.+920    	; 0x39e6 <vfprintf+0x3b6>
    364e:	ce 01       	movw	r24, r28
    3650:	01 96       	adiw	r24, 0x01	; 1
    3652:	3c 01       	movw	r6, r24
    3654:	f6 01       	movw	r30, r12
    3656:	93 81       	ldd	r25, Z+3	; 0x03
    3658:	f7 01       	movw	r30, r14
    365a:	93 fd       	sbrc	r25, 3
    365c:	85 91       	lpm	r24, Z+
    365e:	93 ff       	sbrs	r25, 3
    3660:	81 91       	ld	r24, Z+
    3662:	7f 01       	movw	r14, r30
    3664:	88 23       	and	r24, r24
    3666:	09 f4       	brne	.+2      	; 0x366a <vfprintf+0x3a>
    3668:	ba c1       	rjmp	.+884    	; 0x39de <vfprintf+0x3ae>
    366a:	85 32       	cpi	r24, 0x25	; 37
    366c:	39 f4       	brne	.+14     	; 0x367c <vfprintf+0x4c>
    366e:	93 fd       	sbrc	r25, 3
    3670:	85 91       	lpm	r24, Z+
    3672:	93 ff       	sbrs	r25, 3
    3674:	81 91       	ld	r24, Z+
    3676:	7f 01       	movw	r14, r30
    3678:	85 32       	cpi	r24, 0x25	; 37
    367a:	29 f4       	brne	.+10     	; 0x3686 <vfprintf+0x56>
    367c:	b6 01       	movw	r22, r12
    367e:	90 e0       	ldi	r25, 0x00	; 0
    3680:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <fputc>
    3684:	e7 cf       	rjmp	.-50     	; 0x3654 <vfprintf+0x24>
    3686:	91 2c       	mov	r9, r1
    3688:	21 2c       	mov	r2, r1
    368a:	31 2c       	mov	r3, r1
    368c:	ff e1       	ldi	r31, 0x1F	; 31
    368e:	f3 15       	cp	r31, r3
    3690:	d8 f0       	brcs	.+54     	; 0x36c8 <vfprintf+0x98>
    3692:	8b 32       	cpi	r24, 0x2B	; 43
    3694:	79 f0       	breq	.+30     	; 0x36b4 <vfprintf+0x84>
    3696:	38 f4       	brcc	.+14     	; 0x36a6 <vfprintf+0x76>
    3698:	80 32       	cpi	r24, 0x20	; 32
    369a:	79 f0       	breq	.+30     	; 0x36ba <vfprintf+0x8a>
    369c:	83 32       	cpi	r24, 0x23	; 35
    369e:	a1 f4       	brne	.+40     	; 0x36c8 <vfprintf+0x98>
    36a0:	23 2d       	mov	r18, r3
    36a2:	20 61       	ori	r18, 0x10	; 16
    36a4:	1d c0       	rjmp	.+58     	; 0x36e0 <vfprintf+0xb0>
    36a6:	8d 32       	cpi	r24, 0x2D	; 45
    36a8:	61 f0       	breq	.+24     	; 0x36c2 <vfprintf+0x92>
    36aa:	80 33       	cpi	r24, 0x30	; 48
    36ac:	69 f4       	brne	.+26     	; 0x36c8 <vfprintf+0x98>
    36ae:	23 2d       	mov	r18, r3
    36b0:	21 60       	ori	r18, 0x01	; 1
    36b2:	16 c0       	rjmp	.+44     	; 0x36e0 <vfprintf+0xb0>
    36b4:	83 2d       	mov	r24, r3
    36b6:	82 60       	ori	r24, 0x02	; 2
    36b8:	38 2e       	mov	r3, r24
    36ba:	e3 2d       	mov	r30, r3
    36bc:	e4 60       	ori	r30, 0x04	; 4
    36be:	3e 2e       	mov	r3, r30
    36c0:	2a c0       	rjmp	.+84     	; 0x3716 <vfprintf+0xe6>
    36c2:	f3 2d       	mov	r31, r3
    36c4:	f8 60       	ori	r31, 0x08	; 8
    36c6:	1d c0       	rjmp	.+58     	; 0x3702 <vfprintf+0xd2>
    36c8:	37 fc       	sbrc	r3, 7
    36ca:	2d c0       	rjmp	.+90     	; 0x3726 <vfprintf+0xf6>
    36cc:	20 ed       	ldi	r18, 0xD0	; 208
    36ce:	28 0f       	add	r18, r24
    36d0:	2a 30       	cpi	r18, 0x0A	; 10
    36d2:	40 f0       	brcs	.+16     	; 0x36e4 <vfprintf+0xb4>
    36d4:	8e 32       	cpi	r24, 0x2E	; 46
    36d6:	b9 f4       	brne	.+46     	; 0x3706 <vfprintf+0xd6>
    36d8:	36 fc       	sbrc	r3, 6
    36da:	81 c1       	rjmp	.+770    	; 0x39de <vfprintf+0x3ae>
    36dc:	23 2d       	mov	r18, r3
    36de:	20 64       	ori	r18, 0x40	; 64
    36e0:	32 2e       	mov	r3, r18
    36e2:	19 c0       	rjmp	.+50     	; 0x3716 <vfprintf+0xe6>
    36e4:	36 fe       	sbrs	r3, 6
    36e6:	06 c0       	rjmp	.+12     	; 0x36f4 <vfprintf+0xc4>
    36e8:	8a e0       	ldi	r24, 0x0A	; 10
    36ea:	98 9e       	mul	r9, r24
    36ec:	20 0d       	add	r18, r0
    36ee:	11 24       	eor	r1, r1
    36f0:	92 2e       	mov	r9, r18
    36f2:	11 c0       	rjmp	.+34     	; 0x3716 <vfprintf+0xe6>
    36f4:	ea e0       	ldi	r30, 0x0A	; 10
    36f6:	2e 9e       	mul	r2, r30
    36f8:	20 0d       	add	r18, r0
    36fa:	11 24       	eor	r1, r1
    36fc:	22 2e       	mov	r2, r18
    36fe:	f3 2d       	mov	r31, r3
    3700:	f0 62       	ori	r31, 0x20	; 32
    3702:	3f 2e       	mov	r3, r31
    3704:	08 c0       	rjmp	.+16     	; 0x3716 <vfprintf+0xe6>
    3706:	8c 36       	cpi	r24, 0x6C	; 108
    3708:	21 f4       	brne	.+8      	; 0x3712 <vfprintf+0xe2>
    370a:	83 2d       	mov	r24, r3
    370c:	80 68       	ori	r24, 0x80	; 128
    370e:	38 2e       	mov	r3, r24
    3710:	02 c0       	rjmp	.+4      	; 0x3716 <vfprintf+0xe6>
    3712:	88 36       	cpi	r24, 0x68	; 104
    3714:	41 f4       	brne	.+16     	; 0x3726 <vfprintf+0xf6>
    3716:	f7 01       	movw	r30, r14
    3718:	93 fd       	sbrc	r25, 3
    371a:	85 91       	lpm	r24, Z+
    371c:	93 ff       	sbrs	r25, 3
    371e:	81 91       	ld	r24, Z+
    3720:	7f 01       	movw	r14, r30
    3722:	81 11       	cpse	r24, r1
    3724:	b3 cf       	rjmp	.-154    	; 0x368c <vfprintf+0x5c>
    3726:	98 2f       	mov	r25, r24
    3728:	9f 7d       	andi	r25, 0xDF	; 223
    372a:	95 54       	subi	r25, 0x45	; 69
    372c:	93 30       	cpi	r25, 0x03	; 3
    372e:	28 f4       	brcc	.+10     	; 0x373a <vfprintf+0x10a>
    3730:	0c 5f       	subi	r16, 0xFC	; 252
    3732:	1f 4f       	sbci	r17, 0xFF	; 255
    3734:	9f e3       	ldi	r25, 0x3F	; 63
    3736:	99 83       	std	Y+1, r25	; 0x01
    3738:	0d c0       	rjmp	.+26     	; 0x3754 <vfprintf+0x124>
    373a:	83 36       	cpi	r24, 0x63	; 99
    373c:	31 f0       	breq	.+12     	; 0x374a <vfprintf+0x11a>
    373e:	83 37       	cpi	r24, 0x73	; 115
    3740:	71 f0       	breq	.+28     	; 0x375e <vfprintf+0x12e>
    3742:	83 35       	cpi	r24, 0x53	; 83
    3744:	09 f0       	breq	.+2      	; 0x3748 <vfprintf+0x118>
    3746:	59 c0       	rjmp	.+178    	; 0x37fa <vfprintf+0x1ca>
    3748:	21 c0       	rjmp	.+66     	; 0x378c <vfprintf+0x15c>
    374a:	f8 01       	movw	r30, r16
    374c:	80 81       	ld	r24, Z
    374e:	89 83       	std	Y+1, r24	; 0x01
    3750:	0e 5f       	subi	r16, 0xFE	; 254
    3752:	1f 4f       	sbci	r17, 0xFF	; 255
    3754:	88 24       	eor	r8, r8
    3756:	83 94       	inc	r8
    3758:	91 2c       	mov	r9, r1
    375a:	53 01       	movw	r10, r6
    375c:	13 c0       	rjmp	.+38     	; 0x3784 <vfprintf+0x154>
    375e:	28 01       	movw	r4, r16
    3760:	f2 e0       	ldi	r31, 0x02	; 2
    3762:	4f 0e       	add	r4, r31
    3764:	51 1c       	adc	r5, r1
    3766:	f8 01       	movw	r30, r16
    3768:	a0 80       	ld	r10, Z
    376a:	b1 80       	ldd	r11, Z+1	; 0x01
    376c:	36 fe       	sbrs	r3, 6
    376e:	03 c0       	rjmp	.+6      	; 0x3776 <vfprintf+0x146>
    3770:	69 2d       	mov	r22, r9
    3772:	70 e0       	ldi	r23, 0x00	; 0
    3774:	02 c0       	rjmp	.+4      	; 0x377a <vfprintf+0x14a>
    3776:	6f ef       	ldi	r22, 0xFF	; 255
    3778:	7f ef       	ldi	r23, 0xFF	; 255
    377a:	c5 01       	movw	r24, r10
    377c:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <strnlen>
    3780:	4c 01       	movw	r8, r24
    3782:	82 01       	movw	r16, r4
    3784:	f3 2d       	mov	r31, r3
    3786:	ff 77       	andi	r31, 0x7F	; 127
    3788:	3f 2e       	mov	r3, r31
    378a:	16 c0       	rjmp	.+44     	; 0x37b8 <vfprintf+0x188>
    378c:	28 01       	movw	r4, r16
    378e:	22 e0       	ldi	r18, 0x02	; 2
    3790:	42 0e       	add	r4, r18
    3792:	51 1c       	adc	r5, r1
    3794:	f8 01       	movw	r30, r16
    3796:	a0 80       	ld	r10, Z
    3798:	b1 80       	ldd	r11, Z+1	; 0x01
    379a:	36 fe       	sbrs	r3, 6
    379c:	03 c0       	rjmp	.+6      	; 0x37a4 <vfprintf+0x174>
    379e:	69 2d       	mov	r22, r9
    37a0:	70 e0       	ldi	r23, 0x00	; 0
    37a2:	02 c0       	rjmp	.+4      	; 0x37a8 <vfprintf+0x178>
    37a4:	6f ef       	ldi	r22, 0xFF	; 255
    37a6:	7f ef       	ldi	r23, 0xFF	; 255
    37a8:	c5 01       	movw	r24, r10
    37aa:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <strnlen_P>
    37ae:	4c 01       	movw	r8, r24
    37b0:	f3 2d       	mov	r31, r3
    37b2:	f0 68       	ori	r31, 0x80	; 128
    37b4:	3f 2e       	mov	r3, r31
    37b6:	82 01       	movw	r16, r4
    37b8:	33 fc       	sbrc	r3, 3
    37ba:	1b c0       	rjmp	.+54     	; 0x37f2 <vfprintf+0x1c2>
    37bc:	82 2d       	mov	r24, r2
    37be:	90 e0       	ldi	r25, 0x00	; 0
    37c0:	88 16       	cp	r8, r24
    37c2:	99 06       	cpc	r9, r25
    37c4:	b0 f4       	brcc	.+44     	; 0x37f2 <vfprintf+0x1c2>
    37c6:	b6 01       	movw	r22, r12
    37c8:	80 e2       	ldi	r24, 0x20	; 32
    37ca:	90 e0       	ldi	r25, 0x00	; 0
    37cc:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <fputc>
    37d0:	2a 94       	dec	r2
    37d2:	f4 cf       	rjmp	.-24     	; 0x37bc <vfprintf+0x18c>
    37d4:	f5 01       	movw	r30, r10
    37d6:	37 fc       	sbrc	r3, 7
    37d8:	85 91       	lpm	r24, Z+
    37da:	37 fe       	sbrs	r3, 7
    37dc:	81 91       	ld	r24, Z+
    37de:	5f 01       	movw	r10, r30
    37e0:	b6 01       	movw	r22, r12
    37e2:	90 e0       	ldi	r25, 0x00	; 0
    37e4:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <fputc>
    37e8:	21 10       	cpse	r2, r1
    37ea:	2a 94       	dec	r2
    37ec:	21 e0       	ldi	r18, 0x01	; 1
    37ee:	82 1a       	sub	r8, r18
    37f0:	91 08       	sbc	r9, r1
    37f2:	81 14       	cp	r8, r1
    37f4:	91 04       	cpc	r9, r1
    37f6:	71 f7       	brne	.-36     	; 0x37d4 <vfprintf+0x1a4>
    37f8:	e8 c0       	rjmp	.+464    	; 0x39ca <vfprintf+0x39a>
    37fa:	84 36       	cpi	r24, 0x64	; 100
    37fc:	11 f0       	breq	.+4      	; 0x3802 <vfprintf+0x1d2>
    37fe:	89 36       	cpi	r24, 0x69	; 105
    3800:	41 f5       	brne	.+80     	; 0x3852 <vfprintf+0x222>
    3802:	f8 01       	movw	r30, r16
    3804:	37 fe       	sbrs	r3, 7
    3806:	07 c0       	rjmp	.+14     	; 0x3816 <vfprintf+0x1e6>
    3808:	60 81       	ld	r22, Z
    380a:	71 81       	ldd	r23, Z+1	; 0x01
    380c:	82 81       	ldd	r24, Z+2	; 0x02
    380e:	93 81       	ldd	r25, Z+3	; 0x03
    3810:	0c 5f       	subi	r16, 0xFC	; 252
    3812:	1f 4f       	sbci	r17, 0xFF	; 255
    3814:	08 c0       	rjmp	.+16     	; 0x3826 <vfprintf+0x1f6>
    3816:	60 81       	ld	r22, Z
    3818:	71 81       	ldd	r23, Z+1	; 0x01
    381a:	07 2e       	mov	r0, r23
    381c:	00 0c       	add	r0, r0
    381e:	88 0b       	sbc	r24, r24
    3820:	99 0b       	sbc	r25, r25
    3822:	0e 5f       	subi	r16, 0xFE	; 254
    3824:	1f 4f       	sbci	r17, 0xFF	; 255
    3826:	f3 2d       	mov	r31, r3
    3828:	ff 76       	andi	r31, 0x6F	; 111
    382a:	3f 2e       	mov	r3, r31
    382c:	97 ff       	sbrs	r25, 7
    382e:	09 c0       	rjmp	.+18     	; 0x3842 <vfprintf+0x212>
    3830:	90 95       	com	r25
    3832:	80 95       	com	r24
    3834:	70 95       	com	r23
    3836:	61 95       	neg	r22
    3838:	7f 4f       	sbci	r23, 0xFF	; 255
    383a:	8f 4f       	sbci	r24, 0xFF	; 255
    383c:	9f 4f       	sbci	r25, 0xFF	; 255
    383e:	f0 68       	ori	r31, 0x80	; 128
    3840:	3f 2e       	mov	r3, r31
    3842:	2a e0       	ldi	r18, 0x0A	; 10
    3844:	30 e0       	ldi	r19, 0x00	; 0
    3846:	a3 01       	movw	r20, r6
    3848:	0e 94 6e 1d 	call	0x3adc	; 0x3adc <__ultoa_invert>
    384c:	88 2e       	mov	r8, r24
    384e:	86 18       	sub	r8, r6
    3850:	45 c0       	rjmp	.+138    	; 0x38dc <vfprintf+0x2ac>
    3852:	85 37       	cpi	r24, 0x75	; 117
    3854:	31 f4       	brne	.+12     	; 0x3862 <vfprintf+0x232>
    3856:	23 2d       	mov	r18, r3
    3858:	2f 7e       	andi	r18, 0xEF	; 239
    385a:	b2 2e       	mov	r11, r18
    385c:	2a e0       	ldi	r18, 0x0A	; 10
    385e:	30 e0       	ldi	r19, 0x00	; 0
    3860:	25 c0       	rjmp	.+74     	; 0x38ac <vfprintf+0x27c>
    3862:	93 2d       	mov	r25, r3
    3864:	99 7f       	andi	r25, 0xF9	; 249
    3866:	b9 2e       	mov	r11, r25
    3868:	8f 36       	cpi	r24, 0x6F	; 111
    386a:	c1 f0       	breq	.+48     	; 0x389c <vfprintf+0x26c>
    386c:	18 f4       	brcc	.+6      	; 0x3874 <vfprintf+0x244>
    386e:	88 35       	cpi	r24, 0x58	; 88
    3870:	79 f0       	breq	.+30     	; 0x3890 <vfprintf+0x260>
    3872:	b5 c0       	rjmp	.+362    	; 0x39de <vfprintf+0x3ae>
    3874:	80 37       	cpi	r24, 0x70	; 112
    3876:	19 f0       	breq	.+6      	; 0x387e <vfprintf+0x24e>
    3878:	88 37       	cpi	r24, 0x78	; 120
    387a:	21 f0       	breq	.+8      	; 0x3884 <vfprintf+0x254>
    387c:	b0 c0       	rjmp	.+352    	; 0x39de <vfprintf+0x3ae>
    387e:	e9 2f       	mov	r30, r25
    3880:	e0 61       	ori	r30, 0x10	; 16
    3882:	be 2e       	mov	r11, r30
    3884:	b4 fe       	sbrs	r11, 4
    3886:	0d c0       	rjmp	.+26     	; 0x38a2 <vfprintf+0x272>
    3888:	fb 2d       	mov	r31, r11
    388a:	f4 60       	ori	r31, 0x04	; 4
    388c:	bf 2e       	mov	r11, r31
    388e:	09 c0       	rjmp	.+18     	; 0x38a2 <vfprintf+0x272>
    3890:	34 fe       	sbrs	r3, 4
    3892:	0a c0       	rjmp	.+20     	; 0x38a8 <vfprintf+0x278>
    3894:	29 2f       	mov	r18, r25
    3896:	26 60       	ori	r18, 0x06	; 6
    3898:	b2 2e       	mov	r11, r18
    389a:	06 c0       	rjmp	.+12     	; 0x38a8 <vfprintf+0x278>
    389c:	28 e0       	ldi	r18, 0x08	; 8
    389e:	30 e0       	ldi	r19, 0x00	; 0
    38a0:	05 c0       	rjmp	.+10     	; 0x38ac <vfprintf+0x27c>
    38a2:	20 e1       	ldi	r18, 0x10	; 16
    38a4:	30 e0       	ldi	r19, 0x00	; 0
    38a6:	02 c0       	rjmp	.+4      	; 0x38ac <vfprintf+0x27c>
    38a8:	20 e1       	ldi	r18, 0x10	; 16
    38aa:	32 e0       	ldi	r19, 0x02	; 2
    38ac:	f8 01       	movw	r30, r16
    38ae:	b7 fe       	sbrs	r11, 7
    38b0:	07 c0       	rjmp	.+14     	; 0x38c0 <vfprintf+0x290>
    38b2:	60 81       	ld	r22, Z
    38b4:	71 81       	ldd	r23, Z+1	; 0x01
    38b6:	82 81       	ldd	r24, Z+2	; 0x02
    38b8:	93 81       	ldd	r25, Z+3	; 0x03
    38ba:	0c 5f       	subi	r16, 0xFC	; 252
    38bc:	1f 4f       	sbci	r17, 0xFF	; 255
    38be:	06 c0       	rjmp	.+12     	; 0x38cc <vfprintf+0x29c>
    38c0:	60 81       	ld	r22, Z
    38c2:	71 81       	ldd	r23, Z+1	; 0x01
    38c4:	80 e0       	ldi	r24, 0x00	; 0
    38c6:	90 e0       	ldi	r25, 0x00	; 0
    38c8:	0e 5f       	subi	r16, 0xFE	; 254
    38ca:	1f 4f       	sbci	r17, 0xFF	; 255
    38cc:	a3 01       	movw	r20, r6
    38ce:	0e 94 6e 1d 	call	0x3adc	; 0x3adc <__ultoa_invert>
    38d2:	88 2e       	mov	r8, r24
    38d4:	86 18       	sub	r8, r6
    38d6:	fb 2d       	mov	r31, r11
    38d8:	ff 77       	andi	r31, 0x7F	; 127
    38da:	3f 2e       	mov	r3, r31
    38dc:	36 fe       	sbrs	r3, 6
    38de:	0d c0       	rjmp	.+26     	; 0x38fa <vfprintf+0x2ca>
    38e0:	23 2d       	mov	r18, r3
    38e2:	2e 7f       	andi	r18, 0xFE	; 254
    38e4:	a2 2e       	mov	r10, r18
    38e6:	89 14       	cp	r8, r9
    38e8:	58 f4       	brcc	.+22     	; 0x3900 <vfprintf+0x2d0>
    38ea:	34 fe       	sbrs	r3, 4
    38ec:	0b c0       	rjmp	.+22     	; 0x3904 <vfprintf+0x2d4>
    38ee:	32 fc       	sbrc	r3, 2
    38f0:	09 c0       	rjmp	.+18     	; 0x3904 <vfprintf+0x2d4>
    38f2:	83 2d       	mov	r24, r3
    38f4:	8e 7e       	andi	r24, 0xEE	; 238
    38f6:	a8 2e       	mov	r10, r24
    38f8:	05 c0       	rjmp	.+10     	; 0x3904 <vfprintf+0x2d4>
    38fa:	b8 2c       	mov	r11, r8
    38fc:	a3 2c       	mov	r10, r3
    38fe:	03 c0       	rjmp	.+6      	; 0x3906 <vfprintf+0x2d6>
    3900:	b8 2c       	mov	r11, r8
    3902:	01 c0       	rjmp	.+2      	; 0x3906 <vfprintf+0x2d6>
    3904:	b9 2c       	mov	r11, r9
    3906:	a4 fe       	sbrs	r10, 4
    3908:	0f c0       	rjmp	.+30     	; 0x3928 <vfprintf+0x2f8>
    390a:	fe 01       	movw	r30, r28
    390c:	e8 0d       	add	r30, r8
    390e:	f1 1d       	adc	r31, r1
    3910:	80 81       	ld	r24, Z
    3912:	80 33       	cpi	r24, 0x30	; 48
    3914:	21 f4       	brne	.+8      	; 0x391e <vfprintf+0x2ee>
    3916:	9a 2d       	mov	r25, r10
    3918:	99 7e       	andi	r25, 0xE9	; 233
    391a:	a9 2e       	mov	r10, r25
    391c:	09 c0       	rjmp	.+18     	; 0x3930 <vfprintf+0x300>
    391e:	a2 fe       	sbrs	r10, 2
    3920:	06 c0       	rjmp	.+12     	; 0x392e <vfprintf+0x2fe>
    3922:	b3 94       	inc	r11
    3924:	b3 94       	inc	r11
    3926:	04 c0       	rjmp	.+8      	; 0x3930 <vfprintf+0x300>
    3928:	8a 2d       	mov	r24, r10
    392a:	86 78       	andi	r24, 0x86	; 134
    392c:	09 f0       	breq	.+2      	; 0x3930 <vfprintf+0x300>
    392e:	b3 94       	inc	r11
    3930:	a3 fc       	sbrc	r10, 3
    3932:	11 c0       	rjmp	.+34     	; 0x3956 <vfprintf+0x326>
    3934:	a0 fe       	sbrs	r10, 0
    3936:	06 c0       	rjmp	.+12     	; 0x3944 <vfprintf+0x314>
    3938:	b2 14       	cp	r11, r2
    393a:	88 f4       	brcc	.+34     	; 0x395e <vfprintf+0x32e>
    393c:	28 0c       	add	r2, r8
    393e:	92 2c       	mov	r9, r2
    3940:	9b 18       	sub	r9, r11
    3942:	0e c0       	rjmp	.+28     	; 0x3960 <vfprintf+0x330>
    3944:	b2 14       	cp	r11, r2
    3946:	60 f4       	brcc	.+24     	; 0x3960 <vfprintf+0x330>
    3948:	b6 01       	movw	r22, r12
    394a:	80 e2       	ldi	r24, 0x20	; 32
    394c:	90 e0       	ldi	r25, 0x00	; 0
    394e:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <fputc>
    3952:	b3 94       	inc	r11
    3954:	f7 cf       	rjmp	.-18     	; 0x3944 <vfprintf+0x314>
    3956:	b2 14       	cp	r11, r2
    3958:	18 f4       	brcc	.+6      	; 0x3960 <vfprintf+0x330>
    395a:	2b 18       	sub	r2, r11
    395c:	02 c0       	rjmp	.+4      	; 0x3962 <vfprintf+0x332>
    395e:	98 2c       	mov	r9, r8
    3960:	21 2c       	mov	r2, r1
    3962:	a4 fe       	sbrs	r10, 4
    3964:	10 c0       	rjmp	.+32     	; 0x3986 <vfprintf+0x356>
    3966:	b6 01       	movw	r22, r12
    3968:	80 e3       	ldi	r24, 0x30	; 48
    396a:	90 e0       	ldi	r25, 0x00	; 0
    396c:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <fputc>
    3970:	a2 fe       	sbrs	r10, 2
    3972:	17 c0       	rjmp	.+46     	; 0x39a2 <vfprintf+0x372>
    3974:	a1 fc       	sbrc	r10, 1
    3976:	03 c0       	rjmp	.+6      	; 0x397e <vfprintf+0x34e>
    3978:	88 e7       	ldi	r24, 0x78	; 120
    397a:	90 e0       	ldi	r25, 0x00	; 0
    397c:	02 c0       	rjmp	.+4      	; 0x3982 <vfprintf+0x352>
    397e:	88 e5       	ldi	r24, 0x58	; 88
    3980:	90 e0       	ldi	r25, 0x00	; 0
    3982:	b6 01       	movw	r22, r12
    3984:	0c c0       	rjmp	.+24     	; 0x399e <vfprintf+0x36e>
    3986:	8a 2d       	mov	r24, r10
    3988:	86 78       	andi	r24, 0x86	; 134
    398a:	59 f0       	breq	.+22     	; 0x39a2 <vfprintf+0x372>
    398c:	a1 fe       	sbrs	r10, 1
    398e:	02 c0       	rjmp	.+4      	; 0x3994 <vfprintf+0x364>
    3990:	8b e2       	ldi	r24, 0x2B	; 43
    3992:	01 c0       	rjmp	.+2      	; 0x3996 <vfprintf+0x366>
    3994:	80 e2       	ldi	r24, 0x20	; 32
    3996:	a7 fc       	sbrc	r10, 7
    3998:	8d e2       	ldi	r24, 0x2D	; 45
    399a:	b6 01       	movw	r22, r12
    399c:	90 e0       	ldi	r25, 0x00	; 0
    399e:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <fputc>
    39a2:	89 14       	cp	r8, r9
    39a4:	38 f4       	brcc	.+14     	; 0x39b4 <vfprintf+0x384>
    39a6:	b6 01       	movw	r22, r12
    39a8:	80 e3       	ldi	r24, 0x30	; 48
    39aa:	90 e0       	ldi	r25, 0x00	; 0
    39ac:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <fputc>
    39b0:	9a 94       	dec	r9
    39b2:	f7 cf       	rjmp	.-18     	; 0x39a2 <vfprintf+0x372>
    39b4:	8a 94       	dec	r8
    39b6:	f3 01       	movw	r30, r6
    39b8:	e8 0d       	add	r30, r8
    39ba:	f1 1d       	adc	r31, r1
    39bc:	80 81       	ld	r24, Z
    39be:	b6 01       	movw	r22, r12
    39c0:	90 e0       	ldi	r25, 0x00	; 0
    39c2:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <fputc>
    39c6:	81 10       	cpse	r8, r1
    39c8:	f5 cf       	rjmp	.-22     	; 0x39b4 <vfprintf+0x384>
    39ca:	22 20       	and	r2, r2
    39cc:	09 f4       	brne	.+2      	; 0x39d0 <vfprintf+0x3a0>
    39ce:	42 ce       	rjmp	.-892    	; 0x3654 <vfprintf+0x24>
    39d0:	b6 01       	movw	r22, r12
    39d2:	80 e2       	ldi	r24, 0x20	; 32
    39d4:	90 e0       	ldi	r25, 0x00	; 0
    39d6:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <fputc>
    39da:	2a 94       	dec	r2
    39dc:	f6 cf       	rjmp	.-20     	; 0x39ca <vfprintf+0x39a>
    39de:	f6 01       	movw	r30, r12
    39e0:	86 81       	ldd	r24, Z+6	; 0x06
    39e2:	97 81       	ldd	r25, Z+7	; 0x07
    39e4:	02 c0       	rjmp	.+4      	; 0x39ea <vfprintf+0x3ba>
    39e6:	8f ef       	ldi	r24, 0xFF	; 255
    39e8:	9f ef       	ldi	r25, 0xFF	; 255
    39ea:	2b 96       	adiw	r28, 0x0b	; 11
    39ec:	e2 e1       	ldi	r30, 0x12	; 18
    39ee:	0c 94 1a 1e 	jmp	0x3c34	; 0x3c34 <__epilogue_restores__>

000039f2 <calloc>:
    39f2:	0f 93       	push	r16
    39f4:	1f 93       	push	r17
    39f6:	cf 93       	push	r28
    39f8:	df 93       	push	r29
    39fa:	86 9f       	mul	r24, r22
    39fc:	80 01       	movw	r16, r0
    39fe:	87 9f       	mul	r24, r23
    3a00:	10 0d       	add	r17, r0
    3a02:	96 9f       	mul	r25, r22
    3a04:	10 0d       	add	r17, r0
    3a06:	11 24       	eor	r1, r1
    3a08:	c8 01       	movw	r24, r16
    3a0a:	0e 94 18 19 	call	0x3230	; 0x3230 <malloc>
    3a0e:	ec 01       	movw	r28, r24
    3a10:	00 97       	sbiw	r24, 0x00	; 0
    3a12:	29 f0       	breq	.+10     	; 0x3a1e <calloc+0x2c>
    3a14:	a8 01       	movw	r20, r16
    3a16:	60 e0       	ldi	r22, 0x00	; 0
    3a18:	70 e0       	ldi	r23, 0x00	; 0
    3a1a:	0e 94 20 1d 	call	0x3a40	; 0x3a40 <memset>
    3a1e:	ce 01       	movw	r24, r28
    3a20:	df 91       	pop	r29
    3a22:	cf 91       	pop	r28
    3a24:	1f 91       	pop	r17
    3a26:	0f 91       	pop	r16
    3a28:	08 95       	ret

00003a2a <strnlen_P>:
    3a2a:	fc 01       	movw	r30, r24
    3a2c:	05 90       	lpm	r0, Z+
    3a2e:	61 50       	subi	r22, 0x01	; 1
    3a30:	70 40       	sbci	r23, 0x00	; 0
    3a32:	01 10       	cpse	r0, r1
    3a34:	d8 f7       	brcc	.-10     	; 0x3a2c <strnlen_P+0x2>
    3a36:	80 95       	com	r24
    3a38:	90 95       	com	r25
    3a3a:	8e 0f       	add	r24, r30
    3a3c:	9f 1f       	adc	r25, r31
    3a3e:	08 95       	ret

00003a40 <memset>:
    3a40:	dc 01       	movw	r26, r24
    3a42:	01 c0       	rjmp	.+2      	; 0x3a46 <memset+0x6>
    3a44:	6d 93       	st	X+, r22
    3a46:	41 50       	subi	r20, 0x01	; 1
    3a48:	50 40       	sbci	r21, 0x00	; 0
    3a4a:	e0 f7       	brcc	.-8      	; 0x3a44 <memset+0x4>
    3a4c:	08 95       	ret

00003a4e <strnlen>:
    3a4e:	fc 01       	movw	r30, r24
    3a50:	61 50       	subi	r22, 0x01	; 1
    3a52:	70 40       	sbci	r23, 0x00	; 0
    3a54:	01 90       	ld	r0, Z+
    3a56:	01 10       	cpse	r0, r1
    3a58:	d8 f7       	brcc	.-10     	; 0x3a50 <strnlen+0x2>
    3a5a:	80 95       	com	r24
    3a5c:	90 95       	com	r25
    3a5e:	8e 0f       	add	r24, r30
    3a60:	9f 1f       	adc	r25, r31
    3a62:	08 95       	ret

00003a64 <fputc>:
    3a64:	0f 93       	push	r16
    3a66:	1f 93       	push	r17
    3a68:	cf 93       	push	r28
    3a6a:	df 93       	push	r29
    3a6c:	fb 01       	movw	r30, r22
    3a6e:	23 81       	ldd	r18, Z+3	; 0x03
    3a70:	21 fd       	sbrc	r18, 1
    3a72:	03 c0       	rjmp	.+6      	; 0x3a7a <fputc+0x16>
    3a74:	8f ef       	ldi	r24, 0xFF	; 255
    3a76:	9f ef       	ldi	r25, 0xFF	; 255
    3a78:	2c c0       	rjmp	.+88     	; 0x3ad2 <fputc+0x6e>
    3a7a:	22 ff       	sbrs	r18, 2
    3a7c:	16 c0       	rjmp	.+44     	; 0x3aaa <fputc+0x46>
    3a7e:	46 81       	ldd	r20, Z+6	; 0x06
    3a80:	57 81       	ldd	r21, Z+7	; 0x07
    3a82:	24 81       	ldd	r18, Z+4	; 0x04
    3a84:	35 81       	ldd	r19, Z+5	; 0x05
    3a86:	42 17       	cp	r20, r18
    3a88:	53 07       	cpc	r21, r19
    3a8a:	44 f4       	brge	.+16     	; 0x3a9c <fputc+0x38>
    3a8c:	a0 81       	ld	r26, Z
    3a8e:	b1 81       	ldd	r27, Z+1	; 0x01
    3a90:	9d 01       	movw	r18, r26
    3a92:	2f 5f       	subi	r18, 0xFF	; 255
    3a94:	3f 4f       	sbci	r19, 0xFF	; 255
    3a96:	31 83       	std	Z+1, r19	; 0x01
    3a98:	20 83       	st	Z, r18
    3a9a:	8c 93       	st	X, r24
    3a9c:	26 81       	ldd	r18, Z+6	; 0x06
    3a9e:	37 81       	ldd	r19, Z+7	; 0x07
    3aa0:	2f 5f       	subi	r18, 0xFF	; 255
    3aa2:	3f 4f       	sbci	r19, 0xFF	; 255
    3aa4:	37 83       	std	Z+7, r19	; 0x07
    3aa6:	26 83       	std	Z+6, r18	; 0x06
    3aa8:	14 c0       	rjmp	.+40     	; 0x3ad2 <fputc+0x6e>
    3aaa:	8b 01       	movw	r16, r22
    3aac:	ec 01       	movw	r28, r24
    3aae:	fb 01       	movw	r30, r22
    3ab0:	00 84       	ldd	r0, Z+8	; 0x08
    3ab2:	f1 85       	ldd	r31, Z+9	; 0x09
    3ab4:	e0 2d       	mov	r30, r0
    3ab6:	09 95       	icall
    3ab8:	89 2b       	or	r24, r25
    3aba:	e1 f6       	brne	.-72     	; 0x3a74 <fputc+0x10>
    3abc:	d8 01       	movw	r26, r16
    3abe:	16 96       	adiw	r26, 0x06	; 6
    3ac0:	8d 91       	ld	r24, X+
    3ac2:	9c 91       	ld	r25, X
    3ac4:	17 97       	sbiw	r26, 0x07	; 7
    3ac6:	01 96       	adiw	r24, 0x01	; 1
    3ac8:	17 96       	adiw	r26, 0x07	; 7
    3aca:	9c 93       	st	X, r25
    3acc:	8e 93       	st	-X, r24
    3ace:	16 97       	sbiw	r26, 0x06	; 6
    3ad0:	ce 01       	movw	r24, r28
    3ad2:	df 91       	pop	r29
    3ad4:	cf 91       	pop	r28
    3ad6:	1f 91       	pop	r17
    3ad8:	0f 91       	pop	r16
    3ada:	08 95       	ret

00003adc <__ultoa_invert>:
    3adc:	fa 01       	movw	r30, r20
    3ade:	aa 27       	eor	r26, r26
    3ae0:	28 30       	cpi	r18, 0x08	; 8
    3ae2:	51 f1       	breq	.+84     	; 0x3b38 <__ultoa_invert+0x5c>
    3ae4:	20 31       	cpi	r18, 0x10	; 16
    3ae6:	81 f1       	breq	.+96     	; 0x3b48 <__ultoa_invert+0x6c>
    3ae8:	e8 94       	clt
    3aea:	6f 93       	push	r22
    3aec:	6e 7f       	andi	r22, 0xFE	; 254
    3aee:	6e 5f       	subi	r22, 0xFE	; 254
    3af0:	7f 4f       	sbci	r23, 0xFF	; 255
    3af2:	8f 4f       	sbci	r24, 0xFF	; 255
    3af4:	9f 4f       	sbci	r25, 0xFF	; 255
    3af6:	af 4f       	sbci	r26, 0xFF	; 255
    3af8:	b1 e0       	ldi	r27, 0x01	; 1
    3afa:	3e d0       	rcall	.+124    	; 0x3b78 <__ultoa_invert+0x9c>
    3afc:	b4 e0       	ldi	r27, 0x04	; 4
    3afe:	3c d0       	rcall	.+120    	; 0x3b78 <__ultoa_invert+0x9c>
    3b00:	67 0f       	add	r22, r23
    3b02:	78 1f       	adc	r23, r24
    3b04:	89 1f       	adc	r24, r25
    3b06:	9a 1f       	adc	r25, r26
    3b08:	a1 1d       	adc	r26, r1
    3b0a:	68 0f       	add	r22, r24
    3b0c:	79 1f       	adc	r23, r25
    3b0e:	8a 1f       	adc	r24, r26
    3b10:	91 1d       	adc	r25, r1
    3b12:	a1 1d       	adc	r26, r1
    3b14:	6a 0f       	add	r22, r26
    3b16:	71 1d       	adc	r23, r1
    3b18:	81 1d       	adc	r24, r1
    3b1a:	91 1d       	adc	r25, r1
    3b1c:	a1 1d       	adc	r26, r1
    3b1e:	20 d0       	rcall	.+64     	; 0x3b60 <__ultoa_invert+0x84>
    3b20:	09 f4       	brne	.+2      	; 0x3b24 <__ultoa_invert+0x48>
    3b22:	68 94       	set
    3b24:	3f 91       	pop	r19
    3b26:	2a e0       	ldi	r18, 0x0A	; 10
    3b28:	26 9f       	mul	r18, r22
    3b2a:	11 24       	eor	r1, r1
    3b2c:	30 19       	sub	r19, r0
    3b2e:	30 5d       	subi	r19, 0xD0	; 208
    3b30:	31 93       	st	Z+, r19
    3b32:	de f6       	brtc	.-74     	; 0x3aea <__ultoa_invert+0xe>
    3b34:	cf 01       	movw	r24, r30
    3b36:	08 95       	ret
    3b38:	46 2f       	mov	r20, r22
    3b3a:	47 70       	andi	r20, 0x07	; 7
    3b3c:	40 5d       	subi	r20, 0xD0	; 208
    3b3e:	41 93       	st	Z+, r20
    3b40:	b3 e0       	ldi	r27, 0x03	; 3
    3b42:	0f d0       	rcall	.+30     	; 0x3b62 <__ultoa_invert+0x86>
    3b44:	c9 f7       	brne	.-14     	; 0x3b38 <__ultoa_invert+0x5c>
    3b46:	f6 cf       	rjmp	.-20     	; 0x3b34 <__ultoa_invert+0x58>
    3b48:	46 2f       	mov	r20, r22
    3b4a:	4f 70       	andi	r20, 0x0F	; 15
    3b4c:	40 5d       	subi	r20, 0xD0	; 208
    3b4e:	4a 33       	cpi	r20, 0x3A	; 58
    3b50:	18 f0       	brcs	.+6      	; 0x3b58 <__ultoa_invert+0x7c>
    3b52:	49 5d       	subi	r20, 0xD9	; 217
    3b54:	31 fd       	sbrc	r19, 1
    3b56:	40 52       	subi	r20, 0x20	; 32
    3b58:	41 93       	st	Z+, r20
    3b5a:	02 d0       	rcall	.+4      	; 0x3b60 <__ultoa_invert+0x84>
    3b5c:	a9 f7       	brne	.-22     	; 0x3b48 <__ultoa_invert+0x6c>
    3b5e:	ea cf       	rjmp	.-44     	; 0x3b34 <__ultoa_invert+0x58>
    3b60:	b4 e0       	ldi	r27, 0x04	; 4
    3b62:	a6 95       	lsr	r26
    3b64:	97 95       	ror	r25
    3b66:	87 95       	ror	r24
    3b68:	77 95       	ror	r23
    3b6a:	67 95       	ror	r22
    3b6c:	ba 95       	dec	r27
    3b6e:	c9 f7       	brne	.-14     	; 0x3b62 <__ultoa_invert+0x86>
    3b70:	00 97       	sbiw	r24, 0x00	; 0
    3b72:	61 05       	cpc	r22, r1
    3b74:	71 05       	cpc	r23, r1
    3b76:	08 95       	ret
    3b78:	9b 01       	movw	r18, r22
    3b7a:	ac 01       	movw	r20, r24
    3b7c:	0a 2e       	mov	r0, r26
    3b7e:	06 94       	lsr	r0
    3b80:	57 95       	ror	r21
    3b82:	47 95       	ror	r20
    3b84:	37 95       	ror	r19
    3b86:	27 95       	ror	r18
    3b88:	ba 95       	dec	r27
    3b8a:	c9 f7       	brne	.-14     	; 0x3b7e <__ultoa_invert+0xa2>
    3b8c:	62 0f       	add	r22, r18
    3b8e:	73 1f       	adc	r23, r19
    3b90:	84 1f       	adc	r24, r20
    3b92:	95 1f       	adc	r25, r21
    3b94:	a0 1d       	adc	r26, r0
    3b96:	08 95       	ret

00003b98 <__divmodsi4>:
    3b98:	05 2e       	mov	r0, r21
    3b9a:	97 fb       	bst	r25, 7
    3b9c:	1e f4       	brtc	.+6      	; 0x3ba4 <__divmodsi4+0xc>
    3b9e:	00 94       	com	r0
    3ba0:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__negsi2>
    3ba4:	57 fd       	sbrc	r21, 7
    3ba6:	07 d0       	rcall	.+14     	; 0x3bb6 <__divmodsi4_neg2>
    3ba8:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <__udivmodsi4>
    3bac:	07 fc       	sbrc	r0, 7
    3bae:	03 d0       	rcall	.+6      	; 0x3bb6 <__divmodsi4_neg2>
    3bb0:	4e f4       	brtc	.+18     	; 0x3bc4 <__divmodsi4_exit>
    3bb2:	0c 94 e3 1d 	jmp	0x3bc6	; 0x3bc6 <__negsi2>

00003bb6 <__divmodsi4_neg2>:
    3bb6:	50 95       	com	r21
    3bb8:	40 95       	com	r20
    3bba:	30 95       	com	r19
    3bbc:	21 95       	neg	r18
    3bbe:	3f 4f       	sbci	r19, 0xFF	; 255
    3bc0:	4f 4f       	sbci	r20, 0xFF	; 255
    3bc2:	5f 4f       	sbci	r21, 0xFF	; 255

00003bc4 <__divmodsi4_exit>:
    3bc4:	08 95       	ret

00003bc6 <__negsi2>:
    3bc6:	90 95       	com	r25
    3bc8:	80 95       	com	r24
    3bca:	70 95       	com	r23
    3bcc:	61 95       	neg	r22
    3bce:	7f 4f       	sbci	r23, 0xFF	; 255
    3bd0:	8f 4f       	sbci	r24, 0xFF	; 255
    3bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    3bd4:	08 95       	ret

00003bd6 <__muluhisi3>:
    3bd6:	0e 94 57 1e 	call	0x3cae	; 0x3cae <__umulhisi3>
    3bda:	a5 9f       	mul	r26, r21
    3bdc:	90 0d       	add	r25, r0
    3bde:	b4 9f       	mul	r27, r20
    3be0:	90 0d       	add	r25, r0
    3be2:	a4 9f       	mul	r26, r20
    3be4:	80 0d       	add	r24, r0
    3be6:	91 1d       	adc	r25, r1
    3be8:	11 24       	eor	r1, r1
    3bea:	08 95       	ret

00003bec <__mulshisi3>:
    3bec:	b7 ff       	sbrs	r27, 7
    3bee:	0c 94 eb 1d 	jmp	0x3bd6	; 0x3bd6 <__muluhisi3>

00003bf2 <__mulohisi3>:
    3bf2:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <__muluhisi3>
    3bf6:	82 1b       	sub	r24, r18
    3bf8:	93 0b       	sbc	r25, r19
    3bfa:	08 95       	ret

00003bfc <__prologue_saves__>:
    3bfc:	2f 92       	push	r2
    3bfe:	3f 92       	push	r3
    3c00:	4f 92       	push	r4
    3c02:	5f 92       	push	r5
    3c04:	6f 92       	push	r6
    3c06:	7f 92       	push	r7
    3c08:	8f 92       	push	r8
    3c0a:	9f 92       	push	r9
    3c0c:	af 92       	push	r10
    3c0e:	bf 92       	push	r11
    3c10:	cf 92       	push	r12
    3c12:	df 92       	push	r13
    3c14:	ef 92       	push	r14
    3c16:	ff 92       	push	r15
    3c18:	0f 93       	push	r16
    3c1a:	1f 93       	push	r17
    3c1c:	cf 93       	push	r28
    3c1e:	df 93       	push	r29
    3c20:	cd b7       	in	r28, 0x3d	; 61
    3c22:	de b7       	in	r29, 0x3e	; 62
    3c24:	ca 1b       	sub	r28, r26
    3c26:	db 0b       	sbc	r29, r27
    3c28:	0f b6       	in	r0, 0x3f	; 63
    3c2a:	f8 94       	cli
    3c2c:	de bf       	out	0x3e, r29	; 62
    3c2e:	0f be       	out	0x3f, r0	; 63
    3c30:	cd bf       	out	0x3d, r28	; 61
    3c32:	09 94       	ijmp

00003c34 <__epilogue_restores__>:
    3c34:	2a 88       	ldd	r2, Y+18	; 0x12
    3c36:	39 88       	ldd	r3, Y+17	; 0x11
    3c38:	48 88       	ldd	r4, Y+16	; 0x10
    3c3a:	5f 84       	ldd	r5, Y+15	; 0x0f
    3c3c:	6e 84       	ldd	r6, Y+14	; 0x0e
    3c3e:	7d 84       	ldd	r7, Y+13	; 0x0d
    3c40:	8c 84       	ldd	r8, Y+12	; 0x0c
    3c42:	9b 84       	ldd	r9, Y+11	; 0x0b
    3c44:	aa 84       	ldd	r10, Y+10	; 0x0a
    3c46:	b9 84       	ldd	r11, Y+9	; 0x09
    3c48:	c8 84       	ldd	r12, Y+8	; 0x08
    3c4a:	df 80       	ldd	r13, Y+7	; 0x07
    3c4c:	ee 80       	ldd	r14, Y+6	; 0x06
    3c4e:	fd 80       	ldd	r15, Y+5	; 0x05
    3c50:	0c 81       	ldd	r16, Y+4	; 0x04
    3c52:	1b 81       	ldd	r17, Y+3	; 0x03
    3c54:	aa 81       	ldd	r26, Y+2	; 0x02
    3c56:	b9 81       	ldd	r27, Y+1	; 0x01
    3c58:	ce 0f       	add	r28, r30
    3c5a:	d1 1d       	adc	r29, r1
    3c5c:	0f b6       	in	r0, 0x3f	; 63
    3c5e:	f8 94       	cli
    3c60:	de bf       	out	0x3e, r29	; 62
    3c62:	0f be       	out	0x3f, r0	; 63
    3c64:	cd bf       	out	0x3d, r28	; 61
    3c66:	ed 01       	movw	r28, r26
    3c68:	08 95       	ret

00003c6a <__udivmodsi4>:
    3c6a:	a1 e2       	ldi	r26, 0x21	; 33
    3c6c:	1a 2e       	mov	r1, r26
    3c6e:	aa 1b       	sub	r26, r26
    3c70:	bb 1b       	sub	r27, r27
    3c72:	fd 01       	movw	r30, r26
    3c74:	0d c0       	rjmp	.+26     	; 0x3c90 <__udivmodsi4_ep>

00003c76 <__udivmodsi4_loop>:
    3c76:	aa 1f       	adc	r26, r26
    3c78:	bb 1f       	adc	r27, r27
    3c7a:	ee 1f       	adc	r30, r30
    3c7c:	ff 1f       	adc	r31, r31
    3c7e:	a2 17       	cp	r26, r18
    3c80:	b3 07       	cpc	r27, r19
    3c82:	e4 07       	cpc	r30, r20
    3c84:	f5 07       	cpc	r31, r21
    3c86:	20 f0       	brcs	.+8      	; 0x3c90 <__udivmodsi4_ep>
    3c88:	a2 1b       	sub	r26, r18
    3c8a:	b3 0b       	sbc	r27, r19
    3c8c:	e4 0b       	sbc	r30, r20
    3c8e:	f5 0b       	sbc	r31, r21

00003c90 <__udivmodsi4_ep>:
    3c90:	66 1f       	adc	r22, r22
    3c92:	77 1f       	adc	r23, r23
    3c94:	88 1f       	adc	r24, r24
    3c96:	99 1f       	adc	r25, r25
    3c98:	1a 94       	dec	r1
    3c9a:	69 f7       	brne	.-38     	; 0x3c76 <__udivmodsi4_loop>
    3c9c:	60 95       	com	r22
    3c9e:	70 95       	com	r23
    3ca0:	80 95       	com	r24
    3ca2:	90 95       	com	r25
    3ca4:	9b 01       	movw	r18, r22
    3ca6:	ac 01       	movw	r20, r24
    3ca8:	bd 01       	movw	r22, r26
    3caa:	cf 01       	movw	r24, r30
    3cac:	08 95       	ret

00003cae <__umulhisi3>:
    3cae:	a2 9f       	mul	r26, r18
    3cb0:	b0 01       	movw	r22, r0
    3cb2:	b3 9f       	mul	r27, r19
    3cb4:	c0 01       	movw	r24, r0
    3cb6:	a3 9f       	mul	r26, r19
    3cb8:	70 0d       	add	r23, r0
    3cba:	81 1d       	adc	r24, r1
    3cbc:	11 24       	eor	r1, r1
    3cbe:	91 1d       	adc	r25, r1
    3cc0:	b2 9f       	mul	r27, r18
    3cc2:	70 0d       	add	r23, r0
    3cc4:	81 1d       	adc	r24, r1
    3cc6:	11 24       	eor	r1, r1
    3cc8:	91 1d       	adc	r25, r1
    3cca:	08 95       	ret

00003ccc <_exit>:
    3ccc:	f8 94       	cli

00003cce <__stop_program>:
    3cce:	ff cf       	rjmp	.-2      	; 0x3cce <__stop_program>
