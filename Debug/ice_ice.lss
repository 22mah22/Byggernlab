
ice_ice.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002de  00800100  00003c52  00003ce6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003c52  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  008003de  008003de  00003fc4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003fc4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00004020  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000300  00000000  00000000  0000405c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004689  00000000  00000000  0000435c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001354  00000000  00000000  000089e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001e9d  00000000  00000000  00009d39  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000840  00000000  00000000  0000bbd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b4a  00000000  00000000  0000c418  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002981  00000000  00000000  0000cf62  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000408  00000000  00000000  0000f8e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 20 0c 	jmp	0x1840	; 0x1840 <__ctors_end>
       4:	0c 94 3f 0c 	jmp	0x187e	; 0x187e <__vector_1>
       8:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
       c:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      10:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      14:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      18:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      1c:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      20:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      24:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      28:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      2c:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      30:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      34:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      38:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      3c:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      40:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      44:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      48:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      4c:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      50:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      54:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      58:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      5c:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      60:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      64:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      68:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>
      6c:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__bad_interrupt>

00000070 <__trampolines_end>:
	...
     1d4:	00 01       	movw	r0, r0
     1d6:	01 01       	movw	r0, r2
     1d8:	01 01       	movw	r0, r2
     1da:	01 01       	movw	r0, r2
     1dc:	01 00       	.word	0x0001	; ????
     1de:	00 00       	nop
     1e0:	00 01       	movw	r0, r0
     1e2:	01 01       	movw	r0, r2
     1e4:	01 00       	.word	0x0001	; ????
	...
     20a:	00 00       	nop
     20c:	01 01       	movw	r0, r2
     20e:	01 01       	movw	r0, r2
     210:	01 01       	movw	r0, r2
     212:	01 01       	movw	r0, r2
     214:	01 01       	movw	r0, r2
     216:	01 01       	movw	r0, r2
     218:	01 01       	movw	r0, r2
     21a:	01 01       	movw	r0, r2
     21c:	01 01       	movw	r0, r2
     21e:	01 00       	.word	0x0001	; ????
	...
     240:	00 00       	nop
     242:	00 01       	movw	r0, r0
     244:	01 01       	movw	r0, r2
     246:	01 01       	movw	r0, r2
     248:	01 01       	movw	r0, r2
     24a:	01 01       	movw	r0, r2
     24c:	01 01       	movw	r0, r2
     24e:	01 01       	movw	r0, r2
     250:	01 01       	movw	r0, r2
     252:	01 01       	movw	r0, r2
     254:	01 01       	movw	r0, r2
     256:	01 00       	.word	0x0001	; ????
	...
     278:	00 00       	nop
     27a:	01 01       	movw	r0, r2
     27c:	01 01       	movw	r0, r2
     27e:	01 01       	movw	r0, r2
     280:	01 01       	movw	r0, r2
     282:	01 01       	movw	r0, r2
     284:	01 01       	movw	r0, r2
     286:	01 01       	movw	r0, r2
     288:	01 01       	movw	r0, r2
     28a:	01 01       	movw	r0, r2
     28c:	01 01       	movw	r0, r2
     28e:	01 01       	movw	r0, r2
	...
     2b0:	00 01       	movw	r0, r0
     2b2:	01 01       	movw	r0, r2
     2b4:	01 01       	movw	r0, r2
     2b6:	01 01       	movw	r0, r2
     2b8:	01 01       	movw	r0, r2
     2ba:	01 01       	movw	r0, r2
     2bc:	01 01       	movw	r0, r2
     2be:	01 01       	movw	r0, r2
     2c0:	01 01       	movw	r0, r2
     2c2:	01 01       	movw	r0, r2
     2c4:	01 01       	movw	r0, r2
     2c6:	01 01       	movw	r0, r2
	...
     2e8:	00 01       	movw	r0, r0
     2ea:	01 01       	movw	r0, r2
     2ec:	01 01       	movw	r0, r2
     2ee:	01 01       	movw	r0, r2
     2f0:	01 01       	movw	r0, r2
     2f2:	01 01       	movw	r0, r2
     2f4:	01 01       	movw	r0, r2
     2f6:	01 01       	movw	r0, r2
     2f8:	01 01       	movw	r0, r2
     2fa:	01 01       	movw	r0, r2
     2fc:	01 01       	movw	r0, r2
     2fe:	01 01       	movw	r0, r2
     300:	01 01       	movw	r0, r2
	...
     31e:	00 00       	nop
     320:	01 01       	movw	r0, r2
     322:	01 01       	movw	r0, r2
     324:	01 01       	movw	r0, r2
     326:	01 01       	movw	r0, r2
     328:	01 01       	movw	r0, r2
     32a:	01 01       	movw	r0, r2
     32c:	01 01       	movw	r0, r2
     32e:	01 01       	movw	r0, r2
     330:	01 01       	movw	r0, r2
     332:	01 01       	movw	r0, r2
     334:	01 01       	movw	r0, r2
     336:	01 01       	movw	r0, r2
     338:	01 01       	movw	r0, r2
     33a:	01 00       	.word	0x0001	; ????
	...
     354:	00 00       	nop
     356:	00 01       	movw	r0, r0
     358:	01 01       	movw	r0, r2
     35a:	01 01       	movw	r0, r2
     35c:	01 01       	movw	r0, r2
     35e:	01 01       	movw	r0, r2
     360:	01 01       	movw	r0, r2
     362:	01 01       	movw	r0, r2
     364:	01 01       	movw	r0, r2
     366:	01 01       	movw	r0, r2
     368:	01 01       	movw	r0, r2
     36a:	01 01       	movw	r0, r2
     36c:	01 01       	movw	r0, r2
     36e:	01 01       	movw	r0, r2
     370:	01 01       	movw	r0, r2
     372:	01 01       	movw	r0, r2
	...
     38c:	00 00       	nop
     38e:	01 01       	movw	r0, r2
     390:	01 01       	movw	r0, r2
     392:	01 01       	movw	r0, r2
     394:	01 01       	movw	r0, r2
     396:	01 01       	movw	r0, r2
     398:	01 01       	movw	r0, r2
     39a:	01 01       	movw	r0, r2
     39c:	01 01       	movw	r0, r2
     39e:	00 00       	nop
     3a0:	01 01       	movw	r0, r2
     3a2:	01 01       	movw	r0, r2
     3a4:	01 01       	movw	r0, r2
     3a6:	01 01       	movw	r0, r2
     3a8:	01 00       	.word	0x0001	; ????
     3aa:	01 01       	movw	r0, r2
     3ac:	01 00       	.word	0x0001	; ????
	...
     3c2:	00 00       	nop
     3c4:	00 01       	movw	r0, r0
     3c6:	01 01       	movw	r0, r2
     3c8:	01 01       	movw	r0, r2
     3ca:	01 01       	movw	r0, r2
     3cc:	01 01       	movw	r0, r2
     3ce:	01 01       	movw	r0, r2
     3d0:	00 00       	nop
     3d2:	01 01       	movw	r0, r2
     3d4:	01 01       	movw	r0, r2
     3d6:	01 00       	.word	0x0001	; ????
     3d8:	00 00       	nop
     3da:	01 00       	.word	0x0001	; ????
     3dc:	00 01       	movw	r0, r0
     3de:	01 01       	movw	r0, r2
     3e0:	01 00       	.word	0x0001	; ????
     3e2:	00 00       	nop
     3e4:	01 00       	.word	0x0001	; ????
	...
     3fa:	00 00       	nop
     3fc:	00 01       	movw	r0, r0
     3fe:	01 01       	movw	r0, r2
     400:	01 01       	movw	r0, r2
     402:	01 01       	movw	r0, r2
     404:	01 01       	movw	r0, r2
     406:	01 00       	.word	0x0001	; ????
     408:	00 01       	movw	r0, r0
     40a:	01 01       	movw	r0, r2
     40c:	01 01       	movw	r0, r2
     40e:	01 00       	.word	0x0001	; ????
     410:	00 00       	nop
     412:	00 00       	nop
     414:	00 01       	movw	r0, r0
     416:	01 01       	movw	r0, r2
     418:	01 00       	.word	0x0001	; ????
	...
     432:	00 00       	nop
     434:	01 01       	movw	r0, r2
     436:	01 01       	movw	r0, r2
     438:	01 01       	movw	r0, r2
     43a:	01 01       	movw	r0, r2
     43c:	01 01       	movw	r0, r2
     43e:	01 01       	movw	r0, r2
     440:	01 00       	.word	0x0001	; ????
     442:	01 01       	movw	r0, r2
     444:	01 01       	movw	r0, r2
     446:	00 00       	nop
     448:	00 01       	movw	r0, r0
     44a:	01 00       	.word	0x0001	; ????
     44c:	00 01       	movw	r0, r0
     44e:	01 01       	movw	r0, r2
     450:	01 00       	.word	0x0001	; ????
     452:	01 01       	movw	r0, r2
     454:	01 00       	.word	0x0001	; ????
	...
     46a:	00 00       	nop
     46c:	01 01       	movw	r0, r2
     46e:	01 01       	movw	r0, r2
     470:	01 01       	movw	r0, r2
     472:	01 01       	movw	r0, r2
     474:	01 01       	movw	r0, r2
     476:	01 01       	movw	r0, r2
     478:	01 01       	movw	r0, r2
     47a:	01 01       	movw	r0, r2
     47c:	01 01       	movw	r0, r2
     47e:	01 01       	movw	r0, r2
     480:	01 01       	movw	r0, r2
     482:	01 01       	movw	r0, r2
     484:	01 01       	movw	r0, r2
     486:	01 01       	movw	r0, r2
     488:	01 01       	movw	r0, r2
     48a:	01 01       	movw	r0, r2
	...
     4a0:	00 00       	nop
     4a2:	00 01       	movw	r0, r0
     4a4:	01 01       	movw	r0, r2
     4a6:	01 01       	movw	r0, r2
     4a8:	01 01       	movw	r0, r2
     4aa:	01 01       	movw	r0, r2
     4ac:	01 01       	movw	r0, r2
     4ae:	01 01       	movw	r0, r2
     4b0:	01 01       	movw	r0, r2
     4b2:	01 01       	movw	r0, r2
     4b4:	01 01       	movw	r0, r2
     4b6:	01 01       	movw	r0, r2
     4b8:	01 01       	movw	r0, r2
     4ba:	01 01       	movw	r0, r2
     4bc:	01 01       	movw	r0, r2
     4be:	01 01       	movw	r0, r2
     4c0:	01 01       	movw	r0, r2
     4c2:	01 00       	.word	0x0001	; ????
	...
     4d8:	00 00       	nop
     4da:	00 01       	movw	r0, r0
     4dc:	01 01       	movw	r0, r2
     4de:	01 01       	movw	r0, r2
     4e0:	01 01       	movw	r0, r2
     4e2:	01 01       	movw	r0, r2
     4e4:	01 01       	movw	r0, r2
     4e6:	01 01       	movw	r0, r2
     4e8:	01 01       	movw	r0, r2
     4ea:	01 01       	movw	r0, r2
     4ec:	01 01       	movw	r0, r2
     4ee:	01 01       	movw	r0, r2
     4f0:	01 01       	movw	r0, r2
     4f2:	01 01       	movw	r0, r2
     4f4:	01 01       	movw	r0, r2
     4f6:	01 01       	movw	r0, r2
     4f8:	01 00       	.word	0x0001	; ????
	...
     512:	00 01       	movw	r0, r0
     514:	01 01       	movw	r0, r2
     516:	01 01       	movw	r0, r2
     518:	01 01       	movw	r0, r2
     51a:	01 01       	movw	r0, r2
     51c:	01 01       	movw	r0, r2
     51e:	01 01       	movw	r0, r2
     520:	01 01       	movw	r0, r2
     522:	01 01       	movw	r0, r2
     524:	01 01       	movw	r0, r2
     526:	01 01       	movw	r0, r2
     528:	01 01       	movw	r0, r2
     52a:	01 01       	movw	r0, r2
     52c:	01 01       	movw	r0, r2
     52e:	01 01       	movw	r0, r2
     530:	01 01       	movw	r0, r2
	...
     54a:	00 01       	movw	r0, r0
     54c:	01 01       	movw	r0, r2
     54e:	01 01       	movw	r0, r2
     550:	01 01       	movw	r0, r2
     552:	01 01       	movw	r0, r2
     554:	01 01       	movw	r0, r2
     556:	01 01       	movw	r0, r2
     558:	01 01       	movw	r0, r2
     55a:	01 01       	movw	r0, r2
     55c:	01 01       	movw	r0, r2
     55e:	01 01       	movw	r0, r2
     560:	01 01       	movw	r0, r2
     562:	01 01       	movw	r0, r2
     564:	01 01       	movw	r0, r2
     566:	01 01       	movw	r0, r2
     568:	01 01       	movw	r0, r2
     56a:	01 00       	.word	0x0001	; ????
	...
     580:	00 00       	nop
     582:	00 01       	movw	r0, r0
     584:	01 01       	movw	r0, r2
     586:	01 01       	movw	r0, r2
     588:	01 01       	movw	r0, r2
     58a:	01 01       	movw	r0, r2
     58c:	01 01       	movw	r0, r2
     58e:	01 01       	movw	r0, r2
     590:	01 01       	movw	r0, r2
     592:	01 01       	movw	r0, r2
     594:	01 01       	movw	r0, r2
     596:	01 01       	movw	r0, r2
     598:	01 01       	movw	r0, r2
     59a:	01 01       	movw	r0, r2
     59c:	01 01       	movw	r0, r2
     59e:	01 01       	movw	r0, r2
     5a0:	01 01       	movw	r0, r2
     5a2:	01 00       	.word	0x0001	; ????
	...
     5b8:	00 00       	nop
     5ba:	00 01       	movw	r0, r0
     5bc:	01 01       	movw	r0, r2
     5be:	01 01       	movw	r0, r2
     5c0:	01 01       	movw	r0, r2
     5c2:	01 01       	movw	r0, r2
     5c4:	01 01       	movw	r0, r2
     5c6:	01 01       	movw	r0, r2
     5c8:	01 01       	movw	r0, r2
     5ca:	01 01       	movw	r0, r2
     5cc:	01 01       	movw	r0, r2
     5ce:	01 01       	movw	r0, r2
     5d0:	01 01       	movw	r0, r2
     5d2:	01 01       	movw	r0, r2
     5d4:	01 01       	movw	r0, r2
     5d6:	01 01       	movw	r0, r2
     5d8:	01 01       	movw	r0, r2
     5da:	01 00       	.word	0x0001	; ????
	...
     5f0:	00 00       	nop
     5f2:	00 01       	movw	r0, r0
     5f4:	01 01       	movw	r0, r2
     5f6:	01 01       	movw	r0, r2
     5f8:	01 01       	movw	r0, r2
     5fa:	01 01       	movw	r0, r2
     5fc:	01 01       	movw	r0, r2
     5fe:	01 01       	movw	r0, r2
     600:	01 01       	movw	r0, r2
     602:	01 01       	movw	r0, r2
     604:	01 01       	movw	r0, r2
     606:	01 01       	movw	r0, r2
     608:	01 01       	movw	r0, r2
     60a:	01 01       	movw	r0, r2
     60c:	01 01       	movw	r0, r2
     60e:	01 01       	movw	r0, r2
     610:	01 01       	movw	r0, r2
     612:	01 01       	movw	r0, r2
	...
     628:	00 00       	nop
     62a:	00 01       	movw	r0, r0
     62c:	01 01       	movw	r0, r2
     62e:	01 01       	movw	r0, r2
     630:	01 01       	movw	r0, r2
     632:	01 01       	movw	r0, r2
     634:	01 01       	movw	r0, r2
     636:	01 01       	movw	r0, r2
     638:	01 01       	movw	r0, r2
     63a:	01 01       	movw	r0, r2
     63c:	01 01       	movw	r0, r2
     63e:	01 01       	movw	r0, r2
     640:	01 01       	movw	r0, r2
     642:	01 01       	movw	r0, r2
     644:	01 01       	movw	r0, r2
     646:	01 01       	movw	r0, r2
     648:	01 01       	movw	r0, r2
     64a:	01 01       	movw	r0, r2
	...
     660:	00 00       	nop
     662:	00 01       	movw	r0, r0
     664:	01 01       	movw	r0, r2
     666:	01 01       	movw	r0, r2
     668:	01 01       	movw	r0, r2
     66a:	01 01       	movw	r0, r2
     66c:	01 01       	movw	r0, r2
     66e:	01 01       	movw	r0, r2
     670:	01 01       	movw	r0, r2
     672:	01 01       	movw	r0, r2
     674:	01 01       	movw	r0, r2
     676:	01 01       	movw	r0, r2
     678:	01 01       	movw	r0, r2
     67a:	01 01       	movw	r0, r2
     67c:	01 01       	movw	r0, r2
     67e:	01 01       	movw	r0, r2
     680:	01 01       	movw	r0, r2
     682:	01 00       	.word	0x0001	; ????
	...
     698:	00 00       	nop
     69a:	00 01       	movw	r0, r0
     69c:	01 01       	movw	r0, r2
     69e:	01 01       	movw	r0, r2
     6a0:	01 01       	movw	r0, r2
     6a2:	01 01       	movw	r0, r2
     6a4:	01 01       	movw	r0, r2
     6a6:	01 01       	movw	r0, r2
     6a8:	01 01       	movw	r0, r2
     6aa:	01 01       	movw	r0, r2
     6ac:	01 01       	movw	r0, r2
     6ae:	01 01       	movw	r0, r2
     6b0:	01 01       	movw	r0, r2
     6b2:	01 01       	movw	r0, r2
     6b4:	01 01       	movw	r0, r2
     6b6:	01 01       	movw	r0, r2
     6b8:	01 01       	movw	r0, r2
     6ba:	01 00       	.word	0x0001	; ????
	...
     6d4:	01 01       	movw	r0, r2
     6d6:	01 01       	movw	r0, r2
     6d8:	01 01       	movw	r0, r2
     6da:	01 01       	movw	r0, r2
     6dc:	01 01       	movw	r0, r2
     6de:	01 01       	movw	r0, r2
     6e0:	01 01       	movw	r0, r2
     6e2:	01 01       	movw	r0, r2
     6e4:	01 01       	movw	r0, r2
     6e6:	01 01       	movw	r0, r2
     6e8:	01 01       	movw	r0, r2
     6ea:	01 01       	movw	r0, r2
     6ec:	01 01       	movw	r0, r2
     6ee:	01 01       	movw	r0, r2
     6f0:	01 01       	movw	r0, r2
	...
     70a:	00 00       	nop
     70c:	00 01       	movw	r0, r0
     70e:	01 01       	movw	r0, r2
     710:	01 01       	movw	r0, r2
     712:	01 01       	movw	r0, r2
     714:	01 01       	movw	r0, r2
     716:	01 01       	movw	r0, r2
     718:	01 01       	movw	r0, r2
     71a:	01 01       	movw	r0, r2
     71c:	01 01       	movw	r0, r2
     71e:	01 01       	movw	r0, r2
     720:	01 01       	movw	r0, r2
     722:	01 01       	movw	r0, r2
     724:	01 01       	movw	r0, r2
     726:	01 01       	movw	r0, r2
	...
     744:	00 00       	nop
     746:	01 01       	movw	r0, r2
     748:	01 01       	movw	r0, r2
     74a:	01 01       	movw	r0, r2
     74c:	01 01       	movw	r0, r2
     74e:	01 01       	movw	r0, r2
     750:	01 01       	movw	r0, r2
     752:	01 01       	movw	r0, r2
     754:	01 01       	movw	r0, r2
     756:	01 01       	movw	r0, r2
     758:	01 01       	movw	r0, r2
     75a:	01 01       	movw	r0, r2
     75c:	01 01       	movw	r0, r2
	...
     77e:	00 00       	nop
     780:	00 01       	movw	r0, r0
     782:	01 01       	movw	r0, r2
     784:	01 01       	movw	r0, r2
     786:	01 01       	movw	r0, r2
     788:	01 01       	movw	r0, r2
     78a:	01 01       	movw	r0, r2
     78c:	01 01       	movw	r0, r2
     78e:	01 01       	movw	r0, r2
     790:	01 01       	movw	r0, r2
     792:	01 01       	movw	r0, r2
	...
     7bc:	00 00       	nop
     7be:	00 01       	movw	r0, r0
     7c0:	01 01       	movw	r0, r2
     7c2:	01 01       	movw	r0, r2
     7c4:	01 01       	movw	r0, r2
     7c6:	01 01       	movw	r0, r2
     7c8:	01 00       	.word	0x0001	; ????
	...

00000930 <wojak>:
	...
     9b8:	00 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     9ec:	00 00 01 01 01 01 01 00 00 01 01 01 01 00 00 00     ................
	...
     a24:	01 01 01 00 00 00 00 00 00 00 00 00 00 01 01 00     ................
	...
     a58:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
     a68:	00 00 01 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     a90:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     aa0:	00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ac8:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ad8:	00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     b00:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     b10:	00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00     ................
	...
     b38:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     b48:	00 00 00 00 00 00 01 01 00 00 00 00 00 00 00 00     ................
	...
     b70:	01 00 00 00 00 00 00 00 00 00 01 01 01 01 01 01     ................
     b80:	01 01 01 01 01 00 00 01 00 00 00 00 00 00 00 00     ................
	...
     ba8:	01 00 00 00 00 00 00 00 00 00 00 00 01 01 01 01     ................
     bb8:	00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00     ................
	...
     be0:	01 00 00 00 00 00 00 00 01 01 01 01 00 00 00 00     ................
     bf0:	01 01 01 01 01 00 00 01 00 00 00 00 00 00 00 00     ................
	...
     c18:	01 00 00 00 00 00 00 00 00 00 00 01 01 01 00 00     ................
     c28:	00 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00     ................
	...
     c50:	01 00 00 00 00 00 00 00 00 01 01 00 00 00 00 00     ................
     c60:	00 00 00 00 00 00 01 00 01 00 00 00 00 00 00 00     ................
	...
     c88:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c98:	00 00 00 01 00 00 00 00 01 00 00 00 00 00 00 00     ................
	...
     cc0:	01 00 00 00 00 00 00 00 00 00 01 01 01 00 00 00     ................
	...
     cd8:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     cf8:	01 00 00 00 00 00 00 00 00 00 01 01 01 01 01 00     ................
     d08:	00 00 00 00 01 01 01 00 01 00 00 00 00 00 00 00     ................
	...
     d30:	01 00 00 00 00 00 00 00 00 00 01 01 01 01 01 00     ................
     d40:	00 00 00 01 01 01 01 00 01 00 00 00 00 00 00 00     ................
	...
     d68:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     d78:	00 00 00 00 00 00 01 00 00 01 00 00 00 00 00 00     ................
	...
     da0:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     db0:	00 00 01 00 00 00 00 00 00 01 00 00 00 00 00 00     ................
	...
     dd8:	00 01 00 00 00 01 00 00 00 00 00 00 00 00 00 00     ................
     de8:	00 00 00 01 00 00 00 00 00 01 00 00 00 00 00 00     ................
	...
     e10:	00 00 01 00 00 01 00 00 00 00 00 00 00 00 00 00     ................
     e20:	00 00 00 01 01 00 00 00 00 01 00 00 00 00 00 00     ................
	...
     e48:	00 00 01 00 00 00 01 00 00 00 00 00 00 00 01 01     ................
     e58:	00 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00     ................
	...
     e80:	00 00 01 01 00 00 01 00 00 00 00 00 00 00 01 01     ................
     e90:	00 01 00 01 00 00 00 00 01 00 00 00 00 00 00 00     ................
	...
     eb8:	00 00 01 01 00 00 01 01 00 00 00 00 00 00 00 00     ................
     ec8:	00 00 00 01 00 00 00 01 01 00 00 00 00 00 00 00     ................
	...
     ef0:	00 00 01 01 00 00 01 01 00 00 00 00 00 00 00 00     ................
     f00:	00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00     ................
	...
     f28:	00 00 01 01 00 00 01 00 01 00 00 00 00 01 01 01     ................
     f38:	01 01 01 01 00 00 01 00 00 00 00 00 00 00 00 00     ................
	...
     f60:	00 00 01 00 00 00 01 00 00 01 01 00 00 00 00 00     ................
     f70:	00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00     ................
	...
     f98:	00 00 01 00 00 00 00 00 00 00 01 01 00 00 00 00     ................
     fa8:	00 00 00 00 00 01 01 00 00 00 00 00 00 00 00 00     ................
	...
     fd0:	00 00 01 00 00 00 00 00 00 00 00 01 01 00 00 00     ................
     fe0:	00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1008:	00 01 00 00 00 00 00 00 00 00 00 00 01 01 01 00     ................
    1018:	00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1040:	00 01 00 00 00 01 01 00 00 00 00 00 00 00 01 01     ................
    1050:	01 01 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1078:	01 00 00 00 01 00 00 00 00 00 00 00 00 00 01 00     ................
    1088:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    10ac:	00 01 01 01 01 00 00 01 01 00 00 00 00 00 00 00     ................
    10bc:	00 00 00 00 00 00 01 01 01 01 01 01 01 01 00 00     ................
	...
    10e0:	00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1128:	00 00 01 01 00 01 00 00 00 00 00 00 00 00 00 00     ................
	...
    1164:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000011f0 <font4>:
    11f0:	00 00 00 00 00 5c 00 00 0c 00 0c 00 7c 28 7c 28     .....\......|(|(
    1200:	58 dc 68 00 24 10 48 00 28 54 28 40 00 0c 00 00     X.h.$.H.(T(@....
    1210:	00 78 84 00 84 78 00 00 54 38 54 00 10 7c 10 00     .x...x..T8T..|..
    1220:	80 40 00 00 10 10 10 00 00 40 00 00 60 10 0c 00     .@.......@..`...
    1230:	38 54 38 00 48 7c 40 00 48 64 58 00 44 54 2c 00     8T8.H|@.HdX.DT,.
    1240:	1c 10 7c 00 5c 54 24 00 38 54 24 00 64 14 0c 00     ..|.\T$.8T$.d...
    1250:	68 54 2c 00 48 54 38 00 00 48 00 00 80 48 00 00     hT,.HT8..H...H..
    1260:	10 28 44 00 28 28 28 00 44 28 10 00 04 54 08 00     .(D.(((.D(...T..
    1270:	38 44 5c 00 78 14 78 00 7c 54 28 00 38 44 28 00     8D\.x.x.|T(.8D(.
    1280:	7c 44 38 00 7c 54 44 00 7c 14 04 00 38 44 74 00     |D8.|TD.|...8Dt.
    1290:	7c 10 7c 00 44 7c 44 00 20 40 3c 00 7c 10 6c 00     |.|.D|D. @<.|.l.
    12a0:	7c 40 40 00 7c 18 7c 00 78 10 3c 00 38 44 38 00     |@@.|.|.x.<.8D8.
    12b0:	7c 14 08 00 38 44 b8 00 7c 14 68 00 48 54 24 00     |...8D..|.h.HT$.
    12c0:	04 7c 04 00 7c 40 7c 00 3c 60 3c 00 7c 30 7c 00     .|..|@|.<`<.|0|.
    12d0:	6c 10 6c 00 0c 70 0c 00 64 54 4c 00 00 7c 44 00     l.l..p..dTL..|D.
    12e0:	0c 10 60 00 44 7c 00 00 08 04 08 00 80 80 80 00     ..`.D|..........
    12f0:	00 04 08 00 30 48 78 00 7c 48 30 00 30 48 48 00     ....0Hx.|H0.0HH.
    1300:	30 48 7c 00 30 68 50 00 10 78 14 00 90 a8 78 00     0H|.0hP..x....x.
    1310:	7c 08 70 00 50 74 40 00 80 80 74 00 7c 10 68 00     |.p.Pt@...t.|.h.
    1320:	44 7c 40 00 78 10 78 00 78 08 70 00 30 48 30 00     D|@.x.x.x.p.0H0.
    1330:	f8 28 10 00 30 48 f8 00 78 10 08 00 50 58 28 00     .(..0H..x...PX(.
    1340:	08 3c 48 00 38 40 78 00 38 40 38 00 78 20 78 00     .<H.8@x.8@8.x x.
    1350:	48 30 48 00 98 a0 78 00 48 68 58 00 10 78 84 00     H0H...x.HhX..x..
    1360:	00 7c 00 00 84 78 10 00 08 04 08 04                 .|...x......

0000136c <font5>:
    136c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
    137c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
    138c:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
    139c:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
    13ac:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
    13bc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
    13cc:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
    13dc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
    13ec:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
    13fc:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
    140c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
    141c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
    142c:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
    143c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
    144c:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
    145c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
    146c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
    147c:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
    148c:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
    149c:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
    14ac:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
    14bc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
    14cc:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
    14dc:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
    14ec:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
    14fc:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
    150c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
    151c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
    152c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
    153c:	00 00 41 36 08 00 02 01 03 02 01                    ..A6.......

00001547 <font8>:
	...
    154f:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
    155f:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
    156f:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
    157f:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
    158f:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
    159f:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
    15af:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
    15bf:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
    15cf:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
    15df:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
    15ef:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
    15ff:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
    160f:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
    161f:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
    162f:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
    163f:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
    164f:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
    165f:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
    166f:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
    167f:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
    168f:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
    169f:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
    16af:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
    16bf:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
    16cf:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
    16df:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
    16ef:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
    16ff:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
    170f:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
    171f:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
    172f:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
    173f:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
    174f:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
    175f:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
    176f:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
    177f:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
    178f:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
    179f:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
    17af:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
    17bf:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
    17cf:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
    17df:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
    17ef:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
    17ff:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
    180f:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
    181f:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
    182f:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

00001840 <__ctors_end>:
    1840:	11 24       	eor	r1, r1
    1842:	1f be       	out	0x3f, r1	; 63
    1844:	cf ef       	ldi	r28, 0xFF	; 255
    1846:	d4 e0       	ldi	r29, 0x04	; 4
    1848:	de bf       	out	0x3e, r29	; 62
    184a:	cd bf       	out	0x3d, r28	; 61

0000184c <__do_copy_data>:
    184c:	13 e0       	ldi	r17, 0x03	; 3
    184e:	a0 e0       	ldi	r26, 0x00	; 0
    1850:	b1 e0       	ldi	r27, 0x01	; 1
    1852:	e2 e5       	ldi	r30, 0x52	; 82
    1854:	fc e3       	ldi	r31, 0x3C	; 60
    1856:	02 c0       	rjmp	.+4      	; 0x185c <__do_copy_data+0x10>
    1858:	05 90       	lpm	r0, Z+
    185a:	0d 92       	st	X+, r0
    185c:	ae 3d       	cpi	r26, 0xDE	; 222
    185e:	b1 07       	cpc	r27, r17
    1860:	d9 f7       	brne	.-10     	; 0x1858 <__do_copy_data+0xc>

00001862 <__do_clear_bss>:
    1862:	23 e0       	ldi	r18, 0x03	; 3
    1864:	ae ed       	ldi	r26, 0xDE	; 222
    1866:	b3 e0       	ldi	r27, 0x03	; 3
    1868:	01 c0       	rjmp	.+2      	; 0x186c <.do_clear_bss_start>

0000186a <.do_clear_bss_loop>:
    186a:	1d 92       	st	X+, r1

0000186c <.do_clear_bss_start>:
    186c:	ab 3f       	cpi	r26, 0xFB	; 251
    186e:	b2 07       	cpc	r27, r18
    1870:	e1 f7       	brne	.-8      	; 0x186a <.do_clear_bss_loop>
    1872:	0e 94 8e 15 	call	0x2b1c	; 0x2b1c <main>
    1876:	0c 94 27 1e 	jmp	0x3c4e	; 0x3c4e <_exit>

0000187a <__bad_interrupt>:
    187a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000187e <__vector_1>:
	if(!(isBufferTransmitted & (MCP_TX0IF+2*buffer_number)) ){
		return 0;
	}
	mcp2515_bit_modify(MCP_CANINTF,MCP_TX0IF+2*buffer_number,0x00);
	return 1;
}
    187e:	1f 92       	push	r1
    1880:	0f 92       	push	r0
    1882:	0f b6       	in	r0, 0x3f	; 63
    1884:	0f 92       	push	r0
    1886:	11 24       	eor	r1, r1
    1888:	8f 93       	push	r24
    188a:	81 e0       	ldi	r24, 0x01	; 1
    188c:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <can_flag>
    1890:	8f 91       	pop	r24
    1892:	0f 90       	pop	r0
    1894:	0f be       	out	0x3f, r0	; 63
    1896:	0f 90       	pop	r0
    1898:	1f 90       	pop	r1
    189a:	18 95       	reti

0000189c <can_interrupted>:
    189c:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <can_flag>
    18a0:	88 23       	and	r24, r24
    18a2:	19 f0       	breq	.+6      	; 0x18aa <can_interrupted+0xe>
    18a4:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <can_flag>
    18a8:	81 e0       	ldi	r24, 0x01	; 1
    18aa:	08 95       	ret

000018ac <can_interrupt_enable>:
    18ac:	f8 94       	cli
    18ae:	85 b7       	in	r24, 0x35	; 53
    18b0:	82 60       	ori	r24, 0x02	; 2
    18b2:	85 bf       	out	0x35, r24	; 53
    18b4:	85 b7       	in	r24, 0x35	; 53
    18b6:	8e 7f       	andi	r24, 0xFE	; 254
    18b8:	85 bf       	out	0x35, r24	; 53
    18ba:	8b b7       	in	r24, 0x3b	; 59
    18bc:	80 64       	ori	r24, 0x40	; 64
    18be:	8b bf       	out	0x3b, r24	; 59
    18c0:	78 94       	sei
    18c2:	08 95       	ret

000018c4 <can_init>:
    18c4:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <mcp2515_init>
    18c8:	0e 94 55 0e 	call	0x1caa	; 0x1caa <mcp2515_reset>
    18cc:	61 e0       	ldi	r22, 0x01	; 1
    18ce:	88 e2       	ldi	r24, 0x28	; 40
    18d0:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <mcp2515_write>
    18d4:	65 eb       	ldi	r22, 0xB5	; 181
    18d6:	89 e2       	ldi	r24, 0x29	; 41
    18d8:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <mcp2515_write>
    18dc:	63 e4       	ldi	r22, 0x43	; 67
    18de:	8a e2       	ldi	r24, 0x2A	; 42
    18e0:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <mcp2515_write>
    18e4:	43 e0       	ldi	r20, 0x03	; 3
    18e6:	63 e0       	ldi	r22, 0x03	; 3
    18e8:	8b e2       	ldi	r24, 0x2B	; 43
    18ea:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <mcp2515_bit_modify>
    18ee:	60 e0       	ldi	r22, 0x00	; 0
    18f0:	8f e0       	ldi	r24, 0x0F	; 15
    18f2:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <mcp2515_write>
    18f6:	08 95       	ret

000018f8 <send_can_msg>:
    18f8:	0f 93       	push	r16
    18fa:	1f 93       	push	r17
    18fc:	cf 93       	push	r28
    18fe:	8c 01       	movw	r16, r24
    1900:	fc 01       	movw	r30, r24
    1902:	60 81       	ld	r22, Z
    1904:	71 81       	ldd	r23, Z+1	; 0x01
    1906:	76 95       	lsr	r23
    1908:	67 95       	ror	r22
    190a:	76 95       	lsr	r23
    190c:	67 95       	ror	r22
    190e:	76 95       	lsr	r23
    1910:	67 95       	ror	r22
    1912:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <buffer_number>
    1916:	82 95       	swap	r24
    1918:	80 7f       	andi	r24, 0xF0	; 240
    191a:	8f 5c       	subi	r24, 0xCF	; 207
    191c:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <mcp2515_write>
    1920:	82 e3       	ldi	r24, 0x32	; 50
    1922:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <mcp2515_read>
    1926:	f8 01       	movw	r30, r16
    1928:	60 81       	ld	r22, Z
    192a:	62 95       	swap	r22
    192c:	66 0f       	add	r22, r22
    192e:	60 7e       	andi	r22, 0xE0	; 224
    1930:	8f 71       	andi	r24, 0x1F	; 31
    1932:	68 2b       	or	r22, r24
    1934:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <buffer_number>
    1938:	82 95       	swap	r24
    193a:	80 7f       	andi	r24, 0xF0	; 240
    193c:	8e 5c       	subi	r24, 0xCE	; 206
    193e:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <mcp2515_write>
    1942:	85 e3       	ldi	r24, 0x35	; 53
    1944:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <mcp2515_read>
    1948:	80 7f       	andi	r24, 0xF0	; 240
    194a:	f8 01       	movw	r30, r16
    194c:	92 81       	ldd	r25, Z+2	; 0x02
    194e:	68 2f       	mov	r22, r24
    1950:	69 2b       	or	r22, r25
    1952:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <buffer_number>
    1956:	82 95       	swap	r24
    1958:	80 7f       	andi	r24, 0xF0	; 240
    195a:	8b 5c       	subi	r24, 0xCB	; 203
    195c:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <mcp2515_write>
    1960:	f8 01       	movw	r30, r16
    1962:	82 81       	ldd	r24, Z+2	; 0x02
    1964:	88 23       	and	r24, r24
    1966:	a9 f0       	breq	.+42     	; 0x1992 <send_can_msg+0x9a>
    1968:	c0 e0       	ldi	r28, 0x00	; 0
    196a:	f8 01       	movw	r30, r16
    196c:	ec 0f       	add	r30, r28
    196e:	f1 1d       	adc	r31, r1
    1970:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <buffer_number>
    1974:	9c 2f       	mov	r25, r28
    1976:	20 e1       	ldi	r18, 0x10	; 16
    1978:	82 9f       	mul	r24, r18
    197a:	90 0d       	add	r25, r0
    197c:	11 24       	eor	r1, r1
    197e:	89 2f       	mov	r24, r25
    1980:	63 81       	ldd	r22, Z+3	; 0x03
    1982:	8a 5c       	subi	r24, 0xCA	; 202
    1984:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <mcp2515_write>
    1988:	cf 5f       	subi	r28, 0xFF	; 255
    198a:	f8 01       	movw	r30, r16
    198c:	82 81       	ldd	r24, Z+2	; 0x02
    198e:	c8 17       	cp	r28, r24
    1990:	60 f3       	brcs	.-40     	; 0x196a <send_can_msg+0x72>
    1992:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <buffer_number>
    1996:	8f 57       	subi	r24, 0x7F	; 127
    1998:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <mcp2515_request_to_send>
    199c:	cf 91       	pop	r28
    199e:	1f 91       	pop	r17
    19a0:	0f 91       	pop	r16
    19a2:	08 95       	ret

000019a4 <receive_can_msg>:
    19a4:	0f 93       	push	r16
    19a6:	1f 93       	push	r17
    19a8:	cf 93       	push	r28
    19aa:	df 93       	push	r29
    19ac:	c8 2f       	mov	r28, r24
    19ae:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <mcp2515_read_status>
    19b2:	0e ed       	ldi	r16, 0xDE	; 222
    19b4:	13 e0       	ldi	r17, 0x03	; 3
    19b6:	f8 01       	movw	r30, r16
    19b8:	11 82       	std	Z+1, r1	; 0x01
    19ba:	10 82       	st	Z, r1
    19bc:	c2 95       	swap	r28
    19be:	c0 7f       	andi	r28, 0xF0	; 240
    19c0:	81 e6       	ldi	r24, 0x61	; 97
    19c2:	8c 0f       	add	r24, r28
    19c4:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <mcp2515_read>
    19c8:	d8 2f       	mov	r29, r24
    19ca:	82 e6       	ldi	r24, 0x62	; 98
    19cc:	8c 0f       	add	r24, r28
    19ce:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <mcp2515_read>
    19d2:	90 e0       	ldi	r25, 0x00	; 0
    19d4:	96 95       	lsr	r25
    19d6:	87 95       	ror	r24
    19d8:	92 95       	swap	r25
    19da:	82 95       	swap	r24
    19dc:	8f 70       	andi	r24, 0x0F	; 15
    19de:	89 27       	eor	r24, r25
    19e0:	9f 70       	andi	r25, 0x0F	; 15
    19e2:	89 27       	eor	r24, r25
    19e4:	2d 2f       	mov	r18, r29
    19e6:	30 e0       	ldi	r19, 0x00	; 0
    19e8:	22 0f       	add	r18, r18
    19ea:	33 1f       	adc	r19, r19
    19ec:	22 0f       	add	r18, r18
    19ee:	33 1f       	adc	r19, r19
    19f0:	22 0f       	add	r18, r18
    19f2:	33 1f       	adc	r19, r19
    19f4:	82 2b       	or	r24, r18
    19f6:	93 2b       	or	r25, r19
    19f8:	f8 01       	movw	r30, r16
    19fa:	20 81       	ld	r18, Z
    19fc:	31 81       	ldd	r19, Z+1	; 0x01
    19fe:	82 2b       	or	r24, r18
    1a00:	93 2b       	or	r25, r19
    1a02:	91 83       	std	Z+1, r25	; 0x01
    1a04:	80 83       	st	Z, r24
    1a06:	85 e6       	ldi	r24, 0x65	; 101
    1a08:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <mcp2515_read>
    1a0c:	8f 70       	andi	r24, 0x0F	; 15
    1a0e:	f8 01       	movw	r30, r16
    1a10:	82 83       	std	Z+2, r24	; 0x02
    1a12:	88 23       	and	r24, r24
    1a14:	71 f0       	breq	.+28     	; 0x1a32 <receive_can_msg+0x8e>
    1a16:	ca 59       	subi	r28, 0x9A	; 154
    1a18:	01 ee       	ldi	r16, 0xE1	; 225
    1a1a:	13 e0       	ldi	r17, 0x03	; 3
    1a1c:	dc 2f       	mov	r29, r28
    1a1e:	d8 0f       	add	r29, r24
    1a20:	8c 2f       	mov	r24, r28
    1a22:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <mcp2515_read>
    1a26:	f8 01       	movw	r30, r16
    1a28:	81 93       	st	Z+, r24
    1a2a:	8f 01       	movw	r16, r30
    1a2c:	cf 5f       	subi	r28, 0xFF	; 255
    1a2e:	cd 13       	cpse	r28, r29
    1a30:	f7 cf       	rjmp	.-18     	; 0x1a20 <receive_can_msg+0x7c>
    1a32:	40 e0       	ldi	r20, 0x00	; 0
    1a34:	61 e0       	ldi	r22, 0x01	; 1
    1a36:	8c e2       	ldi	r24, 0x2C	; 44
    1a38:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <mcp2515_bit_modify>
    1a3c:	40 e0       	ldi	r20, 0x00	; 0
    1a3e:	62 e0       	ldi	r22, 0x02	; 2
    1a40:	8c e2       	ldi	r24, 0x2C	; 44
    1a42:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <mcp2515_bit_modify>
    1a46:	8e ed       	ldi	r24, 0xDE	; 222
    1a48:	93 e0       	ldi	r25, 0x03	; 3
    1a4a:	df 91       	pop	r29
    1a4c:	cf 91       	pop	r28
    1a4e:	1f 91       	pop	r17
    1a50:	0f 91       	pop	r16
    1a52:	08 95       	ret

00001a54 <send_stick_can>:

void send_stick_can(){
    1a54:	ef 92       	push	r14
    1a56:	ff 92       	push	r15
    1a58:	0f 93       	push	r16
    1a5a:	1f 93       	push	r17
    1a5c:	cf 93       	push	r28
    1a5e:	df 93       	push	r29
    1a60:	cd b7       	in	r28, 0x3d	; 61
    1a62:	de b7       	in	r29, 0x3e	; 62
    1a64:	2b 97       	sbiw	r28, 0x0b	; 11
    1a66:	0f b6       	in	r0, 0x3f	; 63
    1a68:	f8 94       	cli
    1a6a:	de bf       	out	0x3e, r29	; 62
    1a6c:	0f be       	out	0x3f, r0	; 63
    1a6e:	cd bf       	out	0x3d, r28	; 61
	
	update_adc_values();
    1a70:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <update_adc_values>
	joyVal joystick = get_joyvals();
    1a74:	0e 94 d6 14 	call	0x29ac	; 0x29ac <get_joyvals>
    1a78:	08 2f       	mov	r16, r24
    1a7a:	19 2f       	mov	r17, r25
    1a7c:	e8 2e       	mov	r14, r24
    1a7e:	f9 2e       	mov	r15, r25
	sliderVal slider = get_slidervals();
    1a80:	0e 94 db 14 	call	0x29b6	; 0x29b6 <get_slidervals>
	
	can_message msgToSend;
	msgToSend.data_length = 8;
    1a84:	28 e0       	ldi	r18, 0x08	; 8
    1a86:	2b 83       	std	Y+3, r18	; 0x03
	msgToSend.data[0] = abs(joystick.x_val);
    1a88:	20 2f       	mov	r18, r16
    1a8a:	00 0f       	add	r16, r16
    1a8c:	33 0b       	sbc	r19, r19
    1a8e:	33 23       	and	r19, r19
    1a90:	1c f4       	brge	.+6      	; 0x1a98 <send_stick_can+0x44>
    1a92:	31 95       	neg	r19
    1a94:	21 95       	neg	r18
    1a96:	31 09       	sbc	r19, r1
    1a98:	2c 83       	std	Y+4, r18	; 0x04
	msgToSend.data[1] = abs(joystick.y_val);
    1a9a:	21 2f       	mov	r18, r17
    1a9c:	11 0f       	add	r17, r17
    1a9e:	33 0b       	sbc	r19, r19
    1aa0:	33 23       	and	r19, r19
    1aa2:	1c f4       	brge	.+6      	; 0x1aaa <send_stick_can+0x56>
    1aa4:	31 95       	neg	r19
    1aa6:	21 95       	neg	r18
    1aa8:	31 09       	sbc	r19, r1
    1aaa:	2d 83       	std	Y+5, r18	; 0x05
	msgToSend.data[2] = PINB & (1<< PINB1); // button pressed?
    1aac:	26 b3       	in	r18, 0x16	; 22
    1aae:	22 70       	andi	r18, 0x02	; 2
    1ab0:	2e 83       	std	Y+6, r18	; 0x06
	
	uint8_t x_positive = (joystick.x_val < 0) ? 0x00 : 0x11;
    1ab2:	ee 20       	and	r14, r14
    1ab4:	14 f0       	brlt	.+4      	; 0x1aba <send_stick_can+0x66>
    1ab6:	21 e1       	ldi	r18, 0x11	; 17
    1ab8:	01 c0       	rjmp	.+2      	; 0x1abc <send_stick_can+0x68>
    1aba:	20 e0       	ldi	r18, 0x00	; 0
	uint8_t y_positive = (joystick.y_val < 0) ? 0x00 : 0x11;
    1abc:	ff 20       	and	r15, r15
    1abe:	14 f0       	brlt	.+4      	; 0x1ac4 <send_stick_can+0x70>
    1ac0:	31 e1       	ldi	r19, 0x11	; 17
    1ac2:	01 c0       	rjmp	.+2      	; 0x1ac6 <send_stick_can+0x72>
    1ac4:	30 e0       	ldi	r19, 0x00	; 0
	
	msgToSend.data[3] = x_positive;
    1ac6:	2f 83       	std	Y+7, r18	; 0x07
	msgToSend.data[4] = y_positive;
    1ac8:	38 87       	std	Y+8, r19	; 0x08
	msgToSend.data[5] = slider.l_val;
    1aca:	89 87       	std	Y+9, r24	; 0x09
	msgToSend.data[6] = slider.r_val;
    1acc:	9a 87       	std	Y+10, r25	; 0x0a
	msgToSend.data[7] = (PIND & (1<< PIND4)) >> 3 | (PIND & (1<< PIND5)) >> 5; 
    1ace:	80 b3       	in	r24, 0x10	; 16
    1ad0:	20 b3       	in	r18, 0x10	; 16
    1ad2:	80 71       	andi	r24, 0x10	; 16
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	95 95       	asr	r25
    1ad8:	87 95       	ror	r24
    1ada:	95 95       	asr	r25
    1adc:	87 95       	ror	r24
    1ade:	95 95       	asr	r25
    1ae0:	87 95       	ror	r24
    1ae2:	25 fb       	bst	r18, 5
    1ae4:	99 27       	eor	r25, r25
    1ae6:	90 f9       	bld	r25, 0
    1ae8:	89 2b       	or	r24, r25
    1aea:	8b 87       	std	Y+11, r24	; 0x0b
	//left and right button on second least significant and least significant

	 
	
	msgToSend.id = 0x0016;
    1aec:	86 e1       	ldi	r24, 0x16	; 22
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	9a 83       	std	Y+2, r25	; 0x02
    1af2:	89 83       	std	Y+1, r24	; 0x01
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1af4:	8f ef       	ldi	r24, 0xFF	; 255
    1af6:	9f e5       	ldi	r25, 0x5F	; 95
    1af8:	01 97       	sbiw	r24, 0x01	; 1
    1afa:	f1 f7       	brne	.-4      	; 0x1af8 <send_stick_can+0xa4>
    1afc:	00 c0       	rjmp	.+0      	; 0x1afe <send_stick_can+0xaa>
    1afe:	00 00       	nop
	_delay_ms(20);
	send_can_msg(&msgToSend);
    1b00:	ce 01       	movw	r24, r28
    1b02:	01 96       	adiw	r24, 0x01	; 1
    1b04:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <send_can_msg>
	
}
    1b08:	2b 96       	adiw	r28, 0x0b	; 11
    1b0a:	0f b6       	in	r0, 0x3f	; 63
    1b0c:	f8 94       	cli
    1b0e:	de bf       	out	0x3e, r29	; 62
    1b10:	0f be       	out	0x3f, r0	; 63
    1b12:	cd bf       	out	0x3d, r28	; 61
    1b14:	df 91       	pop	r29
    1b16:	cf 91       	pop	r28
    1b18:	1f 91       	pop	r17
    1b1a:	0f 91       	pop	r16
    1b1c:	ff 90       	pop	r15
    1b1e:	ef 90       	pop	r14
    1b20:	08 95       	ret

00001b22 <send_difficulty_can>:

void send_difficulty_can(uint8_t diff){
    1b22:	cf 93       	push	r28
    1b24:	df 93       	push	r29
    1b26:	cd b7       	in	r28, 0x3d	; 61
    1b28:	de b7       	in	r29, 0x3e	; 62
    1b2a:	2b 97       	sbiw	r28, 0x0b	; 11
    1b2c:	0f b6       	in	r0, 0x3f	; 63
    1b2e:	f8 94       	cli
    1b30:	de bf       	out	0x3e, r29	; 62
    1b32:	0f be       	out	0x3f, r0	; 63
    1b34:	cd bf       	out	0x3d, r28	; 61
	can_message msgToSend;
	msgToSend.data_length = 1;
    1b36:	91 e0       	ldi	r25, 0x01	; 1
    1b38:	9b 83       	std	Y+3, r25	; 0x03
	if(diff == 1){//easy
    1b3a:	81 30       	cpi	r24, 0x01	; 1
    1b3c:	11 f4       	brne	.+4      	; 0x1b42 <send_difficulty_can+0x20>
		msgToSend.data[0] = 1;
    1b3e:	8c 83       	std	Y+4, r24	; 0x04
    1b40:	06 c0       	rjmp	.+12     	; 0x1b4e <send_difficulty_can+0x2c>
	}
	else if (diff == 3){//hard
    1b42:	83 30       	cpi	r24, 0x03	; 3
    1b44:	11 f4       	brne	.+4      	; 0x1b4a <send_difficulty_can+0x28>
		msgToSend.data[0] = 3;
    1b46:	8c 83       	std	Y+4, r24	; 0x04
    1b48:	02 c0       	rjmp	.+4      	; 0x1b4e <send_difficulty_can+0x2c>
	}
	else{ //set to medium
		msgToSend.data[0] = 2;
    1b4a:	82 e0       	ldi	r24, 0x02	; 2
    1b4c:	8c 83       	std	Y+4, r24	; 0x04
	}

	msgToSend.id = 0x6;
    1b4e:	86 e0       	ldi	r24, 0x06	; 6
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	9a 83       	std	Y+2, r25	; 0x02
    1b54:	89 83       	std	Y+1, r24	; 0x01
    1b56:	8f ef       	ldi	r24, 0xFF	; 255
    1b58:	9f e5       	ldi	r25, 0x5F	; 95
    1b5a:	01 97       	sbiw	r24, 0x01	; 1
    1b5c:	f1 f7       	brne	.-4      	; 0x1b5a <send_difficulty_can+0x38>
    1b5e:	00 c0       	rjmp	.+0      	; 0x1b60 <send_difficulty_can+0x3e>
    1b60:	00 00       	nop
	_delay_ms(20);
	send_can_msg(&msgToSend);
    1b62:	ce 01       	movw	r24, r28
    1b64:	01 96       	adiw	r24, 0x01	; 1
    1b66:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <send_can_msg>
	
}
    1b6a:	2b 96       	adiw	r28, 0x0b	; 11
    1b6c:	0f b6       	in	r0, 0x3f	; 63
    1b6e:	f8 94       	cli
    1b70:	de bf       	out	0x3e, r29	; 62
    1b72:	0f be       	out	0x3f, r0	; 63
    1b74:	cd bf       	out	0x3d, r28	; 61
    1b76:	df 91       	pop	r29
    1b78:	cf 91       	pop	r28
    1b7a:	08 95       	ret

00001b7c <send_game_start_can>:

void send_game_start_can(){
    1b7c:	cf 93       	push	r28
    1b7e:	df 93       	push	r29
    1b80:	cd b7       	in	r28, 0x3d	; 61
    1b82:	de b7       	in	r29, 0x3e	; 62
    1b84:	2b 97       	sbiw	r28, 0x0b	; 11
    1b86:	0f b6       	in	r0, 0x3f	; 63
    1b88:	f8 94       	cli
    1b8a:	de bf       	out	0x3e, r29	; 62
    1b8c:	0f be       	out	0x3f, r0	; 63
    1b8e:	cd bf       	out	0x3d, r28	; 61
	can_message msgToSend;
	msgToSend.data_length = 1;
    1b90:	81 e0       	ldi	r24, 0x01	; 1
    1b92:	8b 83       	std	Y+3, r24	; 0x03
	msgToSend.id = 0x2;
    1b94:	82 e0       	ldi	r24, 0x02	; 2
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	9a 83       	std	Y+2, r25	; 0x02
    1b9a:	89 83       	std	Y+1, r24	; 0x01
	//placeholder
	msgToSend.data[0] = 0;
    1b9c:	1c 82       	std	Y+4, r1	; 0x04
	send_can_msg(&msgToSend);
    1b9e:	ce 01       	movw	r24, r28
    1ba0:	01 96       	adiw	r24, 0x01	; 1
    1ba2:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <send_can_msg>
}
    1ba6:	2b 96       	adiw	r28, 0x0b	; 11
    1ba8:	0f b6       	in	r0, 0x3f	; 63
    1baa:	f8 94       	cli
    1bac:	de bf       	out	0x3e, r29	; 62
    1bae:	0f be       	out	0x3f, r0	; 63
    1bb0:	cd bf       	out	0x3d, r28	; 61
    1bb2:	df 91       	pop	r29
    1bb4:	cf 91       	pop	r28
    1bb6:	08 95       	ret

00001bb8 <send_reaction_start_can>:

void send_reaction_start_can(){
    1bb8:	cf 93       	push	r28
    1bba:	df 93       	push	r29
    1bbc:	cd b7       	in	r28, 0x3d	; 61
    1bbe:	de b7       	in	r29, 0x3e	; 62
    1bc0:	2b 97       	sbiw	r28, 0x0b	; 11
    1bc2:	0f b6       	in	r0, 0x3f	; 63
    1bc4:	f8 94       	cli
    1bc6:	de bf       	out	0x3e, r29	; 62
    1bc8:	0f be       	out	0x3f, r0	; 63
    1bca:	cd bf       	out	0x3d, r28	; 61
	can_message msgToSend;
	msgToSend.data_length = 1;
    1bcc:	81 e0       	ldi	r24, 0x01	; 1
    1bce:	8b 83       	std	Y+3, r24	; 0x03
	msgToSend.id = 0x4;
    1bd0:	84 e0       	ldi	r24, 0x04	; 4
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	9a 83       	std	Y+2, r25	; 0x02
    1bd6:	89 83       	std	Y+1, r24	; 0x01
	//
	msgToSend.data[0] = 0;
    1bd8:	1c 82       	std	Y+4, r1	; 0x04
	send_can_msg(&msgToSend);
    1bda:	ce 01       	movw	r24, r28
    1bdc:	01 96       	adiw	r24, 0x01	; 1
    1bde:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <send_can_msg>
}
    1be2:	2b 96       	adiw	r28, 0x0b	; 11
    1be4:	0f b6       	in	r0, 0x3f	; 63
    1be6:	f8 94       	cli
    1be8:	de bf       	out	0x3e, r29	; 62
    1bea:	0f be       	out	0x3f, r0	; 63
    1bec:	cd bf       	out	0x3d, r28	; 61
    1bee:	df 91       	pop	r29
    1bf0:	cf 91       	pop	r28
    1bf2:	08 95       	ret

00001bf4 <send_reaction_stop_can>:

void send_reaction_stop_can(){
    1bf4:	cf 93       	push	r28
    1bf6:	df 93       	push	r29
    1bf8:	cd b7       	in	r28, 0x3d	; 61
    1bfa:	de b7       	in	r29, 0x3e	; 62
    1bfc:	2b 97       	sbiw	r28, 0x0b	; 11
    1bfe:	0f b6       	in	r0, 0x3f	; 63
    1c00:	f8 94       	cli
    1c02:	de bf       	out	0x3e, r29	; 62
    1c04:	0f be       	out	0x3f, r0	; 63
    1c06:	cd bf       	out	0x3d, r28	; 61
	can_message msgToSend;
	msgToSend.data_length = 1;
    1c08:	81 e0       	ldi	r24, 0x01	; 1
    1c0a:	8b 83       	std	Y+3, r24	; 0x03
	msgToSend.id = 0x3;
    1c0c:	83 e0       	ldi	r24, 0x03	; 3
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	9a 83       	std	Y+2, r25	; 0x02
    1c12:	89 83       	std	Y+1, r24	; 0x01
	//placeholder
	msgToSend.data[0] = 0;
    1c14:	1c 82       	std	Y+4, r1	; 0x04
	send_can_msg(&msgToSend);
    1c16:	ce 01       	movw	r24, r28
    1c18:	01 96       	adiw	r24, 0x01	; 1
    1c1a:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <send_can_msg>
}
    1c1e:	2b 96       	adiw	r28, 0x0b	; 11
    1c20:	0f b6       	in	r0, 0x3f	; 63
    1c22:	f8 94       	cli
    1c24:	de bf       	out	0x3e, r29	; 62
    1c26:	0f be       	out	0x3f, r0	; 63
    1c28:	cd bf       	out	0x3d, r28	; 61
    1c2a:	df 91       	pop	r29
    1c2c:	cf 91       	pop	r28
    1c2e:	08 95       	ret

00001c30 <mcp2515_read>:
	spi_init();
	mcp2515_reset();

}

uint8_t mcp2515_read(uint8_t address){
    1c30:	cf 93       	push	r28
    1c32:	c8 2f       	mov	r28, r24
	uint8_t result;
	
	PORTB &= ~(1<<PB4); //ss
    1c34:	c4 98       	cbi	0x18, 4	; 24
	spi_write(MCP_READ);
    1c36:	83 e0       	ldi	r24, 0x03	; 3
    1c38:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	spi_write(address);
    1c3c:	8c 2f       	mov	r24, r28
    1c3e:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	result = spi_read();
    1c42:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <spi_read>
	
	PORTB |= (1<<PB4); //!ss
    1c46:	c4 9a       	sbi	0x18, 4	; 24
	
	return result;
}
    1c48:	cf 91       	pop	r28
    1c4a:	08 95       	ret

00001c4c <mcp2515_write>:
void mcp2515_write(uint8_t address, uint8_t data){
    1c4c:	cf 93       	push	r28
    1c4e:	df 93       	push	r29
    1c50:	d8 2f       	mov	r29, r24
    1c52:	c6 2f       	mov	r28, r22
	PORTB &= ~(1<<PB4); //slave select
    1c54:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(MCP_WRITE);
    1c56:	82 e0       	ldi	r24, 0x02	; 2
    1c58:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	spi_write(address);
    1c5c:	8d 2f       	mov	r24, r29
    1c5e:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	spi_write(data);
    1c62:	8c 2f       	mov	r24, r28
    1c64:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	
	PORTB |= (1<<PB4); //slave deselect
    1c68:	c4 9a       	sbi	0x18, 4	; 24
}
    1c6a:	df 91       	pop	r29
    1c6c:	cf 91       	pop	r28
    1c6e:	08 95       	ret

00001c70 <mcp2515_request_to_send>:
void mcp2515_request_to_send(uint8_t command){
	PORTB &= ~(1<<PB4);
    1c70:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(command);
    1c72:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	
	
	PORTB |= (1<<PB4);
    1c76:	c4 9a       	sbi	0x18, 4	; 24
    1c78:	08 95       	ret

00001c7a <mcp2515_bit_modify>:
}
void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data){
    1c7a:	1f 93       	push	r17
    1c7c:	cf 93       	push	r28
    1c7e:	df 93       	push	r29
    1c80:	18 2f       	mov	r17, r24
    1c82:	d6 2f       	mov	r29, r22
    1c84:	c4 2f       	mov	r28, r20
	PORTB &= ~(1<<PB4); //slave select
    1c86:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(MCP_BITMOD);
    1c88:	85 e0       	ldi	r24, 0x05	; 5
    1c8a:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	spi_write(address);
    1c8e:	81 2f       	mov	r24, r17
    1c90:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	spi_write(mask);
    1c94:	8d 2f       	mov	r24, r29
    1c96:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	spi_write(data);
    1c9a:	8c 2f       	mov	r24, r28
    1c9c:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	
	PORTB |= (1<<PB4); //slave deselect
    1ca0:	c4 9a       	sbi	0x18, 4	; 24
}
    1ca2:	df 91       	pop	r29
    1ca4:	cf 91       	pop	r28
    1ca6:	1f 91       	pop	r17
    1ca8:	08 95       	ret

00001caa <mcp2515_reset>:
void mcp2515_reset(){
	PORTB &= ~(1<<PB4); //slave select
    1caa:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(MCP_RESET);
    1cac:	80 ec       	ldi	r24, 0xC0	; 192
    1cae:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	
	PORTB |= (1<<PB4); //slave deselect
    1cb2:	c4 9a       	sbi	0x18, 4	; 24
    1cb4:	08 95       	ret

00001cb6 <mcp2515_init>:
//MCP_CANINTE to enable interupts
//MCP_CANINTF to read and clear interupts, need to clear before we can continue transmitting

void mcp2515_init(){
	
	spi_init();
    1cb6:	0e 94 c7 14 	call	0x298e	; 0x298e <spi_init>
	mcp2515_reset();
    1cba:	0e 94 55 0e 	call	0x1caa	; 0x1caa <mcp2515_reset>
    1cbe:	08 95       	ret

00001cc0 <mcp2515_read_status>:
	PORTB |= (1<<PB4); //slave deselect
}
uint8_t mcp2515_read_status(){
	uint8_t result;
	
	PORTB &= ~(1<<PB4); //slave select
    1cc0:	c4 98       	cbi	0x18, 4	; 24
	
	spi_write(MCP_READ_STATUS);
    1cc2:	80 ea       	ldi	r24, 0xA0	; 160
    1cc4:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	result = spi_read();
    1cc8:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <spi_read>
	
	
	PORTB |= (1<<PB4); //slave deselect
    1ccc:	c4 9a       	sbi	0x18, 4	; 24
	
	return result;
}
    1cce:	08 95       	ret

00001cd0 <show_credits>:
		(*(next_menu->fun_ptr));
	}*/

	write_menu_to_screen(next_menu);
	*menuHead = next_menu;
}
    1cd0:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    1cd4:	8a e0       	ldi	r24, 0x0A	; 10
    1cd6:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1cda:	45 e0       	ldi	r20, 0x05	; 5
    1cdc:	6f e1       	ldi	r22, 0x1F	; 31
    1cde:	71 e0       	ldi	r23, 0x01	; 1
    1ce0:	80 e0       	ldi	r24, 0x00	; 0
    1ce2:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1ce6:	8a e0       	ldi	r24, 0x0A	; 10
    1ce8:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1cec:	45 e0       	ldi	r20, 0x05	; 5
    1cee:	68 e2       	ldi	r22, 0x28	; 40
    1cf0:	71 e0       	ldi	r23, 0x01	; 1
    1cf2:	82 e0       	ldi	r24, 0x02	; 2
    1cf4:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1cf8:	8a e0       	ldi	r24, 0x0A	; 10
    1cfa:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1cfe:	45 e0       	ldi	r20, 0x05	; 5
    1d00:	66 e3       	ldi	r22, 0x36	; 54
    1d02:	71 e0       	ldi	r23, 0x01	; 1
    1d04:	83 e0       	ldi	r24, 0x03	; 3
    1d06:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1d0a:	8a e0       	ldi	r24, 0x0A	; 10
    1d0c:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1d10:	45 e0       	ldi	r20, 0x05	; 5
    1d12:	63 e4       	ldi	r22, 0x43	; 67
    1d14:	71 e0       	ldi	r23, 0x01	; 1
    1d16:	84 e0       	ldi	r24, 0x04	; 4
    1d18:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1d1c:	8a e0       	ldi	r24, 0x0A	; 10
    1d1e:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1d22:	45 e0       	ldi	r20, 0x05	; 5
    1d24:	60 e5       	ldi	r22, 0x50	; 80
    1d26:	71 e0       	ldi	r23, 0x01	; 1
    1d28:	86 e0       	ldi	r24, 0x06	; 6
    1d2a:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1d2e:	8a e0       	ldi	r24, 0x0A	; 10
    1d30:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1d34:	45 e0       	ldi	r20, 0x05	; 5
    1d36:	68 e5       	ldi	r22, 0x58	; 88
    1d38:	71 e0       	ldi	r23, 0x01	; 1
    1d3a:	87 e0       	ldi	r24, 0x07	; 7
    1d3c:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1d40:	2f ef       	ldi	r18, 0xFF	; 255
    1d42:	8f e7       	ldi	r24, 0x7F	; 127
    1d44:	95 e2       	ldi	r25, 0x25	; 37
    1d46:	21 50       	subi	r18, 0x01	; 1
    1d48:	80 40       	sbci	r24, 0x00	; 0
    1d4a:	90 40       	sbci	r25, 0x00	; 0
    1d4c:	e1 f7       	brne	.-8      	; 0x1d46 <show_credits+0x76>
    1d4e:	00 c0       	rjmp	.+0      	; 0x1d50 <show_credits+0x80>
    1d50:	00 00       	nop
    1d52:	08 95       	ret

00001d54 <reset_scores>:
    1d54:	81 e0       	ldi	r24, 0x01	; 1
    1d56:	90 e0       	ldi	r25, 0x00	; 0
    1d58:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    1d5c:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    1d60:	e8 0f       	add	r30, r24
    1d62:	f9 1f       	adc	r31, r25
    1d64:	10 82       	st	Z, r1
    1d66:	01 96       	adiw	r24, 0x01	; 1
    1d68:	85 30       	cpi	r24, 0x05	; 5
    1d6a:	91 05       	cpc	r25, r1
    1d6c:	a9 f7       	brne	.-22     	; 0x1d58 <reset_scores+0x4>
    1d6e:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    1d72:	8a e0       	ldi	r24, 0x0A	; 10
    1d74:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1d78:	45 e0       	ldi	r20, 0x05	; 5
    1d7a:	6a e6       	ldi	r22, 0x6A	; 106
    1d7c:	71 e0       	ldi	r23, 0x01	; 1
    1d7e:	80 e0       	ldi	r24, 0x00	; 0
    1d80:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1d84:	2f ef       	ldi	r18, 0xFF	; 255
    1d86:	8f e7       	ldi	r24, 0x7F	; 127
    1d88:	96 e1       	ldi	r25, 0x16	; 22
    1d8a:	21 50       	subi	r18, 0x01	; 1
    1d8c:	80 40       	sbci	r24, 0x00	; 0
    1d8e:	90 40       	sbci	r25, 0x00	; 0
    1d90:	e1 f7       	brne	.-8      	; 0x1d8a <reset_scores+0x36>
    1d92:	00 c0       	rjmp	.+0      	; 0x1d94 <reset_scores+0x40>
    1d94:	00 c0       	rjmp	.+0      	; 0x1d96 <reset_scores+0x42>
    1d96:	08 95       	ret

00001d98 <wojakprinter>:
    1d98:	ef 92       	push	r14
    1d9a:	0f 93       	push	r16
    1d9c:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    1da0:	e1 2c       	mov	r14, r1
    1da2:	02 e0       	ldi	r16, 0x02	; 2
    1da4:	28 e2       	ldi	r18, 0x28	; 40
    1da6:	48 e2       	ldi	r20, 0x28	; 40
    1da8:	50 e0       	ldi	r21, 0x00	; 0
    1daa:	68 e3       	ldi	r22, 0x38	; 56
    1dac:	70 e0       	ldi	r23, 0x00	; 0
    1dae:	80 e3       	ldi	r24, 0x30	; 48
    1db0:	99 e0       	ldi	r25, 0x09	; 9
    1db2:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <character_printer>
    1db6:	2f ef       	ldi	r18, 0xFF	; 255
    1db8:	8f ef       	ldi	r24, 0xFF	; 255
    1dba:	9e e0       	ldi	r25, 0x0E	; 14
    1dbc:	21 50       	subi	r18, 0x01	; 1
    1dbe:	80 40       	sbci	r24, 0x00	; 0
    1dc0:	90 40       	sbci	r25, 0x00	; 0
    1dc2:	e1 f7       	brne	.-8      	; 0x1dbc <wojakprinter+0x24>
    1dc4:	00 c0       	rjmp	.+0      	; 0x1dc6 <wojakprinter+0x2e>
    1dc6:	00 00       	nop
    1dc8:	b1 99       	sbic	0x16, 1	; 22
    1dca:	fe cf       	rjmp	.-4      	; 0x1dc8 <wojakprinter+0x30>
    1dcc:	0f 91       	pop	r16
    1dce:	ef 90       	pop	r14
    1dd0:	08 95       	ret

00001dd2 <choose_character>:
    1dd2:	ef 92       	push	r14
    1dd4:	0f 93       	push	r16
    1dd6:	1f 93       	push	r17
    1dd8:	cf 93       	push	r28
    1dda:	df 93       	push	r29
    1ddc:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    1de0:	45 e0       	ldi	r20, 0x05	; 5
    1de2:	6b e7       	ldi	r22, 0x7B	; 123
    1de4:	71 e0       	ldi	r23, 0x01	; 1
    1de6:	80 e0       	ldi	r24, 0x00	; 0
    1de8:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1dec:	ee 24       	eor	r14, r14
    1dee:	e3 94       	inc	r14
    1df0:	01 e0       	ldi	r16, 0x01	; 1
    1df2:	20 e0       	ldi	r18, 0x00	; 0
    1df4:	48 e2       	ldi	r20, 0x28	; 40
    1df6:	50 e0       	ldi	r21, 0x00	; 0
    1df8:	68 e3       	ldi	r22, 0x38	; 56
    1dfa:	70 e0       	ldi	r23, 0x00	; 0
    1dfc:	80 e3       	ldi	r24, 0x30	; 48
    1dfe:	99 e0       	ldi	r25, 0x09	; 9
    1e00:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <character_printer>
    1e04:	e1 2c       	mov	r14, r1
    1e06:	20 e4       	ldi	r18, 0x40	; 64
    1e08:	48 e2       	ldi	r20, 0x28	; 40
    1e0a:	50 e0       	ldi	r21, 0x00	; 0
    1e0c:	68 e3       	ldi	r22, 0x38	; 56
    1e0e:	70 e0       	ldi	r23, 0x00	; 0
    1e10:	80 e7       	ldi	r24, 0x70	; 112
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <character_printer>
    1e18:	10 e0       	ldi	r17, 0x00	; 0
    1e1a:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <update_adc_values>
    1e1e:	80 b3       	in	r24, 0x10	; 16
    1e20:	80 b3       	in	r24, 0x10	; 16
    1e22:	d6 b3       	in	r29, 0x16	; 22
    1e24:	d2 70       	andi	r29, 0x02	; 2
    1e26:	8c 2f       	mov	r24, r28
    1e28:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <joystick_direction>
    1e2c:	c8 2f       	mov	r28, r24
    1e2e:	8c ef       	ldi	r24, 0xFC	; 252
    1e30:	8c 0f       	add	r24, r28
    1e32:	82 30       	cpi	r24, 0x02	; 2
    1e34:	08 f4       	brcc	.+2      	; 0x1e38 <choose_character+0x66>
    1e36:	43 c0       	rjmp	.+134    	; 0x1ebe <choose_character+0xec>
    1e38:	c1 30       	cpi	r28, 0x01	; 1
    1e3a:	01 f5       	brne	.+64     	; 0x1e7c <choose_character+0xaa>
    1e3c:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    1e40:	45 e0       	ldi	r20, 0x05	; 5
    1e42:	6d e8       	ldi	r22, 0x8D	; 141
    1e44:	71 e0       	ldi	r23, 0x01	; 1
    1e46:	80 e0       	ldi	r24, 0x00	; 0
    1e48:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1e4c:	e1 2c       	mov	r14, r1
    1e4e:	01 e0       	ldi	r16, 0x01	; 1
    1e50:	20 e0       	ldi	r18, 0x00	; 0
    1e52:	48 e2       	ldi	r20, 0x28	; 40
    1e54:	50 e0       	ldi	r21, 0x00	; 0
    1e56:	68 e3       	ldi	r22, 0x38	; 56
    1e58:	70 e0       	ldi	r23, 0x00	; 0
    1e5a:	80 e3       	ldi	r24, 0x30	; 48
    1e5c:	99 e0       	ldi	r25, 0x09	; 9
    1e5e:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <character_printer>
    1e62:	ee 24       	eor	r14, r14
    1e64:	e3 94       	inc	r14
    1e66:	20 e4       	ldi	r18, 0x40	; 64
    1e68:	48 e2       	ldi	r20, 0x28	; 40
    1e6a:	50 e0       	ldi	r21, 0x00	; 0
    1e6c:	68 e3       	ldi	r22, 0x38	; 56
    1e6e:	70 e0       	ldi	r23, 0x00	; 0
    1e70:	80 e7       	ldi	r24, 0x70	; 112
    1e72:	90 e0       	ldi	r25, 0x00	; 0
    1e74:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <character_printer>
    1e78:	11 e0       	ldi	r17, 0x01	; 1
    1e7a:	21 c0       	rjmp	.+66     	; 0x1ebe <choose_character+0xec>
    1e7c:	c1 11       	cpse	r28, r1
    1e7e:	1f c0       	rjmp	.+62     	; 0x1ebe <choose_character+0xec>
    1e80:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    1e84:	45 e0       	ldi	r20, 0x05	; 5
    1e86:	6d e8       	ldi	r22, 0x8D	; 141
    1e88:	71 e0       	ldi	r23, 0x01	; 1
    1e8a:	80 e0       	ldi	r24, 0x00	; 0
    1e8c:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1e90:	ee 24       	eor	r14, r14
    1e92:	e3 94       	inc	r14
    1e94:	01 e0       	ldi	r16, 0x01	; 1
    1e96:	20 e0       	ldi	r18, 0x00	; 0
    1e98:	48 e2       	ldi	r20, 0x28	; 40
    1e9a:	50 e0       	ldi	r21, 0x00	; 0
    1e9c:	68 e3       	ldi	r22, 0x38	; 56
    1e9e:	70 e0       	ldi	r23, 0x00	; 0
    1ea0:	80 e3       	ldi	r24, 0x30	; 48
    1ea2:	99 e0       	ldi	r25, 0x09	; 9
    1ea4:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <character_printer>
    1ea8:	e1 2c       	mov	r14, r1
    1eaa:	20 e4       	ldi	r18, 0x40	; 64
    1eac:	48 e2       	ldi	r20, 0x28	; 40
    1eae:	50 e0       	ldi	r21, 0x00	; 0
    1eb0:	68 e3       	ldi	r22, 0x38	; 56
    1eb2:	70 e0       	ldi	r23, 0x00	; 0
    1eb4:	80 e7       	ldi	r24, 0x70	; 112
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <character_printer>
    1ebc:	10 e0       	ldi	r17, 0x00	; 0
    1ebe:	8d 2f       	mov	r24, r29
    1ec0:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <button_check>
    1ec4:	88 23       	and	r24, r24
    1ec6:	09 f4       	brne	.+2      	; 0x1eca <choose_character+0xf8>
    1ec8:	a8 cf       	rjmp	.-176    	; 0x1e1a <choose_character+0x48>
    1eca:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    1ece:	11 11       	cpse	r17, r1
    1ed0:	0c c0       	rjmp	.+24     	; 0x1eea <choose_character+0x118>
    1ed2:	45 e0       	ldi	r20, 0x05	; 5
    1ed4:	65 e9       	ldi	r22, 0x95	; 149
    1ed6:	71 e0       	ldi	r23, 0x01	; 1
    1ed8:	83 e0       	ldi	r24, 0x03	; 3
    1eda:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1ede:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    1ee2:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    1ee6:	10 82       	st	Z, r1
    1ee8:	0c c0       	rjmp	.+24     	; 0x1f02 <choose_character+0x130>
    1eea:	45 e0       	ldi	r20, 0x05	; 5
    1eec:	62 ea       	ldi	r22, 0xA2	; 162
    1eee:	71 e0       	ldi	r23, 0x01	; 1
    1ef0:	83 e0       	ldi	r24, 0x03	; 3
    1ef2:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1ef6:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    1efa:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    1efe:	81 e0       	ldi	r24, 0x01	; 1
    1f00:	80 83       	st	Z, r24
    1f02:	2f ef       	ldi	r18, 0xFF	; 255
    1f04:	8f e7       	ldi	r24, 0x7F	; 127
    1f06:	9a e0       	ldi	r25, 0x0A	; 10
    1f08:	21 50       	subi	r18, 0x01	; 1
    1f0a:	80 40       	sbci	r24, 0x00	; 0
    1f0c:	90 40       	sbci	r25, 0x00	; 0
    1f0e:	e1 f7       	brne	.-8      	; 0x1f08 <choose_character+0x136>
    1f10:	00 c0       	rjmp	.+0      	; 0x1f12 <choose_character+0x140>
    1f12:	00 c0       	rjmp	.+0      	; 0x1f14 <choose_character+0x142>
    1f14:	df 91       	pop	r29
    1f16:	cf 91       	pop	r28
    1f18:	1f 91       	pop	r17
    1f1a:	0f 91       	pop	r16
    1f1c:	ef 90       	pop	r14
    1f1e:	08 95       	ret

00001f20 <hiscore>:
    1f20:	ef 92       	push	r14
    1f22:	ff 92       	push	r15
    1f24:	0f 93       	push	r16
    1f26:	1f 93       	push	r17
    1f28:	cf 93       	push	r28
    1f2a:	df 93       	push	r29
    1f2c:	00 d0       	rcall	.+0      	; 0x1f2e <hiscore+0xe>
    1f2e:	00 d0       	rcall	.+0      	; 0x1f30 <hiscore+0x10>
    1f30:	00 d0       	rcall	.+0      	; 0x1f32 <hiscore+0x12>
    1f32:	cd b7       	in	r28, 0x3d	; 61
    1f34:	de b7       	in	r29, 0x3e	; 62
    1f36:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    1f3a:	8a e0       	ldi	r24, 0x0A	; 10
    1f3c:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1f40:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    1f44:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    1f48:	21 81       	ldd	r18, Z+1	; 0x01
    1f4a:	82 81       	ldd	r24, Z+2	; 0x02
    1f4c:	90 e0       	ldi	r25, 0x00	; 0
    1f4e:	98 2f       	mov	r25, r24
    1f50:	88 27       	eor	r24, r24
    1f52:	82 0f       	add	r24, r18
    1f54:	91 1d       	adc	r25, r1
    1f56:	9f 93       	push	r25
    1f58:	8f 93       	push	r24
    1f5a:	0f 2e       	mov	r0, r31
    1f5c:	fe ea       	ldi	r31, 0xAE	; 174
    1f5e:	ef 2e       	mov	r14, r31
    1f60:	f1 e0       	ldi	r31, 0x01	; 1
    1f62:	ff 2e       	mov	r15, r31
    1f64:	f0 2d       	mov	r31, r0
    1f66:	ff 92       	push	r15
    1f68:	ef 92       	push	r14
    1f6a:	8e 01       	movw	r16, r28
    1f6c:	0f 5f       	subi	r16, 0xFF	; 255
    1f6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f70:	1f 93       	push	r17
    1f72:	0f 93       	push	r16
    1f74:	0e 94 b7 1a 	call	0x356e	; 0x356e <sprintf>
    1f78:	45 e0       	ldi	r20, 0x05	; 5
    1f7a:	61 eb       	ldi	r22, 0xB1	; 177
    1f7c:	71 e0       	ldi	r23, 0x01	; 1
    1f7e:	81 e0       	ldi	r24, 0x01	; 1
    1f80:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1f84:	8a e0       	ldi	r24, 0x0A	; 10
    1f86:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1f8a:	45 e0       	ldi	r20, 0x05	; 5
    1f8c:	b8 01       	movw	r22, r16
    1f8e:	82 e0       	ldi	r24, 0x02	; 2
    1f90:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1f94:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    1f98:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    1f9c:	23 81       	ldd	r18, Z+3	; 0x03
    1f9e:	84 81       	ldd	r24, Z+4	; 0x04
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	98 2f       	mov	r25, r24
    1fa4:	88 27       	eor	r24, r24
    1fa6:	82 0f       	add	r24, r18
    1fa8:	91 1d       	adc	r25, r1
    1faa:	9f 93       	push	r25
    1fac:	8f 93       	push	r24
    1fae:	ff 92       	push	r15
    1fb0:	ef 92       	push	r14
    1fb2:	1f 93       	push	r17
    1fb4:	0f 93       	push	r16
    1fb6:	0e 94 b7 1a 	call	0x356e	; 0x356e <sprintf>
    1fba:	8a e0       	ldi	r24, 0x0A	; 10
    1fbc:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1fc0:	45 e0       	ldi	r20, 0x05	; 5
    1fc2:	63 ec       	ldi	r22, 0xC3	; 195
    1fc4:	71 e0       	ldi	r23, 0x01	; 1
    1fc6:	84 e0       	ldi	r24, 0x04	; 4
    1fc8:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1fcc:	8a e0       	ldi	r24, 0x0A	; 10
    1fce:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    1fd2:	45 e0       	ldi	r20, 0x05	; 5
    1fd4:	b8 01       	movw	r22, r16
    1fd6:	85 e0       	ldi	r24, 0x05	; 5
    1fd8:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    1fdc:	2f ef       	ldi	r18, 0xFF	; 255
    1fde:	8f e7       	ldi	r24, 0x7F	; 127
    1fe0:	96 e1       	ldi	r25, 0x16	; 22
    1fe2:	21 50       	subi	r18, 0x01	; 1
    1fe4:	80 40       	sbci	r24, 0x00	; 0
    1fe6:	90 40       	sbci	r25, 0x00	; 0
    1fe8:	e1 f7       	brne	.-8      	; 0x1fe2 <hiscore+0xc2>
    1fea:	00 c0       	rjmp	.+0      	; 0x1fec <hiscore+0xcc>
    1fec:	00 c0       	rjmp	.+0      	; 0x1fee <hiscore+0xce>
    1fee:	0f b6       	in	r0, 0x3f	; 63
    1ff0:	f8 94       	cli
    1ff2:	de bf       	out	0x3e, r29	; 62
    1ff4:	0f be       	out	0x3f, r0	; 63
    1ff6:	cd bf       	out	0x3d, r28	; 61
    1ff8:	26 96       	adiw	r28, 0x06	; 6
    1ffa:	0f b6       	in	r0, 0x3f	; 63
    1ffc:	f8 94       	cli
    1ffe:	de bf       	out	0x3e, r29	; 62
    2000:	0f be       	out	0x3f, r0	; 63
    2002:	cd bf       	out	0x3d, r28	; 61
    2004:	df 91       	pop	r29
    2006:	cf 91       	pop	r28
    2008:	1f 91       	pop	r17
    200a:	0f 91       	pop	r16
    200c:	ff 90       	pop	r15
    200e:	ef 90       	pop	r14
    2010:	08 95       	ret

00002012 <calibrate>:
    2012:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    2016:	80 e0       	ldi	r24, 0x00	; 0
    2018:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    201c:	8a e0       	ldi	r24, 0x0A	; 10
    201e:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2022:	45 e0       	ldi	r20, 0x05	; 5
    2024:	64 ed       	ldi	r22, 0xD4	; 212
    2026:	71 e0       	ldi	r23, 0x01	; 1
    2028:	80 e0       	ldi	r24, 0x00	; 0
    202a:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    202e:	45 e0       	ldi	r20, 0x05	; 5
    2030:	6b ee       	ldi	r22, 0xEB	; 235
    2032:	71 e0       	ldi	r23, 0x01	; 1
    2034:	83 e0       	ldi	r24, 0x03	; 3
    2036:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    203a:	2f ef       	ldi	r18, 0xFF	; 255
    203c:	8f e7       	ldi	r24, 0x7F	; 127
    203e:	96 e1       	ldi	r25, 0x16	; 22
    2040:	21 50       	subi	r18, 0x01	; 1
    2042:	80 40       	sbci	r24, 0x00	; 0
    2044:	90 40       	sbci	r25, 0x00	; 0
    2046:	e1 f7       	brne	.-8      	; 0x2040 <calibrate+0x2e>
    2048:	00 c0       	rjmp	.+0      	; 0x204a <calibrate+0x38>
    204a:	00 c0       	rjmp	.+0      	; 0x204c <calibrate+0x3a>
    204c:	48 e0       	ldi	r20, 0x08	; 8
    204e:	6f ec       	ldi	r22, 0xCF	; 207
    2050:	73 e0       	ldi	r23, 0x03	; 3
    2052:	84 e0       	ldi	r24, 0x04	; 4
    2054:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    2058:	2f ef       	ldi	r18, 0xFF	; 255
    205a:	8f e7       	ldi	r24, 0x7F	; 127
    205c:	96 e1       	ldi	r25, 0x16	; 22
    205e:	21 50       	subi	r18, 0x01	; 1
    2060:	80 40       	sbci	r24, 0x00	; 0
    2062:	90 40       	sbci	r25, 0x00	; 0
    2064:	e1 f7       	brne	.-8      	; 0x205e <calibrate+0x4c>
    2066:	00 c0       	rjmp	.+0      	; 0x2068 <calibrate+0x56>
    2068:	00 c0       	rjmp	.+0      	; 0x206a <calibrate+0x58>
    206a:	48 e0       	ldi	r20, 0x08	; 8
    206c:	66 ec       	ldi	r22, 0xC6	; 198
    206e:	73 e0       	ldi	r23, 0x03	; 3
    2070:	84 e0       	ldi	r24, 0x04	; 4
    2072:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    2076:	2f ef       	ldi	r18, 0xFF	; 255
    2078:	8f e7       	ldi	r24, 0x7F	; 127
    207a:	96 e1       	ldi	r25, 0x16	; 22
    207c:	21 50       	subi	r18, 0x01	; 1
    207e:	80 40       	sbci	r24, 0x00	; 0
    2080:	90 40       	sbci	r25, 0x00	; 0
    2082:	e1 f7       	brne	.-8      	; 0x207c <calibrate+0x6a>
    2084:	00 c0       	rjmp	.+0      	; 0x2086 <calibrate+0x74>
    2086:	00 c0       	rjmp	.+0      	; 0x2088 <calibrate+0x76>
    2088:	48 e0       	ldi	r20, 0x08	; 8
    208a:	6d eb       	ldi	r22, 0xBD	; 189
    208c:	73 e0       	ldi	r23, 0x03	; 3
    208e:	84 e0       	ldi	r24, 0x04	; 4
    2090:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    2094:	2f ef       	ldi	r18, 0xFF	; 255
    2096:	8f e7       	ldi	r24, 0x7F	; 127
    2098:	96 e1       	ldi	r25, 0x16	; 22
    209a:	21 50       	subi	r18, 0x01	; 1
    209c:	80 40       	sbci	r24, 0x00	; 0
    209e:	90 40       	sbci	r25, 0x00	; 0
    20a0:	e1 f7       	brne	.-8      	; 0x209a <calibrate+0x88>
    20a2:	00 c0       	rjmp	.+0      	; 0x20a4 <calibrate+0x92>
    20a4:	00 c0       	rjmp	.+0      	; 0x20a6 <calibrate+0x94>
    20a6:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <calc_offset>
    20aa:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    20ae:	80 e0       	ldi	r24, 0x00	; 0
    20b0:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    20b4:	8a e0       	ldi	r24, 0x0A	; 10
    20b6:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    20ba:	45 e0       	ldi	r20, 0x05	; 5
    20bc:	6b ef       	ldi	r22, 0xFB	; 251
    20be:	71 e0       	ldi	r23, 0x01	; 1
    20c0:	80 e0       	ldi	r24, 0x00	; 0
    20c2:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    20c6:	2f ef       	ldi	r18, 0xFF	; 255
    20c8:	8f e7       	ldi	r24, 0x7F	; 127
    20ca:	96 e1       	ldi	r25, 0x16	; 22
    20cc:	21 50       	subi	r18, 0x01	; 1
    20ce:	80 40       	sbci	r24, 0x00	; 0
    20d0:	90 40       	sbci	r25, 0x00	; 0
    20d2:	e1 f7       	brne	.-8      	; 0x20cc <calibrate+0xba>
    20d4:	00 c0       	rjmp	.+0      	; 0x20d6 <calibrate+0xc4>
    20d6:	00 c0       	rjmp	.+0      	; 0x20d8 <calibrate+0xc6>
    20d8:	08 95       	ret

000020da <play_game>:
    20da:	cf 92       	push	r12
    20dc:	df 92       	push	r13
    20de:	ef 92       	push	r14
    20e0:	ff 92       	push	r15
    20e2:	0f 93       	push	r16
    20e4:	1f 93       	push	r17
    20e6:	cf 93       	push	r28
    20e8:	df 93       	push	r29
    20ea:	00 d0       	rcall	.+0      	; 0x20ec <play_game+0x12>
    20ec:	00 d0       	rcall	.+0      	; 0x20ee <play_game+0x14>
    20ee:	00 d0       	rcall	.+0      	; 0x20f0 <play_game+0x16>
    20f0:	cd b7       	in	r28, 0x3d	; 61
    20f2:	de b7       	in	r29, 0x3e	; 62
    20f4:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    20f8:	88 e0       	ldi	r24, 0x08	; 8
    20fa:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    20fe:	45 e0       	ldi	r20, 0x05	; 5
    2100:	6f e0       	ldi	r22, 0x0F	; 15
    2102:	72 e0       	ldi	r23, 0x02	; 2
    2104:	80 e0       	ldi	r24, 0x00	; 0
    2106:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    210a:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <calc_offset>
    210e:	2f ef       	ldi	r18, 0xFF	; 255
    2110:	3f ef       	ldi	r19, 0xFF	; 255
    2112:	8e e0       	ldi	r24, 0x0E	; 14
    2114:	21 50       	subi	r18, 0x01	; 1
    2116:	30 40       	sbci	r19, 0x00	; 0
    2118:	80 40       	sbci	r24, 0x00	; 0
    211a:	e1 f7       	brne	.-8      	; 0x2114 <play_game+0x3a>
    211c:	00 c0       	rjmp	.+0      	; 0x211e <play_game+0x44>
    211e:	00 00       	nop
    2120:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    2124:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <send_game_start_can>
    2128:	10 e0       	ldi	r17, 0x00	; 0
    212a:	0f 2e       	mov	r0, r31
    212c:	f4 e6       	ldi	r31, 0x64	; 100
    212e:	cf 2e       	mov	r12, r31
    2130:	d1 2c       	mov	r13, r1
    2132:	f0 2d       	mov	r31, r0
    2134:	bf c0       	rjmp	.+382    	; 0x22b4 <play_game+0x1da>
    2136:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <send_stick_can>
    213a:	0e 94 4e 0c 	call	0x189c	; 0x189c <can_interrupted>
    213e:	88 23       	and	r24, r24
    2140:	09 f4       	brne	.+2      	; 0x2144 <play_game+0x6a>
    2142:	b8 c0       	rjmp	.+368    	; 0x22b4 <play_game+0x1da>
    2144:	80 e0       	ldi	r24, 0x00	; 0
    2146:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <receive_can_msg>
    214a:	7c 01       	movw	r14, r24
    214c:	dc 01       	movw	r26, r24
    214e:	8d 91       	ld	r24, X+
    2150:	9c 91       	ld	r25, X
    2152:	84 30       	cpi	r24, 0x04	; 4
    2154:	91 05       	cpc	r25, r1
    2156:	09 f4       	brne	.+2      	; 0x215a <play_game+0x80>
    2158:	7a c0       	rjmp	.+244    	; 0x224e <play_game+0x174>
    215a:	87 30       	cpi	r24, 0x07	; 7
    215c:	91 05       	cpc	r25, r1
    215e:	09 f4       	brne	.+2      	; 0x2162 <play_game+0x88>
    2160:	9f c0       	rjmp	.+318    	; 0x22a0 <play_game+0x1c6>
    2162:	01 97       	sbiw	r24, 0x01	; 1
    2164:	09 f0       	breq	.+2      	; 0x2168 <play_game+0x8e>
    2166:	a6 c0       	rjmp	.+332    	; 0x22b4 <play_game+0x1da>
    2168:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    216c:	8a e0       	ldi	r24, 0x0A	; 10
    216e:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2172:	45 e0       	ldi	r20, 0x05	; 5
    2174:	62 e2       	ldi	r22, 0x22	; 34
    2176:	72 e0       	ldi	r23, 0x02	; 2
    2178:	83 e0       	ldi	r24, 0x03	; 3
    217a:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    217e:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    2182:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    2186:	80 81       	ld	r24, Z
    2188:	81 11       	cpse	r24, r1
    218a:	16 c0       	rjmp	.+44     	; 0x21b8 <play_game+0xde>
    218c:	81 81       	ldd	r24, Z+1	; 0x01
    218e:	d7 01       	movw	r26, r14
    2190:	13 96       	adiw	r26, 0x03	; 3
    2192:	2c 91       	ld	r18, X
    2194:	13 97       	sbiw	r26, 0x03	; 3
    2196:	90 e0       	ldi	r25, 0x00	; 0
    2198:	42 2f       	mov	r20, r18
    219a:	02 2e       	mov	r0, r18
    219c:	00 0c       	add	r0, r0
    219e:	55 0b       	sbc	r21, r21
    21a0:	84 17       	cp	r24, r20
    21a2:	95 07       	cpc	r25, r21
    21a4:	ec f4       	brge	.+58     	; 0x21e0 <play_game+0x106>
    21a6:	21 83       	std	Z+1, r18	; 0x01
    21a8:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <sram>
    21ac:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <sram+0x1>
    21b0:	14 96       	adiw	r26, 0x04	; 4
    21b2:	8c 91       	ld	r24, X
    21b4:	82 83       	std	Z+2, r24	; 0x02
    21b6:	14 c0       	rjmp	.+40     	; 0x21e0 <play_game+0x106>
    21b8:	80 81       	ld	r24, Z
    21ba:	88 23       	and	r24, r24
    21bc:	89 f0       	breq	.+34     	; 0x21e0 <play_game+0x106>
    21be:	83 81       	ldd	r24, Z+3	; 0x03
    21c0:	d7 01       	movw	r26, r14
    21c2:	13 96       	adiw	r26, 0x03	; 3
    21c4:	2c 91       	ld	r18, X
    21c6:	13 97       	sbiw	r26, 0x03	; 3
    21c8:	90 e0       	ldi	r25, 0x00	; 0
    21ca:	42 2f       	mov	r20, r18
    21cc:	02 2e       	mov	r0, r18
    21ce:	00 0c       	add	r0, r0
    21d0:	55 0b       	sbc	r21, r21
    21d2:	84 17       	cp	r24, r20
    21d4:	95 07       	cpc	r25, r21
    21d6:	24 f4       	brge	.+8      	; 0x21e0 <play_game+0x106>
    21d8:	23 83       	std	Z+3, r18	; 0x03
    21da:	14 96       	adiw	r26, 0x04	; 4
    21dc:	8c 91       	ld	r24, X
    21de:	84 83       	std	Z+4, r24	; 0x04
    21e0:	f7 01       	movw	r30, r14
    21e2:	84 81       	ldd	r24, Z+4	; 0x04
    21e4:	08 2e       	mov	r0, r24
    21e6:	00 0c       	add	r0, r0
    21e8:	99 0b       	sbc	r25, r25
    21ea:	98 2f       	mov	r25, r24
    21ec:	88 27       	eor	r24, r24
    21ee:	23 81       	ldd	r18, Z+3	; 0x03
    21f0:	82 0f       	add	r24, r18
    21f2:	91 1d       	adc	r25, r1
    21f4:	27 fd       	sbrc	r18, 7
    21f6:	9a 95       	dec	r25
    21f8:	9f 93       	push	r25
    21fa:	8f 93       	push	r24
    21fc:	8e ea       	ldi	r24, 0xAE	; 174
    21fe:	91 e0       	ldi	r25, 0x01	; 1
    2200:	9f 93       	push	r25
    2202:	8f 93       	push	r24
    2204:	8e 01       	movw	r16, r28
    2206:	0f 5f       	subi	r16, 0xFF	; 255
    2208:	1f 4f       	sbci	r17, 0xFF	; 255
    220a:	1f 93       	push	r17
    220c:	0f 93       	push	r16
    220e:	0e 94 b7 1a 	call	0x356e	; 0x356e <sprintf>
    2212:	8a e0       	ldi	r24, 0x0A	; 10
    2214:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2218:	45 e0       	ldi	r20, 0x05	; 5
    221a:	6d e2       	ldi	r22, 0x2D	; 45
    221c:	72 e0       	ldi	r23, 0x02	; 2
    221e:	84 e0       	ldi	r24, 0x04	; 4
    2220:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    2224:	48 e0       	ldi	r20, 0x08	; 8
    2226:	b8 01       	movw	r22, r16
    2228:	85 e0       	ldi	r24, 0x05	; 5
    222a:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    222e:	ff ef       	ldi	r31, 0xFF	; 255
    2230:	2f e7       	ldi	r18, 0x7F	; 127
    2232:	34 e3       	ldi	r19, 0x34	; 52
    2234:	f1 50       	subi	r31, 0x01	; 1
    2236:	20 40       	sbci	r18, 0x00	; 0
    2238:	30 40       	sbci	r19, 0x00	; 0
    223a:	e1 f7       	brne	.-8      	; 0x2234 <play_game+0x15a>
    223c:	00 c0       	rjmp	.+0      	; 0x223e <play_game+0x164>
    223e:	00 00       	nop
    2240:	0f 90       	pop	r0
    2242:	0f 90       	pop	r0
    2244:	0f 90       	pop	r0
    2246:	0f 90       	pop	r0
    2248:	0f 90       	pop	r0
    224a:	0f 90       	pop	r0
    224c:	39 c0       	rjmp	.+114    	; 0x22c0 <play_game+0x1e6>
    224e:	88 e0       	ldi	r24, 0x08	; 8
    2250:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    2254:	05 e0       	ldi	r16, 0x05	; 5
    2256:	01 0f       	add	r16, r17
    2258:	81 2f       	mov	r24, r17
    225a:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    225e:	80 e0       	ldi	r24, 0x00	; 0
    2260:	0e 94 b6 15 	call	0x2b6c	; 0x2b6c <oled_write_data>
    2264:	1f 5f       	subi	r17, 0xFF	; 255
    2266:	01 13       	cpse	r16, r17
    2268:	f7 cf       	rjmp	.-18     	; 0x2258 <play_game+0x17e>
    226a:	d7 01       	movw	r26, r14
    226c:	13 96       	adiw	r26, 0x03	; 3
    226e:	2c 91       	ld	r18, X
    2270:	38 e7       	ldi	r19, 0x78	; 120
    2272:	23 03       	mulsu	r18, r19
    2274:	c0 01       	movw	r24, r0
    2276:	11 24       	eor	r1, r1
    2278:	b6 01       	movw	r22, r12
    227a:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    227e:	16 2f       	mov	r17, r22
    2280:	0f 2e       	mov	r0, r31
    2282:	f5 e0       	ldi	r31, 0x05	; 5
    2284:	ff 2e       	mov	r15, r31
    2286:	f0 2d       	mov	r31, r0
    2288:	f6 0e       	add	r15, r22
    228a:	06 2f       	mov	r16, r22
    228c:	80 2f       	mov	r24, r16
    228e:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2292:	80 ef       	ldi	r24, 0xF0	; 240
    2294:	0e 94 b6 15 	call	0x2b6c	; 0x2b6c <oled_write_data>
    2298:	0f 5f       	subi	r16, 0xFF	; 255
    229a:	0f 11       	cpse	r16, r15
    229c:	f7 cf       	rjmp	.-18     	; 0x228c <play_game+0x1b2>
    229e:	0a c0       	rjmp	.+20     	; 0x22b4 <play_game+0x1da>
    22a0:	d7 01       	movw	r26, r14
    22a2:	13 96       	adiw	r26, 0x03	; 3
    22a4:	6c 91       	ld	r22, X
    22a6:	06 2e       	mov	r0, r22
    22a8:	00 0c       	add	r0, r0
    22aa:	77 0b       	sbc	r23, r23
    22ac:	45 e0       	ldi	r20, 0x05	; 5
    22ae:	88 e0       	ldi	r24, 0x08	; 8
    22b0:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    22b4:	85 9b       	sbis	0x10, 5	; 16
    22b6:	3f cf       	rjmp	.-386    	; 0x2136 <play_game+0x5c>
    22b8:	e0 e0       	ldi	r30, 0x00	; 0
    22ba:	f0 ef       	ldi	r31, 0xF0	; 240
    22bc:	31 97       	sbiw	r30, 0x01	; 1
    22be:	f1 f7       	brne	.-4      	; 0x22bc <play_game+0x1e2>
    22c0:	26 96       	adiw	r28, 0x06	; 6
    22c2:	0f b6       	in	r0, 0x3f	; 63
    22c4:	f8 94       	cli
    22c6:	de bf       	out	0x3e, r29	; 62
    22c8:	0f be       	out	0x3f, r0	; 63
    22ca:	cd bf       	out	0x3d, r28	; 61
    22cc:	df 91       	pop	r29
    22ce:	cf 91       	pop	r28
    22d0:	1f 91       	pop	r17
    22d2:	0f 91       	pop	r16
    22d4:	ff 90       	pop	r15
    22d6:	ef 90       	pop	r14
    22d8:	df 90       	pop	r13
    22da:	cf 90       	pop	r12
    22dc:	08 95       	ret

000022de <set_easy>:
    22de:	81 e0       	ldi	r24, 0x01	; 1
    22e0:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <send_difficulty_can>
    22e4:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    22e8:	80 e0       	ldi	r24, 0x00	; 0
    22ea:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    22ee:	81 e0       	ldi	r24, 0x01	; 1
    22f0:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    22f4:	45 e0       	ldi	r20, 0x05	; 5
    22f6:	69 e3       	ldi	r22, 0x39	; 57
    22f8:	72 e0       	ldi	r23, 0x02	; 2
    22fa:	80 e0       	ldi	r24, 0x00	; 0
    22fc:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    2300:	2f ef       	ldi	r18, 0xFF	; 255
    2302:	8f e7       	ldi	r24, 0x7F	; 127
    2304:	96 e1       	ldi	r25, 0x16	; 22
    2306:	21 50       	subi	r18, 0x01	; 1
    2308:	80 40       	sbci	r24, 0x00	; 0
    230a:	90 40       	sbci	r25, 0x00	; 0
    230c:	e1 f7       	brne	.-8      	; 0x2306 <set_easy+0x28>
    230e:	00 c0       	rjmp	.+0      	; 0x2310 <set_easy+0x32>
    2310:	00 c0       	rjmp	.+0      	; 0x2312 <set_easy+0x34>
    2312:	08 95       	ret

00002314 <set_medium>:
    2314:	82 e0       	ldi	r24, 0x02	; 2
    2316:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <send_difficulty_can>
    231a:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    231e:	80 e0       	ldi	r24, 0x00	; 0
    2320:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    2324:	81 e0       	ldi	r24, 0x01	; 1
    2326:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    232a:	45 e0       	ldi	r20, 0x05	; 5
    232c:	60 e5       	ldi	r22, 0x50	; 80
    232e:	72 e0       	ldi	r23, 0x02	; 2
    2330:	80 e0       	ldi	r24, 0x00	; 0
    2332:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    2336:	2f ef       	ldi	r18, 0xFF	; 255
    2338:	8f e7       	ldi	r24, 0x7F	; 127
    233a:	96 e1       	ldi	r25, 0x16	; 22
    233c:	21 50       	subi	r18, 0x01	; 1
    233e:	80 40       	sbci	r24, 0x00	; 0
    2340:	90 40       	sbci	r25, 0x00	; 0
    2342:	e1 f7       	brne	.-8      	; 0x233c <set_medium+0x28>
    2344:	00 c0       	rjmp	.+0      	; 0x2346 <set_medium+0x32>
    2346:	00 c0       	rjmp	.+0      	; 0x2348 <set_medium+0x34>
    2348:	08 95       	ret

0000234a <set_hard>:
    234a:	83 e0       	ldi	r24, 0x03	; 3
    234c:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <send_difficulty_can>
    2350:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    2354:	80 e0       	ldi	r24, 0x00	; 0
    2356:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    235a:	81 e0       	ldi	r24, 0x01	; 1
    235c:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2360:	45 e0       	ldi	r20, 0x05	; 5
    2362:	69 e6       	ldi	r22, 0x69	; 105
    2364:	72 e0       	ldi	r23, 0x02	; 2
    2366:	80 e0       	ldi	r24, 0x00	; 0
    2368:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    236c:	2f ef       	ldi	r18, 0xFF	; 255
    236e:	8f e7       	ldi	r24, 0x7F	; 127
    2370:	96 e1       	ldi	r25, 0x16	; 22
    2372:	21 50       	subi	r18, 0x01	; 1
    2374:	80 40       	sbci	r24, 0x00	; 0
    2376:	90 40       	sbci	r25, 0x00	; 0
    2378:	e1 f7       	brne	.-8      	; 0x2372 <set_hard+0x28>
    237a:	00 c0       	rjmp	.+0      	; 0x237c <set_hard+0x32>
    237c:	00 c0       	rjmp	.+0      	; 0x237e <set_hard+0x34>
    237e:	08 95       	ret

00002380 <reaction_test>:
    2380:	af 92       	push	r10
    2382:	bf 92       	push	r11
    2384:	cf 92       	push	r12
    2386:	df 92       	push	r13
    2388:	ef 92       	push	r14
    238a:	ff 92       	push	r15
    238c:	0f 93       	push	r16
    238e:	1f 93       	push	r17
    2390:	cf 93       	push	r28
    2392:	df 93       	push	r29
    2394:	00 d0       	rcall	.+0      	; 0x2396 <reaction_test+0x16>
    2396:	00 d0       	rcall	.+0      	; 0x2398 <reaction_test+0x18>
    2398:	00 d0       	rcall	.+0      	; 0x239a <reaction_test+0x1a>
    239a:	cd b7       	in	r28, 0x3d	; 61
    239c:	de b7       	in	r29, 0x3e	; 62
    239e:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    23a2:	8a e0       	ldi	r24, 0x0A	; 10
    23a4:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    23a8:	45 e0       	ldi	r20, 0x05	; 5
    23aa:	60 e8       	ldi	r22, 0x80	; 128
    23ac:	72 e0       	ldi	r23, 0x02	; 2
    23ae:	80 e0       	ldi	r24, 0x00	; 0
    23b0:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    23b4:	8a e0       	ldi	r24, 0x0A	; 10
    23b6:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    23ba:	45 e0       	ldi	r20, 0x05	; 5
    23bc:	63 e9       	ldi	r22, 0x93	; 147
    23be:	72 e0       	ldi	r23, 0x02	; 2
    23c0:	81 e0       	ldi	r24, 0x01	; 1
    23c2:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    23c6:	8a e0       	ldi	r24, 0x0A	; 10
    23c8:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    23cc:	45 e0       	ldi	r20, 0x05	; 5
    23ce:	6f e9       	ldi	r22, 0x9F	; 159
    23d0:	72 e0       	ldi	r23, 0x02	; 2
    23d2:	82 e0       	ldi	r24, 0x02	; 2
    23d4:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    23d8:	8a e0       	ldi	r24, 0x0A	; 10
    23da:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    23de:	45 e0       	ldi	r20, 0x05	; 5
    23e0:	63 eb       	ldi	r22, 0xB3	; 179
    23e2:	72 e0       	ldi	r23, 0x02	; 2
    23e4:	83 e0       	ldi	r24, 0x03	; 3
    23e6:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    23ea:	2f ef       	ldi	r18, 0xFF	; 255
    23ec:	8f e7       	ldi	r24, 0x7F	; 127
    23ee:	95 e2       	ldi	r25, 0x25	; 37
    23f0:	21 50       	subi	r18, 0x01	; 1
    23f2:	80 40       	sbci	r24, 0x00	; 0
    23f4:	90 40       	sbci	r25, 0x00	; 0
    23f6:	e1 f7       	brne	.-8      	; 0x23f0 <reaction_test+0x70>
    23f8:	00 c0       	rjmp	.+0      	; 0x23fa <reaction_test+0x7a>
    23fa:	00 00       	nop
    23fc:	c1 2c       	mov	r12, r1
    23fe:	b1 2c       	mov	r11, r1
    2400:	0f 2e       	mov	r0, r31
    2402:	fd e3       	ldi	r31, 0x3D	; 61
    2404:	ef 2e       	mov	r14, r31
    2406:	f1 2c       	mov	r15, r1
    2408:	f0 2d       	mov	r31, r0
    240a:	68 94       	set
    240c:	aa 24       	eor	r10, r10
    240e:	a1 f8       	bld	r10, 1
    2410:	dd 24       	eor	r13, r13
    2412:	d3 94       	inc	r13
    2414:	53 c0       	rjmp	.+166    	; 0x24bc <reaction_test+0x13c>
    2416:	ef ef       	ldi	r30, 0xFF	; 255
    2418:	ff e7       	ldi	r31, 0x7F	; 127
    241a:	21 e0       	ldi	r18, 0x01	; 1
    241c:	e1 50       	subi	r30, 0x01	; 1
    241e:	f0 40       	sbci	r31, 0x00	; 0
    2420:	20 40       	sbci	r18, 0x00	; 0
    2422:	e1 f7       	brne	.-8      	; 0x241c <reaction_test+0x9c>
    2424:	00 c0       	rjmp	.+0      	; 0x2426 <reaction_test+0xa6>
    2426:	00 c0       	rjmp	.+0      	; 0x2428 <reaction_test+0xa8>
    2428:	0e 94 46 1a 	call	0x348c	; 0x348c <rand>
    242c:	b7 01       	movw	r22, r14
    242e:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2432:	18 2f       	mov	r17, r24
    2434:	89 50       	subi	r24, 0x09	; 9
    2436:	82 30       	cpi	r24, 0x02	; 2
    2438:	08 f0       	brcs	.+2      	; 0x243c <reaction_test+0xbc>
    243a:	40 c0       	rjmp	.+128    	; 0x24bc <reaction_test+0x13c>
    243c:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <send_reaction_start_can>
    2440:	81 2f       	mov	r24, r17
    2442:	81 70       	andi	r24, 0x01	; 1
    2444:	c8 2e       	mov	r12, r24
    2446:	10 fd       	sbrc	r17, 0
    2448:	15 c0       	rjmp	.+42     	; 0x2474 <reaction_test+0xf4>
    244a:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    244e:	0c 2d       	mov	r16, r12
    2450:	0f c0       	rjmp	.+30     	; 0x2470 <reaction_test+0xf0>
    2452:	81 2f       	mov	r24, r17
    2454:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2458:	80 2f       	mov	r24, r16
    245a:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    245e:	8f ef       	ldi	r24, 0xFF	; 255
    2460:	0e 94 b6 15 	call	0x2b6c	; 0x2b6c <oled_write_data>
    2464:	1f 5f       	subi	r17, 0xFF	; 255
    2466:	10 34       	cpi	r17, 0x40	; 64
    2468:	a1 f7       	brne	.-24     	; 0x2452 <reaction_test+0xd2>
    246a:	0f 5f       	subi	r16, 0xFF	; 255
    246c:	08 30       	cpi	r16, 0x08	; 8
    246e:	b1 f0       	breq	.+44     	; 0x249c <reaction_test+0x11c>
    2470:	1c 2d       	mov	r17, r12
    2472:	ef cf       	rjmp	.-34     	; 0x2452 <reaction_test+0xd2>
    2474:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    2478:	0f c0       	rjmp	.+30     	; 0x2498 <reaction_test+0x118>
    247a:	81 2f       	mov	r24, r17
    247c:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2480:	80 2f       	mov	r24, r16
    2482:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    2486:	8f ef       	ldi	r24, 0xFF	; 255
    2488:	0e 94 b6 15 	call	0x2b6c	; 0x2b6c <oled_write_data>
    248c:	1f 5f       	subi	r17, 0xFF	; 255
    248e:	10 38       	cpi	r17, 0x80	; 128
    2490:	a1 f7       	brne	.-24     	; 0x247a <reaction_test+0xfa>
    2492:	0f 5f       	subi	r16, 0xFF	; 255
    2494:	08 30       	cpi	r16, 0x08	; 8
    2496:	21 f0       	breq	.+8      	; 0x24a0 <reaction_test+0x120>
    2498:	10 e4       	ldi	r17, 0x40	; 64
    249a:	ef cf       	rjmp	.-34     	; 0x247a <reaction_test+0xfa>
    249c:	cd 2c       	mov	r12, r13
    249e:	01 c0       	rjmp	.+2      	; 0x24a2 <reaction_test+0x122>
    24a0:	ca 2c       	mov	r12, r10
    24a2:	80 b3       	in	r24, 0x10	; 16
    24a4:	80 71       	andi	r24, 0x10	; 16
    24a6:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <button_check>
    24aa:	81 11       	cpse	r24, r1
    24ac:	06 c0       	rjmp	.+12     	; 0x24ba <reaction_test+0x13a>
    24ae:	80 b3       	in	r24, 0x10	; 16
    24b0:	80 72       	andi	r24, 0x20	; 32
    24b2:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <button_check>
    24b6:	88 23       	and	r24, r24
    24b8:	a1 f3       	breq	.-24     	; 0x24a2 <reaction_test+0x122>
    24ba:	bd 2c       	mov	r11, r13
    24bc:	80 b3       	in	r24, 0x10	; 16
    24be:	80 71       	andi	r24, 0x10	; 16
    24c0:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <button_check>
    24c4:	81 11       	cpse	r24, r1
    24c6:	08 c0       	rjmp	.+16     	; 0x24d8 <reaction_test+0x158>
    24c8:	80 b3       	in	r24, 0x10	; 16
    24ca:	80 72       	andi	r24, 0x20	; 32
    24cc:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <button_check>
    24d0:	08 2f       	mov	r16, r24
    24d2:	88 23       	and	r24, r24
    24d4:	09 f4       	brne	.+2      	; 0x24d8 <reaction_test+0x158>
    24d6:	9f cf       	rjmp	.-194    	; 0x2416 <reaction_test+0x96>
    24d8:	b1 10       	cpse	r11, r1
    24da:	15 c0       	rjmp	.+42     	; 0x2506 <reaction_test+0x186>
    24dc:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    24e0:	8a e0       	ldi	r24, 0x0A	; 10
    24e2:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    24e6:	45 e0       	ldi	r20, 0x05	; 5
    24e8:	60 ec       	ldi	r22, 0xC0	; 192
    24ea:	72 e0       	ldi	r23, 0x02	; 2
    24ec:	80 e0       	ldi	r24, 0x00	; 0
    24ee:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    24f2:	9f ef       	ldi	r25, 0xFF	; 255
    24f4:	ef e7       	ldi	r30, 0x7F	; 127
    24f6:	f6 e1       	ldi	r31, 0x16	; 22
    24f8:	91 50       	subi	r25, 0x01	; 1
    24fa:	e0 40       	sbci	r30, 0x00	; 0
    24fc:	f0 40       	sbci	r31, 0x00	; 0
    24fe:	e1 f7       	brne	.-8      	; 0x24f8 <reaction_test+0x178>
    2500:	00 c0       	rjmp	.+0      	; 0x2502 <reaction_test+0x182>
    2502:	00 c0       	rjmp	.+0      	; 0x2504 <reaction_test+0x184>
    2504:	74 c0       	rjmp	.+232    	; 0x25ee <reaction_test+0x26e>
    2506:	21 e0       	ldi	r18, 0x01	; 1
    2508:	c2 12       	cpse	r12, r18
    250a:	03 c0       	rjmp	.+6      	; 0x2512 <reaction_test+0x192>
    250c:	84 99       	sbic	0x10, 4	; 16
    250e:	06 c0       	rjmp	.+12     	; 0x251c <reaction_test+0x19c>
    2510:	5a c0       	rjmp	.+180    	; 0x25c6 <reaction_test+0x246>
    2512:	82 e0       	ldi	r24, 0x02	; 2
    2514:	c8 12       	cpse	r12, r24
    2516:	57 c0       	rjmp	.+174    	; 0x25c6 <reaction_test+0x246>
    2518:	85 9b       	sbis	0x10, 5	; 16
    251a:	55 c0       	rjmp	.+170    	; 0x25c6 <reaction_test+0x246>
    251c:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    2520:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <send_reaction_stop_can>
    2524:	e0 e0       	ldi	r30, 0x00	; 0
    2526:	f0 ef       	ldi	r31, 0xF0	; 240
    2528:	31 97       	sbiw	r30, 0x01	; 1
    252a:	f1 f7       	brne	.-4      	; 0x2528 <reaction_test+0x1a8>
    252c:	80 e0       	ldi	r24, 0x00	; 0
    252e:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <receive_can_msg>
    2532:	fc 01       	movw	r30, r24
    2534:	20 81       	ld	r18, Z
    2536:	22 30       	cpi	r18, 0x02	; 2
    2538:	99 f7       	brne	.-26     	; 0x2520 <reaction_test+0x1a0>
    253a:	04 81       	ldd	r16, Z+4	; 0x04
    253c:	00 2e       	mov	r0, r16
    253e:	00 0c       	add	r0, r0
    2540:	11 0b       	sbc	r17, r17
    2542:	10 2f       	mov	r17, r16
    2544:	00 27       	eor	r16, r16
    2546:	83 81       	ldd	r24, Z+3	; 0x03
    2548:	08 0f       	add	r16, r24
    254a:	11 1d       	adc	r17, r1
    254c:	87 fd       	sbrc	r24, 7
    254e:	1a 95       	dec	r17
    2550:	1f 93       	push	r17
    2552:	0f 93       	push	r16
    2554:	81 ed       	ldi	r24, 0xD1	; 209
    2556:	92 e0       	ldi	r25, 0x02	; 2
    2558:	9f 93       	push	r25
    255a:	8f 93       	push	r24
    255c:	0e 94 a1 1a 	call	0x3542	; 0x3542 <printf>
    2560:	8a e0       	ldi	r24, 0x0A	; 10
    2562:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2566:	45 e0       	ldi	r20, 0x05	; 5
    2568:	6d ed       	ldi	r22, 0xDD	; 221
    256a:	72 e0       	ldi	r23, 0x02	; 2
    256c:	81 e0       	ldi	r24, 0x01	; 1
    256e:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    2572:	8a e0       	ldi	r24, 0x0A	; 10
    2574:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2578:	1f 93       	push	r17
    257a:	0f 93       	push	r16
    257c:	8e ea       	ldi	r24, 0xAE	; 174
    257e:	91 e0       	ldi	r25, 0x01	; 1
    2580:	9f 93       	push	r25
    2582:	8f 93       	push	r24
    2584:	8e 01       	movw	r16, r28
    2586:	0f 5f       	subi	r16, 0xFF	; 255
    2588:	1f 4f       	sbci	r17, 0xFF	; 255
    258a:	1f 93       	push	r17
    258c:	0f 93       	push	r16
    258e:	0e 94 b7 1a 	call	0x356e	; 0x356e <sprintf>
    2592:	45 e0       	ldi	r20, 0x05	; 5
    2594:	b8 01       	movw	r22, r16
    2596:	82 e0       	ldi	r24, 0x02	; 2
    2598:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    259c:	45 e0       	ldi	r20, 0x05	; 5
    259e:	60 ef       	ldi	r22, 0xF0	; 240
    25a0:	72 e0       	ldi	r23, 0x02	; 2
    25a2:	83 e0       	ldi	r24, 0x03	; 3
    25a4:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    25a8:	ff ef       	ldi	r31, 0xFF	; 255
    25aa:	2f e7       	ldi	r18, 0x7F	; 127
    25ac:	85 e2       	ldi	r24, 0x25	; 37
    25ae:	f1 50       	subi	r31, 0x01	; 1
    25b0:	20 40       	sbci	r18, 0x00	; 0
    25b2:	80 40       	sbci	r24, 0x00	; 0
    25b4:	e1 f7       	brne	.-8      	; 0x25ae <reaction_test+0x22e>
    25b6:	00 c0       	rjmp	.+0      	; 0x25b8 <reaction_test+0x238>
    25b8:	00 00       	nop
    25ba:	0f b6       	in	r0, 0x3f	; 63
    25bc:	f8 94       	cli
    25be:	de bf       	out	0x3e, r29	; 62
    25c0:	0f be       	out	0x3f, r0	; 63
    25c2:	cd bf       	out	0x3d, r28	; 61
    25c4:	14 c0       	rjmp	.+40     	; 0x25ee <reaction_test+0x26e>
    25c6:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
    25ca:	8a e0       	ldi	r24, 0x0A	; 10
    25cc:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    25d0:	45 e0       	ldi	r20, 0x05	; 5
    25d2:	6e ef       	ldi	r22, 0xFE	; 254
    25d4:	72 e0       	ldi	r23, 0x02	; 2
    25d6:	80 e0       	ldi	r24, 0x00	; 0
    25d8:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    25dc:	ff ef       	ldi	r31, 0xFF	; 255
    25de:	2f e7       	ldi	r18, 0x7F	; 127
    25e0:	86 e1       	ldi	r24, 0x16	; 22
    25e2:	f1 50       	subi	r31, 0x01	; 1
    25e4:	20 40       	sbci	r18, 0x00	; 0
    25e6:	80 40       	sbci	r24, 0x00	; 0
    25e8:	e1 f7       	brne	.-8      	; 0x25e2 <reaction_test+0x262>
    25ea:	00 c0       	rjmp	.+0      	; 0x25ec <reaction_test+0x26c>
    25ec:	00 c0       	rjmp	.+0      	; 0x25ee <reaction_test+0x26e>
    25ee:	26 96       	adiw	r28, 0x06	; 6
    25f0:	0f b6       	in	r0, 0x3f	; 63
    25f2:	f8 94       	cli
    25f4:	de bf       	out	0x3e, r29	; 62
    25f6:	0f be       	out	0x3f, r0	; 63
    25f8:	cd bf       	out	0x3d, r28	; 61
    25fa:	df 91       	pop	r29
    25fc:	cf 91       	pop	r28
    25fe:	1f 91       	pop	r17
    2600:	0f 91       	pop	r16
    2602:	ff 90       	pop	r15
    2604:	ef 90       	pop	r14
    2606:	df 90       	pop	r13
    2608:	cf 90       	pop	r12
    260a:	bf 90       	pop	r11
    260c:	af 90       	pop	r10
    260e:	08 95       	ret

00002610 <new_menu>:
    2610:	cf 93       	push	r28
    2612:	df 93       	push	r29
    2614:	ec 01       	movw	r28, r24
    2616:	81 e3       	ldi	r24, 0x31	; 49
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <malloc>
    261e:	aa e0       	ldi	r26, 0x0A	; 10
    2620:	b1 e0       	ldi	r27, 0x01	; 1
    2622:	fc 01       	movw	r30, r24
    2624:	4a e1       	ldi	r20, 0x1A	; 26
    2626:	51 e0       	ldi	r21, 0x01	; 1
    2628:	11 8a       	std	Z+17, r1	; 0x11
    262a:	10 8a       	std	Z+16, r1	; 0x10
    262c:	11 a2       	std	Z+33, r1	; 0x21
    262e:	10 a2       	std	Z+32, r1	; 0x20
    2630:	2d 91       	ld	r18, X+
    2632:	3d 91       	ld	r19, X+
    2634:	21 93       	st	Z+, r18
    2636:	31 93       	st	Z+, r19
    2638:	a4 17       	cp	r26, r20
    263a:	b5 07       	cpc	r27, r21
    263c:	a9 f7       	brne	.-22     	; 0x2628 <new_menu+0x18>
    263e:	fc 01       	movw	r30, r24
    2640:	10 aa       	std	Z+48, r1	; 0x30
    2642:	d7 8f       	std	Z+31, r29	; 0x1f
    2644:	c6 8f       	std	Z+30, r28	; 0x1e
    2646:	df 91       	pop	r29
    2648:	cf 91       	pop	r28
    264a:	08 95       	ret

0000264c <invert_selected>:
    264c:	cf 93       	push	r28
    264e:	df 93       	push	r29
    2650:	ec 01       	movw	r28, r24
    2652:	80 e0       	ldi	r24, 0x00	; 0
    2654:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2658:	45 e0       	ldi	r20, 0x05	; 5
    265a:	63 e1       	ldi	r22, 0x13	; 19
    265c:	73 e0       	ldi	r23, 0x03	; 3
    265e:	88 a9       	ldd	r24, Y+48	; 0x30
    2660:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    2664:	88 e0       	ldi	r24, 0x08	; 8
    2666:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    266a:	88 a9       	ldd	r24, Y+48	; 0x30
    266c:	e8 2f       	mov	r30, r24
    266e:	f0 e0       	ldi	r31, 0x00	; 0
    2670:	ee 0f       	add	r30, r30
    2672:	ff 1f       	adc	r31, r31
    2674:	ec 0f       	add	r30, r28
    2676:	fd 1f       	adc	r31, r29
    2678:	60 81       	ld	r22, Z
    267a:	71 81       	ldd	r23, Z+1	; 0x01
    267c:	45 e0       	ldi	r20, 0x05	; 5
    267e:	0e 94 23 17 	call	0x2e46	; 0x2e46 <oled_write_string_inverted>
    2682:	df 91       	pop	r29
    2684:	cf 91       	pop	r28
    2686:	08 95       	ret

00002688 <write_menu_to_screen>:
    2688:	ff 92       	push	r15
    268a:	0f 93       	push	r16
    268c:	1f 93       	push	r17
    268e:	cf 93       	push	r28
    2690:	df 93       	push	r29
    2692:	f8 2e       	mov	r15, r24
    2694:	d9 2f       	mov	r29, r25
    2696:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <clear_oled_new>
    269a:	0f 2d       	mov	r16, r15
    269c:	1d 2f       	mov	r17, r29
    269e:	c0 e0       	ldi	r28, 0x00	; 0
    26a0:	82 e0       	ldi	r24, 0x02	; 2
    26a2:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    26a6:	f8 01       	movw	r30, r16
    26a8:	61 91       	ld	r22, Z+
    26aa:	71 91       	ld	r23, Z+
    26ac:	8f 01       	movw	r16, r30
    26ae:	45 e0       	ldi	r20, 0x05	; 5
    26b0:	8c 2f       	mov	r24, r28
    26b2:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <oled_write_string>
    26b6:	cf 5f       	subi	r28, 0xFF	; 255
    26b8:	c8 30       	cpi	r28, 0x08	; 8
    26ba:	91 f7       	brne	.-28     	; 0x26a0 <write_menu_to_screen+0x18>
    26bc:	8f 2d       	mov	r24, r15
    26be:	9d 2f       	mov	r25, r29
    26c0:	0e 94 26 13 	call	0x264c	; 0x264c <invert_selected>
    26c4:	df 91       	pop	r29
    26c6:	cf 91       	pop	r28
    26c8:	1f 91       	pop	r17
    26ca:	0f 91       	pop	r16
    26cc:	ff 90       	pop	r15
    26ce:	08 95       	ret

000026d0 <change_selected>:
	oled_write_string((menuPointer->selected), "  ", 5);
	go_to_column(8);
	oled_write_string_inverted((menuPointer->selected), menuPointer->labels[(menuPointer->selected)], 5);
}

void change_selected(menu** menuHead, DIRECTION d){
    26d0:	cf 93       	push	r28
    26d2:	df 93       	push	r29
    26d4:	dc 01       	movw	r26, r24
	if(d == UP){
    26d6:	62 30       	cpi	r22, 0x02	; 2
    26d8:	39 f5       	brne	.+78     	; 0x2728 <change_selected+0x58>
		((*(menuHead))->selected)--;
    26da:	ed 91       	ld	r30, X+
    26dc:	fc 91       	ld	r31, X
    26de:	11 97       	sbiw	r26, 0x01	; 1
    26e0:	80 a9       	ldd	r24, Z+48	; 0x30
    26e2:	81 50       	subi	r24, 0x01	; 1
    26e4:	80 ab       	std	Z+48, r24	; 0x30
		while(((*(menuHead))->labels[((*(menuHead))->selected)]) == ""){
    26e6:	cd 91       	ld	r28, X+
    26e8:	dc 91       	ld	r29, X
    26ea:	11 97       	sbiw	r26, 0x01	; 1
    26ec:	98 a9       	ldd	r25, Y+48	; 0x30
    26ee:	e9 2f       	mov	r30, r25
    26f0:	f0 e0       	ldi	r31, 0x00	; 0
    26f2:	ee 0f       	add	r30, r30
    26f4:	ff 1f       	adc	r31, r31
    26f6:	ec 0f       	add	r30, r28
    26f8:	fd 1f       	adc	r31, r29
    26fa:	20 81       	ld	r18, Z
    26fc:	31 81       	ldd	r19, Z+1	; 0x01
    26fe:	25 51       	subi	r18, 0x15	; 21
    2700:	33 40       	sbci	r19, 0x03	; 3
    2702:	d1 f5       	brne	.+116    	; 0x2778 <change_selected+0xa8>
			((*(menuHead))->selected)--;
    2704:	91 50       	subi	r25, 0x01	; 1
    2706:	98 ab       	std	Y+48, r25	; 0x30
}

void change_selected(menu** menuHead, DIRECTION d){
	if(d == UP){
		((*(menuHead))->selected)--;
		while(((*(menuHead))->labels[((*(menuHead))->selected)]) == ""){
    2708:	cd 91       	ld	r28, X+
    270a:	dc 91       	ld	r29, X
    270c:	11 97       	sbiw	r26, 0x01	; 1
    270e:	98 a9       	ldd	r25, Y+48	; 0x30
    2710:	e9 2f       	mov	r30, r25
    2712:	f0 e0       	ldi	r31, 0x00	; 0
    2714:	ee 0f       	add	r30, r30
    2716:	ff 1f       	adc	r31, r31
    2718:	ec 0f       	add	r30, r28
    271a:	fd 1f       	adc	r31, r29
    271c:	20 81       	ld	r18, Z
    271e:	31 81       	ldd	r19, Z+1	; 0x01
    2720:	25 51       	subi	r18, 0x15	; 21
    2722:	33 40       	sbci	r19, 0x03	; 3
    2724:	79 f3       	breq	.-34     	; 0x2704 <change_selected+0x34>
    2726:	28 c0       	rjmp	.+80     	; 0x2778 <change_selected+0xa8>
			((*(menuHead))->selected)--;
		}
	}
	if(d == DOWN){
    2728:	63 30       	cpi	r22, 0x03	; 3
    272a:	31 f5       	brne	.+76     	; 0x2778 <change_selected+0xa8>
		((*(menuHead))->selected)++;
    272c:	ed 91       	ld	r30, X+
    272e:	fc 91       	ld	r31, X
    2730:	11 97       	sbiw	r26, 0x01	; 1
    2732:	80 a9       	ldd	r24, Z+48	; 0x30
    2734:	8f 5f       	subi	r24, 0xFF	; 255
    2736:	80 ab       	std	Z+48, r24	; 0x30
		while(((*(menuHead))->labels[((*(menuHead))->selected)]) == ""){
    2738:	cd 91       	ld	r28, X+
    273a:	dc 91       	ld	r29, X
    273c:	11 97       	sbiw	r26, 0x01	; 1
    273e:	98 a9       	ldd	r25, Y+48	; 0x30
    2740:	e9 2f       	mov	r30, r25
    2742:	f0 e0       	ldi	r31, 0x00	; 0
    2744:	ee 0f       	add	r30, r30
    2746:	ff 1f       	adc	r31, r31
    2748:	ec 0f       	add	r30, r28
    274a:	fd 1f       	adc	r31, r29
    274c:	20 81       	ld	r18, Z
    274e:	31 81       	ldd	r19, Z+1	; 0x01
    2750:	25 51       	subi	r18, 0x15	; 21
    2752:	33 40       	sbci	r19, 0x03	; 3
    2754:	89 f4       	brne	.+34     	; 0x2778 <change_selected+0xa8>
			((*(menuHead))->selected)++;
    2756:	9f 5f       	subi	r25, 0xFF	; 255
    2758:	98 ab       	std	Y+48, r25	; 0x30
			((*(menuHead))->selected)--;
		}
	}
	if(d == DOWN){
		((*(menuHead))->selected)++;
		while(((*(menuHead))->labels[((*(menuHead))->selected)]) == ""){
    275a:	cd 91       	ld	r28, X+
    275c:	dc 91       	ld	r29, X
    275e:	11 97       	sbiw	r26, 0x01	; 1
    2760:	98 a9       	ldd	r25, Y+48	; 0x30
    2762:	e9 2f       	mov	r30, r25
    2764:	f0 e0       	ldi	r31, 0x00	; 0
    2766:	ee 0f       	add	r30, r30
    2768:	ff 1f       	adc	r31, r31
    276a:	ec 0f       	add	r30, r28
    276c:	fd 1f       	adc	r31, r29
    276e:	20 81       	ld	r18, Z
    2770:	31 81       	ldd	r19, Z+1	; 0x01
    2772:	25 51       	subi	r18, 0x15	; 21
    2774:	33 40       	sbci	r19, 0x03	; 3
    2776:	79 f3       	breq	.-34     	; 0x2756 <change_selected+0x86>
			((*(menuHead))->selected)++;
		}
	}
	if(((*(menuHead))->selected) == 8){
    2778:	ed 91       	ld	r30, X+
    277a:	fc 91       	ld	r31, X
    277c:	11 97       	sbiw	r26, 0x01	; 1
    277e:	80 a9       	ldd	r24, Z+48	; 0x30
    2780:	88 30       	cpi	r24, 0x08	; 8
    2782:	09 f4       	brne	.+2      	; 0x2786 <change_selected+0xb6>
		((*(menuHead))->selected) = 0;
    2784:	10 aa       	std	Z+48, r1	; 0x30
	}
	if(((*(menuHead))->selected) == 255){
    2786:	ed 91       	ld	r30, X+
    2788:	fc 91       	ld	r31, X
    278a:	11 97       	sbiw	r26, 0x01	; 1
    278c:	80 a9       	ldd	r24, Z+48	; 0x30
    278e:	8f 3f       	cpi	r24, 0xFF	; 255
    2790:	11 f4       	brne	.+4      	; 0x2796 <change_selected+0xc6>
		((*(menuHead))->selected) = 7;
    2792:	87 e0       	ldi	r24, 0x07	; 7
    2794:	80 ab       	std	Z+48, r24	; 0x30
	}
	if(d != WAITING && d != NEUTRAL){
    2796:	64 50       	subi	r22, 0x04	; 4
    2798:	62 30       	cpi	r22, 0x02	; 2
    279a:	20 f0       	brcs	.+8      	; 0x27a4 <change_selected+0xd4>
		write_menu_to_screen(*(menuHead));
    279c:	8d 91       	ld	r24, X+
    279e:	9c 91       	ld	r25, X
    27a0:	0e 94 44 13 	call	0x2688	; 0x2688 <write_menu_to_screen>
	}
	
}
    27a4:	df 91       	pop	r29
    27a6:	cf 91       	pop	r28
    27a8:	08 95       	ret

000027aa <button_pressed>:

void button_pressed(menu** menuHead){
    27aa:	0f 93       	push	r16
    27ac:	1f 93       	push	r17
    27ae:	cf 93       	push	r28
    27b0:	df 93       	push	r29
    27b2:	ec 01       	movw	r28, r24
	if((*(menuHead))->f[((*(menuHead))->selected)] != NULL){
    27b4:	e8 81       	ld	r30, Y
    27b6:	f9 81       	ldd	r31, Y+1	; 0x01
    27b8:	80 a9       	ldd	r24, Z+48	; 0x30
    27ba:	a8 2f       	mov	r26, r24
    27bc:	b0 e0       	ldi	r27, 0x00	; 0
    27be:	aa 0f       	add	r26, r26
    27c0:	bb 1f       	adc	r27, r27
    27c2:	ae 0f       	add	r26, r30
    27c4:	bf 1f       	adc	r27, r31
    27c6:	90 96       	adiw	r26, 0x20	; 32
    27c8:	ed 91       	ld	r30, X+
    27ca:	fc 91       	ld	r31, X
    27cc:	91 97       	sbiw	r26, 0x21	; 33
    27ce:	30 97       	sbiw	r30, 0x00	; 0
    27d0:	31 f0       	breq	.+12     	; 0x27de <button_pressed+0x34>
		(*(menuHead))->f[((*(menuHead))->selected)]();
    27d2:	09 95       	icall
		write_menu_to_screen(*(menuHead));
    27d4:	88 81       	ld	r24, Y
    27d6:	99 81       	ldd	r25, Y+1	; 0x01
    27d8:	0e 94 44 13 	call	0x2688	; 0x2688 <write_menu_to_screen>
    27dc:	0c c0       	rjmp	.+24     	; 0x27f6 <button_pressed+0x4c>
	}
	else if((*(menuHead))->links[((*(menuHead))->selected)] != NULL){
    27de:	50 96       	adiw	r26, 0x10	; 16
    27e0:	0d 91       	ld	r16, X+
    27e2:	1c 91       	ld	r17, X
    27e4:	51 97       	sbiw	r26, 0x11	; 17
    27e6:	01 15       	cp	r16, r1
    27e8:	11 05       	cpc	r17, r1
    27ea:	29 f0       	breq	.+10     	; 0x27f6 <button_pressed+0x4c>
void change_menu(menu* next_menu, menu** menuHead){
	/*if (next_menu->fun_ptr != NULL){
		(*(next_menu->fun_ptr));
	}*/

	write_menu_to_screen(next_menu);
    27ec:	c8 01       	movw	r24, r16
    27ee:	0e 94 44 13 	call	0x2688	; 0x2688 <write_menu_to_screen>
	*menuHead = next_menu;
    27f2:	19 83       	std	Y+1, r17	; 0x01
    27f4:	08 83       	st	Y, r16
		write_menu_to_screen(*(menuHead));
	}
	else if((*(menuHead))->links[((*(menuHead))->selected)] != NULL){
		change_menu((*(menuHead))->links[((*(menuHead))->selected)], menuHead);
	}
}
    27f6:	df 91       	pop	r29
    27f8:	cf 91       	pop	r28
    27fa:	1f 91       	pop	r17
    27fc:	0f 91       	pop	r16
    27fe:	08 95       	ret

00002800 <launch_menusystem>:

void launch_menusystem(){
	
	//INITIATE
	
	oled_init();
    2800:	0e 94 b9 15 	call	0x2b72	; 0x2b72 <oled_init>
	clear_oled();
    2804:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
	menu** headPointer = NULL;
	
		static menu* mainMenu;
		mainMenu = new_menu(NULL);
    2808:	80 e0       	ldi	r24, 0x00	; 0
    280a:	90 e0       	ldi	r25, 0x00	; 0
    280c:	0e 94 08 13 	call	0x2610	; 0x2610 <new_menu>
    2810:	90 93 ec 03 	sts	0x03EC, r25	; 0x8003ec <mainMenu.2576+0x1>
    2814:	80 93 eb 03 	sts	0x03EB, r24	; 0x8003eb <mainMenu.2576>
		menu* submenu2 = new_menu(mainMenu);
    2818:	0e 94 08 13 	call	0x2610	; 0x2610 <new_menu>
    281c:	8c 01       	movw	r16, r24
		menu* difficulties = new_menu(mainMenu);
    281e:	80 91 eb 03 	lds	r24, 0x03EB	; 0x8003eb <mainMenu.2576>
    2822:	90 91 ec 03 	lds	r25, 0x03EC	; 0x8003ec <mainMenu.2576+0x1>
    2826:	0e 94 08 13 	call	0x2610	; 0x2610 <new_menu>
    282a:	dc 01       	movw	r26, r24
		
		mainMenu->labels[0] = "Ping-pong";
    282c:	e0 91 eb 03 	lds	r30, 0x03EB	; 0x8003eb <mainMenu.2576>
    2830:	f0 91 ec 03 	lds	r31, 0x03EC	; 0x8003ec <mainMenu.2576+0x1>
    2834:	86 e1       	ldi	r24, 0x16	; 22
    2836:	93 e0       	ldi	r25, 0x03	; 3
    2838:	91 83       	std	Z+1, r25	; 0x01
    283a:	80 83       	st	Z, r24
		mainMenu->f[0] = play_game;
    283c:	e0 91 eb 03 	lds	r30, 0x03EB	; 0x8003eb <mainMenu.2576>
    2840:	f0 91 ec 03 	lds	r31, 0x03EC	; 0x8003ec <mainMenu.2576+0x1>
    2844:	8d e6       	ldi	r24, 0x6D	; 109
    2846:	90 e1       	ldi	r25, 0x10	; 16
    2848:	91 a3       	std	Z+33, r25	; 0x21
    284a:	80 a3       	std	Z+32, r24	; 0x20

		mainMenu->labels[1] = "Graphics";
    284c:	80 e2       	ldi	r24, 0x20	; 32
    284e:	93 e0       	ldi	r25, 0x03	; 3
    2850:	93 83       	std	Z+3, r25	; 0x03
    2852:	82 83       	std	Z+2, r24	; 0x02
		mainMenu->f[1] = draw_sram;
    2854:	80 e7       	ldi	r24, 0x70	; 112
    2856:	98 e1       	ldi	r25, 0x18	; 24
    2858:	93 a3       	std	Z+35, r25	; 0x23
    285a:	82 a3       	std	Z+34, r24	; 0x22

		mainMenu->labels[2] = "Characters";
    285c:	89 e2       	ldi	r24, 0x29	; 41
    285e:	93 e0       	ldi	r25, 0x03	; 3
    2860:	95 83       	std	Z+5, r25	; 0x05
    2862:	84 83       	std	Z+4, r24	; 0x04
		mainMenu->links[2] = submenu2;
    2864:	15 8b       	std	Z+21, r17	; 0x15
    2866:	04 8b       	std	Z+20, r16	; 0x14

		mainMenu->labels[3] = "Calibrate stick";
    2868:	84 e3       	ldi	r24, 0x34	; 52
    286a:	93 e0       	ldi	r25, 0x03	; 3
    286c:	97 83       	std	Z+7, r25	; 0x07
    286e:	86 83       	std	Z+6, r24	; 0x06
		mainMenu->f[3] = calibrate;
    2870:	89 e0       	ldi	r24, 0x09	; 9
    2872:	90 e1       	ldi	r25, 0x10	; 16
    2874:	97 a3       	std	Z+39, r25	; 0x27
    2876:	86 a3       	std	Z+38, r24	; 0x26

		mainMenu->labels[4] = "Difficulty";
    2878:	84 e4       	ldi	r24, 0x44	; 68
    287a:	93 e0       	ldi	r25, 0x03	; 3
    287c:	91 87       	std	Z+9, r25	; 0x09
    287e:	80 87       	std	Z+8, r24	; 0x08
		mainMenu->links[4] = difficulties;
    2880:	b1 8f       	std	Z+25, r27	; 0x19
    2882:	a0 8f       	std	Z+24, r26	; 0x18
		difficulties->labels[0] = "easy";
    2884:	8b e4       	ldi	r24, 0x4B	; 75
    2886:	92 e0       	ldi	r25, 0x02	; 2
    2888:	11 96       	adiw	r26, 0x01	; 1
    288a:	9c 93       	st	X, r25
    288c:	8e 93       	st	-X, r24
		difficulties->f[0] = set_easy;
    288e:	8f e6       	ldi	r24, 0x6F	; 111
    2890:	91 e1       	ldi	r25, 0x11	; 17
    2892:	91 96       	adiw	r26, 0x21	; 33
    2894:	9c 93       	st	X, r25
    2896:	8e 93       	st	-X, r24
    2898:	90 97       	sbiw	r26, 0x20	; 32
		difficulties->labels[1] = "medium";
    289a:	82 e6       	ldi	r24, 0x62	; 98
    289c:	92 e0       	ldi	r25, 0x02	; 2
    289e:	13 96       	adiw	r26, 0x03	; 3
    28a0:	9c 93       	st	X, r25
    28a2:	8e 93       	st	-X, r24
    28a4:	12 97       	sbiw	r26, 0x02	; 2
		difficulties->f[1] = set_medium;
    28a6:	8a e8       	ldi	r24, 0x8A	; 138
    28a8:	91 e1       	ldi	r25, 0x11	; 17
    28aa:	93 96       	adiw	r26, 0x23	; 35
    28ac:	9c 93       	st	X, r25
    28ae:	8e 93       	st	-X, r24
    28b0:	92 97       	sbiw	r26, 0x22	; 34
		difficulties->labels[2] = "hard";
    28b2:	8b e7       	ldi	r24, 0x7B	; 123
    28b4:	92 e0       	ldi	r25, 0x02	; 2
    28b6:	15 96       	adiw	r26, 0x05	; 5
    28b8:	9c 93       	st	X, r25
    28ba:	8e 93       	st	-X, r24
    28bc:	14 97       	sbiw	r26, 0x04	; 4
		difficulties->f[2] = set_hard;
    28be:	85 ea       	ldi	r24, 0xA5	; 165
    28c0:	91 e1       	ldi	r25, 0x11	; 17
    28c2:	95 96       	adiw	r26, 0x25	; 37
    28c4:	9c 93       	st	X, r25
    28c6:	8e 93       	st	-X, r24
    28c8:	94 97       	sbiw	r26, 0x24	; 36

		mainMenu->labels[5] = "Reaction test";
    28ca:	e0 91 eb 03 	lds	r30, 0x03EB	; 0x8003eb <mainMenu.2576>
    28ce:	f0 91 ec 03 	lds	r31, 0x03EC	; 0x8003ec <mainMenu.2576+0x1>
    28d2:	8f e4       	ldi	r24, 0x4F	; 79
    28d4:	93 e0       	ldi	r25, 0x03	; 3
    28d6:	93 87       	std	Z+11, r25	; 0x0b
    28d8:	82 87       	std	Z+10, r24	; 0x0a
		mainMenu->f[5] = reaction_test;
    28da:	80 ec       	ldi	r24, 0xC0	; 192
    28dc:	91 e1       	ldi	r25, 0x11	; 17
    28de:	93 a7       	std	Z+43, r25	; 0x2b
    28e0:	82 a7       	std	Z+42, r24	; 0x2a

		mainMenu->labels[6] = "Draw a wojak";
    28e2:	8d e5       	ldi	r24, 0x5D	; 93
    28e4:	93 e0       	ldi	r25, 0x03	; 3
    28e6:	95 87       	std	Z+13, r25	; 0x0d
    28e8:	84 87       	std	Z+12, r24	; 0x0c
		mainMenu->f[6] = wojakprinter;
    28ea:	8c ec       	ldi	r24, 0xCC	; 204
    28ec:	9e e0       	ldi	r25, 0x0E	; 14
    28ee:	95 a7       	std	Z+45, r25	; 0x2d
    28f0:	84 a7       	std	Z+44, r24	; 0x2c
		mainMenu->labels[7] = "Credits";
    28f2:	8a e6       	ldi	r24, 0x6A	; 106
    28f4:	93 e0       	ldi	r25, 0x03	; 3
    28f6:	97 87       	std	Z+15, r25	; 0x0f
    28f8:	86 87       	std	Z+14, r24	; 0x0e
		mainMenu->f[7] = show_credits;
    28fa:	88 e6       	ldi	r24, 0x68	; 104
    28fc:	9e e0       	ldi	r25, 0x0E	; 14
    28fe:	97 a7       	std	Z+47, r25	; 0x2f
    2900:	86 a7       	std	Z+46, r24	; 0x2e

		submenu2->labels[0] = "Choose character";
    2902:	82 e7       	ldi	r24, 0x72	; 114
    2904:	93 e0       	ldi	r25, 0x03	; 3
    2906:	f8 01       	movw	r30, r16
    2908:	91 83       	std	Z+1, r25	; 0x01
    290a:	80 83       	st	Z, r24
		submenu2->f[0] = choose_character;
    290c:	89 ee       	ldi	r24, 0xE9	; 233
    290e:	9e e0       	ldi	r25, 0x0E	; 14
    2910:	91 a3       	std	Z+33, r25	; 0x21
    2912:	80 a3       	std	Z+32, r24	; 0x20
		submenu2->labels[1] = "Hiscores";
    2914:	83 e8       	ldi	r24, 0x83	; 131
    2916:	93 e0       	ldi	r25, 0x03	; 3
    2918:	93 83       	std	Z+3, r25	; 0x03
    291a:	82 83       	std	Z+2, r24	; 0x02
		submenu2->f[1] = hiscore;
    291c:	80 e9       	ldi	r24, 0x90	; 144
    291e:	9f e0       	ldi	r25, 0x0F	; 15
    2920:	93 a3       	std	Z+35, r25	; 0x23
    2922:	82 a3       	std	Z+34, r24	; 0x22
		submenu2->labels[2] = "Reset scores";
    2924:	8c e8       	ldi	r24, 0x8C	; 140
    2926:	93 e0       	ldi	r25, 0x03	; 3
    2928:	95 83       	std	Z+5, r25	; 0x05
    292a:	84 83       	std	Z+4, r24	; 0x04
		submenu2->f[2] = reset_scores;
    292c:	8a ea       	ldi	r24, 0xAA	; 170
    292e:	9e e0       	ldi	r25, 0x0E	; 14
    2930:	95 a3       	std	Z+37, r25	; 0x25
    2932:	84 a3       	std	Z+36, r24	; 0x24
		submenu2->labels[4] = "";
    2934:	85 e1       	ldi	r24, 0x15	; 21
    2936:	93 e0       	ldi	r25, 0x03	; 3
    2938:	91 87       	std	Z+9, r25	; 0x09
    293a:	80 87       	std	Z+8, r24	; 0x08
		submenu2->labels[5] = "";
    293c:	93 87       	std	Z+11, r25	; 0x0b
    293e:	82 87       	std	Z+10, r24	; 0x0a
		submenu2->labels[6] = "";
    2940:	95 87       	std	Z+13, r25	; 0x0d
    2942:	84 87       	std	Z+12, r24	; 0x0c
		
		
	headPointer = &mainMenu;
	write_menu_to_screen(*headPointer);
    2944:	80 91 eb 03 	lds	r24, 0x03EB	; 0x8003eb <mainMenu.2576>
    2948:	90 91 ec 03 	lds	r25, 0x03EC	; 0x8003ec <mainMenu.2576+0x1>
    294c:	0e 94 44 13 	call	0x2688	; 0x2688 <write_menu_to_screen>
	const int *BASE = 0x1000;
	const int *ADC = 0x1401;
	volatile amap* atmelMap = (amap*) BASE;
	 
	calc_offset();
    2950:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <calc_offset>

	//RUN
	while(1){
		
		update_adc_values();
    2954:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <update_adc_values>
		
		uint8_t left_button = PIND & (1<< PIND4);
    2958:	80 b3       	in	r24, 0x10	; 16
		uint8_t right_button = PIND & (1<< PIND5);
    295a:	80 b3       	in	r24, 0x10	; 16
		uint8_t joy_button = PINB & (1<< PINB1);
    295c:	c6 b3       	in	r28, 0x16	; 22
    295e:	c2 70       	andi	r28, 0x02	; 2
	
	
		//_delay_ms(1);
		DIRECTION current_dir = joystick_direction(current_dir);
    2960:	8d 2f       	mov	r24, r29
    2962:	0e 94 6b 15 	call	0x2ad6	; 0x2ad6 <joystick_direction>
    2966:	d8 2f       	mov	r29, r24
		if(current_dir != NEUTRAL && current_dir != WAITING){
    2968:	8c ef       	ldi	r24, 0xFC	; 252
    296a:	8d 0f       	add	r24, r29
    296c:	82 30       	cpi	r24, 0x02	; 2
    296e:	28 f0       	brcs	.+10     	; 0x297a <launch_menusystem+0x17a>
			change_selected(headPointer, current_dir);
    2970:	6d 2f       	mov	r22, r29
    2972:	8b ee       	ldi	r24, 0xEB	; 235
    2974:	93 e0       	ldi	r25, 0x03	; 3
    2976:	0e 94 68 13 	call	0x26d0	; 0x26d0 <change_selected>
		}
		if(button_check(joy_button)){
    297a:	8c 2f       	mov	r24, r28
    297c:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <button_check>
    2980:	88 23       	and	r24, r24
    2982:	41 f3       	breq	.-48     	; 0x2954 <launch_menusystem+0x154>
			button_pressed(headPointer);
    2984:	8b ee       	ldi	r24, 0xEB	; 235
    2986:	93 e0       	ldi	r25, 0x03	; 3
    2988:	0e 94 d5 13 	call	0x27aa	; 0x27aa <button_pressed>
    298c:	e3 cf       	rjmp	.-58     	; 0x2954 <launch_menusystem+0x154>

0000298e <spi_init>:
	spi_write(0xf0);
	return SPDR;
}

void spi_init(){
	DDRB = (1<<DDB4)|(1<<DDB5)|(1<<DDB7); //chip select, mosi, clock
    298e:	80 eb       	ldi	r24, 0xB0	; 176
    2990:	87 bb       	out	0x17, r24	; 23
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    2992:	81 e5       	ldi	r24, 0x51	; 81
    2994:	8d b9       	out	0x0d, r24	; 13
	
	PORTB |= 1<<PB4;
    2996:	c4 9a       	sbi	0x18, 4	; 24
    2998:	08 95       	ret

0000299a <spi_write>:
}

void spi_write(char data){
	SPDR = data;
    299a:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF))){
    299c:	77 9b       	sbis	0x0e, 7	; 14
    299e:	fe cf       	rjmp	.-4      	; 0x299c <spi_write+0x2>
		
	}
    29a0:	08 95       	ret

000029a2 <spi_read>:



uint8_t spi_read(){
	
	spi_write(0xf0);
    29a2:	80 ef       	ldi	r24, 0xF0	; 240
    29a4:	0e 94 cd 14 	call	0x299a	; 0x299a <spi_write>
	return SPDR;
    29a8:	8f b1       	in	r24, 0x0f	; 15
}
    29aa:	08 95       	ret

000029ac <get_joyvals>:
static sliderVal slider;
DIRECTION direction;

joyVal get_joyvals(){
	return joystick;
}
    29ac:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <joystick>
    29b0:	90 91 f0 03 	lds	r25, 0x03F0	; 0x8003f0 <joystick+0x1>
    29b4:	08 95       	ret

000029b6 <get_slidervals>:

sliderVal get_slidervals(){
	return slider;
}
    29b6:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <slider>
    29ba:	90 91 ee 03 	lds	r25, 0x03EE	; 0x8003ee <slider+0x1>
    29be:	08 95       	ret

000029c0 <calc_offset>:

void calc_offset(){
	volatile char *adc = (char *) 0x1400;
	adc[0] = 0x01;
    29c0:	e0 e0       	ldi	r30, 0x00	; 0
    29c2:	f4 e1       	ldi	r31, 0x14	; 20
    29c4:	81 e0       	ldi	r24, 0x01	; 1
    29c6:	80 83       	st	Z, r24
	x_offset = adc[0];
    29c8:	80 81       	ld	r24, Z
    29ca:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <x_offset>
	y_offset = adc[0];
    29ce:	80 81       	ld	r24, Z
    29d0:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <y_offset>
    29d4:	08 95       	ret

000029d6 <button_check>:
}

uint8_t button_check(uint8_t current){
	if(current == 0 && previous == 1){
    29d6:	81 11       	cpse	r24, r1
    29d8:	07 c0       	rjmp	.+14     	; 0x29e8 <button_check+0x12>
    29da:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <previous>
    29de:	81 30       	cpi	r24, 0x01	; 1
    29e0:	41 f4       	brne	.+16     	; 0x29f2 <button_check+0x1c>
		previous = 0;
    29e2:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <previous>
		return 1;
    29e6:	08 95       	ret
	}else if(current != 0){
		previous = 1;
    29e8:	81 e0       	ldi	r24, 0x01	; 1
    29ea:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <previous>
	}
	return 0;
    29ee:	80 e0       	ldi	r24, 0x00	; 0
    29f0:	08 95       	ret
    29f2:	80 e0       	ldi	r24, 0x00	; 0
}
    29f4:	08 95       	ret

000029f6 <update_adc_values>:

void update_adc_values(){
    29f6:	0f 93       	push	r16
    29f8:	1f 93       	push	r17
    29fa:	cf 93       	push	r28
	volatile char *adc = (char *) 0x1400;
	adc[0] = 0x01; // M� skrives til for � oppdatere adc registrene.
    29fc:	e0 e0       	ldi	r30, 0x00	; 0
    29fe:	f4 e1       	ldi	r31, 0x14	; 20
    2a00:	81 e0       	ldi	r24, 0x01	; 1
    2a02:	80 83       	st	Z, r24
	uint8_t x = adc[0];
    2a04:	40 81       	ld	r20, Z
	uint8_t y = adc[0];
    2a06:	20 81       	ld	r18, Z
	uint8_t left = adc[0];
    2a08:	30 81       	ld	r19, Z
	uint8_t right = adc[0];
    2a0a:	c0 81       	ld	r28, Z
	
	if(x>=x_offset){
    2a0c:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <x_offset>
    2a10:	4e 17       	cp	r20, r30
    2a12:	98 f0       	brcs	.+38     	; 0x2a3a <update_adc_values+0x44>
		joystick.x_val = (x-x_offset)*(100)/(255-x_offset);
    2a14:	f0 e0       	ldi	r31, 0x00	; 0
    2a16:	50 e0       	ldi	r21, 0x00	; 0
    2a18:	4e 1b       	sub	r20, r30
    2a1a:	5f 0b       	sbc	r21, r31
    2a1c:	64 e6       	ldi	r22, 0x64	; 100
    2a1e:	64 9f       	mul	r22, r20
    2a20:	c0 01       	movw	r24, r0
    2a22:	65 9f       	mul	r22, r21
    2a24:	90 0d       	add	r25, r0
    2a26:	11 24       	eor	r1, r1
    2a28:	6f ef       	ldi	r22, 0xFF	; 255
    2a2a:	70 e0       	ldi	r23, 0x00	; 0
    2a2c:	6e 1b       	sub	r22, r30
    2a2e:	7f 0b       	sbc	r23, r31
    2a30:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2a34:	60 93 ef 03 	sts	0x03EF, r22	; 0x8003ef <joystick>
    2a38:	0f c0       	rjmp	.+30     	; 0x2a58 <update_adc_values+0x62>
	}
	else if(x<x_offset){
		joystick.x_val = -(x_offset-x)*(100)/x_offset;
    2a3a:	6e 2f       	mov	r22, r30
    2a3c:	70 e0       	ldi	r23, 0x00	; 0
    2a3e:	50 e0       	ldi	r21, 0x00	; 0
    2a40:	46 1b       	sub	r20, r22
    2a42:	57 0b       	sbc	r21, r23
    2a44:	e4 e6       	ldi	r30, 0x64	; 100
    2a46:	e4 9f       	mul	r30, r20
    2a48:	c0 01       	movw	r24, r0
    2a4a:	e5 9f       	mul	r30, r21
    2a4c:	90 0d       	add	r25, r0
    2a4e:	11 24       	eor	r1, r1
    2a50:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2a54:	60 93 ef 03 	sts	0x03EF, r22	; 0x8003ef <joystick>
	}
	if(y>=y_offset){
    2a58:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <y_offset>
    2a5c:	26 17       	cp	r18, r22
    2a5e:	a8 f0       	brcs	.+42     	; 0x2a8a <update_adc_values+0x94>
		joystick.y_val = (y-y_offset)*(100)/(255-y_offset);
    2a60:	46 2f       	mov	r20, r22
    2a62:	50 e0       	ldi	r21, 0x00	; 0
    2a64:	62 2f       	mov	r22, r18
    2a66:	70 e0       	ldi	r23, 0x00	; 0
    2a68:	64 1b       	sub	r22, r20
    2a6a:	75 0b       	sbc	r23, r21
    2a6c:	24 e6       	ldi	r18, 0x64	; 100
    2a6e:	26 9f       	mul	r18, r22
    2a70:	c0 01       	movw	r24, r0
    2a72:	27 9f       	mul	r18, r23
    2a74:	90 0d       	add	r25, r0
    2a76:	11 24       	eor	r1, r1
    2a78:	6f ef       	ldi	r22, 0xFF	; 255
    2a7a:	70 e0       	ldi	r23, 0x00	; 0
    2a7c:	64 1b       	sub	r22, r20
    2a7e:	75 0b       	sbc	r23, r21
    2a80:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2a84:	60 93 f0 03 	sts	0x03F0, r22	; 0x8003f0 <joystick+0x1>
    2a88:	0f c0       	rjmp	.+30     	; 0x2aa8 <update_adc_values+0xb2>
	}
	else if(y<y_offset){
		joystick.y_val = -(y_offset-y)*(100)/y_offset;
    2a8a:	70 e0       	ldi	r23, 0x00	; 0
    2a8c:	42 2f       	mov	r20, r18
    2a8e:	50 e0       	ldi	r21, 0x00	; 0
    2a90:	46 1b       	sub	r20, r22
    2a92:	57 0b       	sbc	r21, r23
    2a94:	24 e6       	ldi	r18, 0x64	; 100
    2a96:	24 9f       	mul	r18, r20
    2a98:	c0 01       	movw	r24, r0
    2a9a:	25 9f       	mul	r18, r21
    2a9c:	90 0d       	add	r25, r0
    2a9e:	11 24       	eor	r1, r1
    2aa0:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2aa4:	60 93 f0 03 	sts	0x03F0, r22	; 0x8003f0 <joystick+0x1>
	}
	
	slider.l_val = left*100/255;
    2aa8:	ed ee       	ldi	r30, 0xED	; 237
    2aaa:	f3 e0       	ldi	r31, 0x03	; 3
    2aac:	24 e6       	ldi	r18, 0x64	; 100
    2aae:	23 9f       	mul	r18, r19
    2ab0:	c0 01       	movw	r24, r0
    2ab2:	11 24       	eor	r1, r1
    2ab4:	0f ef       	ldi	r16, 0xFF	; 255
    2ab6:	10 e0       	ldi	r17, 0x00	; 0
    2ab8:	b8 01       	movw	r22, r16
    2aba:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2abe:	60 83       	st	Z, r22
	slider.r_val = right*100/255;
    2ac0:	2c 9f       	mul	r18, r28
    2ac2:	c0 01       	movw	r24, r0
    2ac4:	11 24       	eor	r1, r1
    2ac6:	b8 01       	movw	r22, r16
    2ac8:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2acc:	61 83       	std	Z+1, r22	; 0x01
}
    2ace:	cf 91       	pop	r28
    2ad0:	1f 91       	pop	r17
    2ad2:	0f 91       	pop	r16
    2ad4:	08 95       	ret

00002ad6 <joystick_direction>:
	return joydir;
	
}*/

DIRECTION joystick_direction(DIRECTION dir){
	if(joystick.x_val < 50 && joystick.x_val > -50 && joystick.y_val < 50 && joystick.y_val > -50 ){
    2ad6:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <joystick>
    2ada:	21 e3       	ldi	r18, 0x31	; 49
    2adc:	29 0f       	add	r18, r25
    2ade:	23 36       	cpi	r18, 0x63	; 99
    2ae0:	28 f4       	brcc	.+10     	; 0x2aec <joystick_direction+0x16>
    2ae2:	20 91 f0 03 	lds	r18, 0x03F0	; 0x8003f0 <joystick+0x1>
    2ae6:	2f 5c       	subi	r18, 0xCF	; 207
    2ae8:	23 36       	cpi	r18, 0x63	; 99
    2aea:	10 f0       	brcs	.+4      	; 0x2af0 <joystick_direction+0x1a>
		dir = NEUTRAL;
	}
	if(dir == NEUTRAL){
    2aec:	84 30       	cpi	r24, 0x04	; 4
    2aee:	61 f4       	brne	.+24     	; 0x2b08 <joystick_direction+0x32>
		if(joystick.x_val > 95){
    2af0:	90 36       	cpi	r25, 0x60	; 96
    2af2:	64 f4       	brge	.+24     	; 0x2b0c <joystick_direction+0x36>
			return RIGHT;
		}
		if(joystick.x_val < -95){
    2af4:	91 3a       	cpi	r25, 0xA1	; 161
    2af6:	64 f0       	brlt	.+24     	; 0x2b10 <joystick_direction+0x3a>
			return LEFT;
		}
		if(joystick.y_val < -95){
    2af8:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <joystick+0x1>
    2afc:	81 3a       	cpi	r24, 0xA1	; 161
    2afe:	54 f0       	brlt	.+20     	; 0x2b14 <joystick_direction+0x3e>
			return DOWN;
		}
		if(joystick.y_val > 95){
    2b00:	80 36       	cpi	r24, 0x60	; 96
    2b02:	54 f4       	brge	.+20     	; 0x2b18 <joystick_direction+0x42>
			return UP;
		}
		return NEUTRAL;
    2b04:	84 e0       	ldi	r24, 0x04	; 4
    2b06:	08 95       	ret
	}
	return WAITING;
    2b08:	85 e0       	ldi	r24, 0x05	; 5
    2b0a:	08 95       	ret
	if(joystick.x_val < 50 && joystick.x_val > -50 && joystick.y_val < 50 && joystick.y_val > -50 ){
		dir = NEUTRAL;
	}
	if(dir == NEUTRAL){
		if(joystick.x_val > 95){
			return RIGHT;
    2b0c:	81 e0       	ldi	r24, 0x01	; 1
    2b0e:	08 95       	ret
		}
		if(joystick.x_val < -95){
			return LEFT;
    2b10:	80 e0       	ldi	r24, 0x00	; 0
    2b12:	08 95       	ret
		}
		if(joystick.y_val < -95){
			return DOWN;
    2b14:	83 e0       	ldi	r24, 0x03	; 3
    2b16:	08 95       	ret
		}
		if(joystick.y_val > 95){
			return UP;
    2b18:	82 e0       	ldi	r24, 0x02	; 2
		}
		return NEUTRAL;
	}
	return WAITING;
}
    2b1a:	08 95       	ret

00002b1c <main>:
	
//  	joyVal joystick; 
//  	sliderVal slider; 
//	volatile amap* atmelMap = (amap*) BASE;
	
	USART_Init ( MYUBRR );
    2b1c:	8f e1       	ldi	r24, 0x1F	; 31
    2b1e:	90 e0       	ldi	r25, 0x00	; 0
    2b20:	0e 94 a1 18 	call	0x3142	; 0x3142 <USART_Init>
	
	//enable external memory interface
	MCUCR |= (1<<SRE);
    2b24:	85 b7       	in	r24, 0x35	; 53
    2b26:	80 68       	ori	r24, 0x80	; 128
    2b28:	85 bf       	out	0x35, r24	; 53
	
	//select which c pins on atmega to be released for normal use, the rest is used for high address bytes
	SFIOR &= ~(1<<XMM0);
    2b2a:	80 b7       	in	r24, 0x30	; 48
    2b2c:	87 7f       	andi	r24, 0xF7	; 247
    2b2e:	80 bf       	out	0x30, r24	; 48
	SFIOR &= ~(1<<XMM1);
    2b30:	80 b7       	in	r24, 0x30	; 48
    2b32:	8f 7e       	andi	r24, 0xEF	; 239
    2b34:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1<<XMM2);
    2b36:	80 b7       	in	r24, 0x30	; 48
    2b38:	80 62       	ori	r24, 0x20	; 32
    2b3a:	80 bf       	out	0x30, r24	; 48
	
	DDRA |= 0x18;
    2b3c:	8a b3       	in	r24, 0x1a	; 26
    2b3e:	88 61       	ori	r24, 0x18	; 24
    2b40:	8a bb       	out	0x1a, r24	; 26
	printf("\n\n\n\n\nasdhfkajsdhfjksa %d \r\n\n\n\n\n", ext_ram[15]);
	printf("\n\n\n\n\nasdhfkajsdhfjksa %d \r\n\n\n\n\n", ext_ram[16]);
	_delay_ms(1000);
	*//*
	volatile char * sram = (char *) 0x1800;*/
	can_init();
    2b42:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <can_init>
	

	can_interrupt_enable();
    2b46:	0e 94 56 0c 	call	0x18ac	; 0x18ac <can_interrupt_enable>
	//SRAM_test(); _delay_ms(1000);
	launch_menusystem();
    2b4a:	0e 94 00 14 	call	0x2800	; 0x2800 <launch_menusystem>
		//send_can_msg(&msgToSend);
		send_stick_can();
		_delay_ms(50);


		printf("fail");
    2b4e:	c9 ed       	ldi	r28, 0xD9	; 217
    2b50:	d3 e0       	ldi	r29, 0x03	; 3
	while(1){
		// CAN BUS TEST
		//msgToReceive = receive_can_msg(0);
		//_delay_ms(5000);
		//send_can_msg(&msgToSend);
		send_stick_can();
    2b52:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <send_stick_can>
    2b56:	80 e0       	ldi	r24, 0x00	; 0
    2b58:	90 ef       	ldi	r25, 0xF0	; 240
    2b5a:	01 97       	sbiw	r24, 0x01	; 1
    2b5c:	f1 f7       	brne	.-4      	; 0x2b5a <main+0x3e>
		_delay_ms(50);


		printf("fail");
    2b5e:	df 93       	push	r29
    2b60:	cf 93       	push	r28
    2b62:	0e 94 a1 1a 	call	0x3542	; 0x3542 <printf>
    2b66:	0f 90       	pop	r0
    2b68:	0f 90       	pop	r0
    2b6a:	f3 cf       	rjmp	.-26     	; 0x2b52 <main+0x36>

00002b6c <oled_write_data>:
	
	for (int i=0; i < 8; i++) {
		oled_write_data(pgm_read_byte(&(font8[character][i])));
	}
	
}
    2b6c:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xe05>
    2b70:	08 95       	ret

00002b72 <oled_init>:
    2b72:	e0 e0       	ldi	r30, 0x00	; 0
    2b74:	f0 e1       	ldi	r31, 0x10	; 16
    2b76:	8e ea       	ldi	r24, 0xAE	; 174
    2b78:	80 83       	st	Z, r24
    2b7a:	81 ea       	ldi	r24, 0xA1	; 161
    2b7c:	80 83       	st	Z, r24
    2b7e:	8a ed       	ldi	r24, 0xDA	; 218
    2b80:	80 83       	st	Z, r24
    2b82:	82 e1       	ldi	r24, 0x12	; 18
    2b84:	80 83       	st	Z, r24
    2b86:	88 ec       	ldi	r24, 0xC8	; 200
    2b88:	80 83       	st	Z, r24
    2b8a:	88 ea       	ldi	r24, 0xA8	; 168
    2b8c:	80 83       	st	Z, r24
    2b8e:	8f e3       	ldi	r24, 0x3F	; 63
    2b90:	80 83       	st	Z, r24
    2b92:	85 ed       	ldi	r24, 0xD5	; 213
    2b94:	80 83       	st	Z, r24
    2b96:	80 e8       	ldi	r24, 0x80	; 128
    2b98:	80 83       	st	Z, r24
    2b9a:	81 e8       	ldi	r24, 0x81	; 129
    2b9c:	80 83       	st	Z, r24
    2b9e:	80 e5       	ldi	r24, 0x50	; 80
    2ba0:	80 83       	st	Z, r24
    2ba2:	89 ed       	ldi	r24, 0xD9	; 217
    2ba4:	80 83       	st	Z, r24
    2ba6:	81 e2       	ldi	r24, 0x21	; 33
    2ba8:	80 83       	st	Z, r24
    2baa:	80 e2       	ldi	r24, 0x20	; 32
    2bac:	80 83       	st	Z, r24
    2bae:	82 e0       	ldi	r24, 0x02	; 2
    2bb0:	80 83       	st	Z, r24
    2bb2:	8b ed       	ldi	r24, 0xDB	; 219
    2bb4:	80 83       	st	Z, r24
    2bb6:	80 e3       	ldi	r24, 0x30	; 48
    2bb8:	80 83       	st	Z, r24
    2bba:	8d ea       	ldi	r24, 0xAD	; 173
    2bbc:	80 83       	st	Z, r24
    2bbe:	10 82       	st	Z, r1
    2bc0:	84 ea       	ldi	r24, 0xA4	; 164
    2bc2:	80 83       	st	Z, r24
    2bc4:	86 ea       	ldi	r24, 0xA6	; 166
    2bc6:	80 83       	st	Z, r24
    2bc8:	8f ea       	ldi	r24, 0xAF	; 175
    2bca:	80 83       	st	Z, r24
    2bcc:	08 95       	ret

00002bce <go_to_line>:
    2bce:	87 70       	andi	r24, 0x07	; 7
    2bd0:	80 55       	subi	r24, 0x50	; 80
    2bd2:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xc05>
    2bd6:	08 95       	ret

00002bd8 <go_to_column>:
    2bd8:	98 2f       	mov	r25, r24
    2bda:	9f 70       	andi	r25, 0x0F	; 15
    2bdc:	e0 e0       	ldi	r30, 0x00	; 0
    2bde:	f0 e1       	ldi	r31, 0x10	; 16
    2be0:	90 83       	st	Z, r25
    2be2:	82 95       	swap	r24
    2be4:	8f 70       	andi	r24, 0x0F	; 15
    2be6:	80 5f       	subi	r24, 0xF0	; 240
    2be8:	80 83       	st	Z, r24
    2bea:	08 95       	ret

00002bec <clear_oled>:
    2bec:	1f 93       	push	r17
    2bee:	cf 93       	push	r28
    2bf0:	df 93       	push	r29
    2bf2:	10 e0       	ldi	r17, 0x00	; 0
    2bf4:	c0 e0       	ldi	r28, 0x00	; 0
    2bf6:	d2 e1       	ldi	r29, 0x12	; 18
    2bf8:	81 2f       	mov	r24, r17
    2bfa:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    2bfe:	80 e0       	ldi	r24, 0x00	; 0
    2c00:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2c04:	80 e8       	ldi	r24, 0x80	; 128
    2c06:	90 e0       	ldi	r25, 0x00	; 0
    2c08:	18 82       	st	Y, r1
    2c0a:	01 97       	sbiw	r24, 0x01	; 1
    2c0c:	e9 f7       	brne	.-6      	; 0x2c08 <clear_oled+0x1c>
    2c0e:	1f 5f       	subi	r17, 0xFF	; 255
    2c10:	18 30       	cpi	r17, 0x08	; 8
    2c12:	91 f7       	brne	.-28     	; 0x2bf8 <clear_oled+0xc>
    2c14:	df 91       	pop	r29
    2c16:	cf 91       	pop	r28
    2c18:	1f 91       	pop	r17
    2c1a:	08 95       	ret

00002c1c <clear_oled_new>:
    2c1c:	1f 93       	push	r17
    2c1e:	cf 93       	push	r28
    2c20:	df 93       	push	r29
    2c22:	10 e0       	ldi	r17, 0x00	; 0
    2c24:	c0 e0       	ldi	r28, 0x00	; 0
    2c26:	d2 e1       	ldi	r29, 0x12	; 18
    2c28:	81 2f       	mov	r24, r17
    2c2a:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    2c2e:	80 e0       	ldi	r24, 0x00	; 0
    2c30:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2c34:	80 e8       	ldi	r24, 0x80	; 128
    2c36:	90 e0       	ldi	r25, 0x00	; 0
    2c38:	18 82       	st	Y, r1
    2c3a:	01 97       	sbiw	r24, 0x01	; 1
    2c3c:	e9 f7       	brne	.-6      	; 0x2c38 <clear_oled_new+0x1c>
    2c3e:	1f 5f       	subi	r17, 0xFF	; 255
    2c40:	18 30       	cpi	r17, 0x08	; 8
    2c42:	91 f7       	brne	.-28     	; 0x2c28 <clear_oled_new+0xc>
    2c44:	df 91       	pop	r29
    2c46:	cf 91       	pop	r28
    2c48:	1f 91       	pop	r17
    2c4a:	08 95       	ret

00002c4c <oled_write_char_using_font>:
    2c4c:	80 52       	subi	r24, 0x20	; 32
    2c4e:	68 30       	cpi	r22, 0x08	; 8
    2c50:	f1 f4       	brne	.+60     	; 0x2c8e <oled_write_char_using_font+0x42>
    2c52:	90 e0       	ldi	r25, 0x00	; 0
    2c54:	9c 01       	movw	r18, r24
    2c56:	22 0f       	add	r18, r18
    2c58:	33 1f       	adc	r19, r19
    2c5a:	22 0f       	add	r18, r18
    2c5c:	33 1f       	adc	r19, r19
    2c5e:	22 0f       	add	r18, r18
    2c60:	33 1f       	adc	r19, r19
    2c62:	29 5b       	subi	r18, 0xB9	; 185
    2c64:	3a 4e       	sbci	r19, 0xEA	; 234
    2c66:	88 0f       	add	r24, r24
    2c68:	99 1f       	adc	r25, r25
    2c6a:	88 0f       	add	r24, r24
    2c6c:	99 1f       	adc	r25, r25
    2c6e:	88 0f       	add	r24, r24
    2c70:	99 1f       	adc	r25, r25
    2c72:	81 5b       	subi	r24, 0xB1	; 177
    2c74:	9a 4e       	sbci	r25, 0xEA	; 234
    2c76:	a0 e0       	ldi	r26, 0x00	; 0
    2c78:	b2 e1       	ldi	r27, 0x12	; 18
    2c7a:	f9 01       	movw	r30, r18
    2c7c:	45 91       	lpm	r20, Z+
    2c7e:	54 91       	lpm	r21, Z
    2c80:	4c 93       	st	X, r20
    2c82:	2f 5f       	subi	r18, 0xFF	; 255
    2c84:	3f 4f       	sbci	r19, 0xFF	; 255
    2c86:	82 17       	cp	r24, r18
    2c88:	93 07       	cpc	r25, r19
    2c8a:	b9 f7       	brne	.-18     	; 0x2c7a <oled_write_char_using_font+0x2e>
    2c8c:	08 95       	ret
    2c8e:	65 30       	cpi	r22, 0x05	; 5
    2c90:	d1 f4       	brne	.+52     	; 0x2cc6 <oled_write_char_using_font+0x7a>
    2c92:	90 e0       	ldi	r25, 0x00	; 0
    2c94:	9c 01       	movw	r18, r24
    2c96:	22 0f       	add	r18, r18
    2c98:	33 1f       	adc	r19, r19
    2c9a:	22 0f       	add	r18, r18
    2c9c:	33 1f       	adc	r19, r19
    2c9e:	82 0f       	add	r24, r18
    2ca0:	93 1f       	adc	r25, r19
    2ca2:	20 e0       	ldi	r18, 0x00	; 0
    2ca4:	30 e0       	ldi	r19, 0x00	; 0
    2ca6:	a0 e0       	ldi	r26, 0x00	; 0
    2ca8:	b2 e1       	ldi	r27, 0x12	; 18
    2caa:	f9 01       	movw	r30, r18
    2cac:	e8 0f       	add	r30, r24
    2cae:	f9 1f       	adc	r31, r25
    2cb0:	e4 59       	subi	r30, 0x94	; 148
    2cb2:	fc 4e       	sbci	r31, 0xEC	; 236
    2cb4:	45 91       	lpm	r20, Z+
    2cb6:	54 91       	lpm	r21, Z
    2cb8:	4c 93       	st	X, r20
    2cba:	2f 5f       	subi	r18, 0xFF	; 255
    2cbc:	3f 4f       	sbci	r19, 0xFF	; 255
    2cbe:	25 30       	cpi	r18, 0x05	; 5
    2cc0:	31 05       	cpc	r19, r1
    2cc2:	99 f7       	brne	.-26     	; 0x2caa <oled_write_char_using_font+0x5e>
    2cc4:	08 95       	ret
    2cc6:	64 30       	cpi	r22, 0x04	; 4
    2cc8:	b1 f4       	brne	.+44     	; 0x2cf6 <oled_write_char_using_font+0xaa>
    2cca:	90 e0       	ldi	r25, 0x00	; 0
    2ccc:	88 0f       	add	r24, r24
    2cce:	99 1f       	adc	r25, r25
    2cd0:	88 0f       	add	r24, r24
    2cd2:	99 1f       	adc	r25, r25
    2cd4:	20 e0       	ldi	r18, 0x00	; 0
    2cd6:	30 e0       	ldi	r19, 0x00	; 0
    2cd8:	a0 e0       	ldi	r26, 0x00	; 0
    2cda:	b2 e1       	ldi	r27, 0x12	; 18
    2cdc:	f9 01       	movw	r30, r18
    2cde:	e8 0f       	add	r30, r24
    2ce0:	f9 1f       	adc	r31, r25
    2ce2:	e0 51       	subi	r30, 0x10	; 16
    2ce4:	fe 4e       	sbci	r31, 0xEE	; 238
    2ce6:	45 91       	lpm	r20, Z+
    2ce8:	54 91       	lpm	r21, Z
    2cea:	4c 93       	st	X, r20
    2cec:	2f 5f       	subi	r18, 0xFF	; 255
    2cee:	3f 4f       	sbci	r19, 0xFF	; 255
    2cf0:	24 30       	cpi	r18, 0x04	; 4
    2cf2:	31 05       	cpc	r19, r1
    2cf4:	99 f7       	brne	.-26     	; 0x2cdc <oled_write_char_using_font+0x90>
    2cf6:	08 95       	ret

00002cf8 <oled_write_string>:
    2cf8:	8f 92       	push	r8
    2cfa:	9f 92       	push	r9
    2cfc:	af 92       	push	r10
    2cfe:	bf 92       	push	r11
    2d00:	cf 92       	push	r12
    2d02:	df 92       	push	r13
    2d04:	ef 92       	push	r14
    2d06:	ff 92       	push	r15
    2d08:	0f 93       	push	r16
    2d0a:	1f 93       	push	r17
    2d0c:	cf 93       	push	r28
    2d0e:	df 93       	push	r29
    2d10:	88 2e       	mov	r8, r24
    2d12:	8b 01       	movw	r16, r22
    2d14:	94 2e       	mov	r9, r20
    2d16:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    2d1a:	78 01       	movw	r14, r16
    2d1c:	c0 e0       	ldi	r28, 0x00	; 0
    2d1e:	d0 e0       	ldi	r29, 0x00	; 0
    2d20:	a9 2c       	mov	r10, r9
    2d22:	b1 2c       	mov	r11, r1
    2d24:	68 94       	set
    2d26:	cc 24       	eor	r12, r12
    2d28:	c7 f8       	bld	r12, 7
    2d2a:	d1 2c       	mov	r13, r1
    2d2c:	19 c0       	rjmp	.+50     	; 0x2d60 <oled_write_string+0x68>
    2d2e:	c6 01       	movw	r24, r12
    2d30:	b5 01       	movw	r22, r10
    2d32:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2d36:	9b 01       	movw	r18, r22
    2d38:	ce 01       	movw	r24, r28
    2d3a:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2d3e:	89 2b       	or	r24, r25
    2d40:	41 f4       	brne	.+16     	; 0x2d52 <oled_write_string+0x5a>
    2d42:	ce 01       	movw	r24, r28
    2d44:	b9 01       	movw	r22, r18
    2d46:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2d4a:	88 2d       	mov	r24, r8
    2d4c:	86 0f       	add	r24, r22
    2d4e:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    2d52:	69 2d       	mov	r22, r9
    2d54:	f7 01       	movw	r30, r14
    2d56:	81 91       	ld	r24, Z+
    2d58:	7f 01       	movw	r14, r30
    2d5a:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <oled_write_char_using_font>
    2d5e:	21 96       	adiw	r28, 0x01	; 1
    2d60:	f8 01       	movw	r30, r16
    2d62:	01 90       	ld	r0, Z+
    2d64:	00 20       	and	r0, r0
    2d66:	e9 f7       	brne	.-6      	; 0x2d62 <oled_write_string+0x6a>
    2d68:	31 97       	sbiw	r30, 0x01	; 1
    2d6a:	e0 1b       	sub	r30, r16
    2d6c:	f1 0b       	sbc	r31, r17
    2d6e:	ce 17       	cp	r28, r30
    2d70:	df 07       	cpc	r29, r31
    2d72:	e8 f2       	brcs	.-70     	; 0x2d2e <oled_write_string+0x36>
    2d74:	80 e0       	ldi	r24, 0x00	; 0
    2d76:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2d7a:	df 91       	pop	r29
    2d7c:	cf 91       	pop	r28
    2d7e:	1f 91       	pop	r17
    2d80:	0f 91       	pop	r16
    2d82:	ff 90       	pop	r15
    2d84:	ef 90       	pop	r14
    2d86:	df 90       	pop	r13
    2d88:	cf 90       	pop	r12
    2d8a:	bf 90       	pop	r11
    2d8c:	af 90       	pop	r10
    2d8e:	9f 90       	pop	r9
    2d90:	8f 90       	pop	r8
    2d92:	08 95       	ret

00002d94 <oled_write_inverted_char_using_font>:
    2d94:	80 52       	subi	r24, 0x20	; 32
    2d96:	68 30       	cpi	r22, 0x08	; 8
    2d98:	f9 f4       	brne	.+62     	; 0x2dd8 <oled_write_inverted_char_using_font+0x44>
    2d9a:	90 e0       	ldi	r25, 0x00	; 0
    2d9c:	9c 01       	movw	r18, r24
    2d9e:	22 0f       	add	r18, r18
    2da0:	33 1f       	adc	r19, r19
    2da2:	22 0f       	add	r18, r18
    2da4:	33 1f       	adc	r19, r19
    2da6:	22 0f       	add	r18, r18
    2da8:	33 1f       	adc	r19, r19
    2daa:	29 5b       	subi	r18, 0xB9	; 185
    2dac:	3a 4e       	sbci	r19, 0xEA	; 234
    2dae:	88 0f       	add	r24, r24
    2db0:	99 1f       	adc	r25, r25
    2db2:	88 0f       	add	r24, r24
    2db4:	99 1f       	adc	r25, r25
    2db6:	88 0f       	add	r24, r24
    2db8:	99 1f       	adc	r25, r25
    2dba:	81 5b       	subi	r24, 0xB1	; 177
    2dbc:	9a 4e       	sbci	r25, 0xEA	; 234
    2dbe:	a0 e0       	ldi	r26, 0x00	; 0
    2dc0:	b2 e1       	ldi	r27, 0x12	; 18
    2dc2:	f9 01       	movw	r30, r18
    2dc4:	45 91       	lpm	r20, Z+
    2dc6:	54 91       	lpm	r21, Z
    2dc8:	40 95       	com	r20
    2dca:	4c 93       	st	X, r20
    2dcc:	2f 5f       	subi	r18, 0xFF	; 255
    2dce:	3f 4f       	sbci	r19, 0xFF	; 255
    2dd0:	82 17       	cp	r24, r18
    2dd2:	93 07       	cpc	r25, r19
    2dd4:	b1 f7       	brne	.-20     	; 0x2dc2 <oled_write_inverted_char_using_font+0x2e>
    2dd6:	08 95       	ret
    2dd8:	65 30       	cpi	r22, 0x05	; 5
    2dda:	d9 f4       	brne	.+54     	; 0x2e12 <oled_write_inverted_char_using_font+0x7e>
    2ddc:	90 e0       	ldi	r25, 0x00	; 0
    2dde:	9c 01       	movw	r18, r24
    2de0:	22 0f       	add	r18, r18
    2de2:	33 1f       	adc	r19, r19
    2de4:	22 0f       	add	r18, r18
    2de6:	33 1f       	adc	r19, r19
    2de8:	82 0f       	add	r24, r18
    2dea:	93 1f       	adc	r25, r19
    2dec:	20 e0       	ldi	r18, 0x00	; 0
    2dee:	30 e0       	ldi	r19, 0x00	; 0
    2df0:	a0 e0       	ldi	r26, 0x00	; 0
    2df2:	b2 e1       	ldi	r27, 0x12	; 18
    2df4:	f9 01       	movw	r30, r18
    2df6:	e8 0f       	add	r30, r24
    2df8:	f9 1f       	adc	r31, r25
    2dfa:	e4 59       	subi	r30, 0x94	; 148
    2dfc:	fc 4e       	sbci	r31, 0xEC	; 236
    2dfe:	45 91       	lpm	r20, Z+
    2e00:	54 91       	lpm	r21, Z
    2e02:	40 95       	com	r20
    2e04:	4c 93       	st	X, r20
    2e06:	2f 5f       	subi	r18, 0xFF	; 255
    2e08:	3f 4f       	sbci	r19, 0xFF	; 255
    2e0a:	25 30       	cpi	r18, 0x05	; 5
    2e0c:	31 05       	cpc	r19, r1
    2e0e:	91 f7       	brne	.-28     	; 0x2df4 <oled_write_inverted_char_using_font+0x60>
    2e10:	08 95       	ret
    2e12:	64 30       	cpi	r22, 0x04	; 4
    2e14:	b9 f4       	brne	.+46     	; 0x2e44 <oled_write_inverted_char_using_font+0xb0>
    2e16:	90 e0       	ldi	r25, 0x00	; 0
    2e18:	88 0f       	add	r24, r24
    2e1a:	99 1f       	adc	r25, r25
    2e1c:	88 0f       	add	r24, r24
    2e1e:	99 1f       	adc	r25, r25
    2e20:	20 e0       	ldi	r18, 0x00	; 0
    2e22:	30 e0       	ldi	r19, 0x00	; 0
    2e24:	a0 e0       	ldi	r26, 0x00	; 0
    2e26:	b2 e1       	ldi	r27, 0x12	; 18
    2e28:	f9 01       	movw	r30, r18
    2e2a:	e8 0f       	add	r30, r24
    2e2c:	f9 1f       	adc	r31, r25
    2e2e:	e0 51       	subi	r30, 0x10	; 16
    2e30:	fe 4e       	sbci	r31, 0xEE	; 238
    2e32:	45 91       	lpm	r20, Z+
    2e34:	54 91       	lpm	r21, Z
    2e36:	40 95       	com	r20
    2e38:	4c 93       	st	X, r20
    2e3a:	2f 5f       	subi	r18, 0xFF	; 255
    2e3c:	3f 4f       	sbci	r19, 0xFF	; 255
    2e3e:	24 30       	cpi	r18, 0x04	; 4
    2e40:	31 05       	cpc	r19, r1
    2e42:	91 f7       	brne	.-28     	; 0x2e28 <oled_write_inverted_char_using_font+0x94>
    2e44:	08 95       	ret

00002e46 <oled_write_string_inverted>:
    2e46:	8f 92       	push	r8
    2e48:	9f 92       	push	r9
    2e4a:	af 92       	push	r10
    2e4c:	bf 92       	push	r11
    2e4e:	cf 92       	push	r12
    2e50:	df 92       	push	r13
    2e52:	ef 92       	push	r14
    2e54:	ff 92       	push	r15
    2e56:	0f 93       	push	r16
    2e58:	1f 93       	push	r17
    2e5a:	cf 93       	push	r28
    2e5c:	df 93       	push	r29
    2e5e:	88 2e       	mov	r8, r24
    2e60:	8b 01       	movw	r16, r22
    2e62:	94 2e       	mov	r9, r20
    2e64:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    2e68:	78 01       	movw	r14, r16
    2e6a:	c0 e0       	ldi	r28, 0x00	; 0
    2e6c:	d0 e0       	ldi	r29, 0x00	; 0
    2e6e:	a9 2c       	mov	r10, r9
    2e70:	b1 2c       	mov	r11, r1
    2e72:	68 94       	set
    2e74:	cc 24       	eor	r12, r12
    2e76:	c7 f8       	bld	r12, 7
    2e78:	d1 2c       	mov	r13, r1
    2e7a:	19 c0       	rjmp	.+50     	; 0x2eae <oled_write_string_inverted+0x68>
    2e7c:	c6 01       	movw	r24, r12
    2e7e:	b5 01       	movw	r22, r10
    2e80:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2e84:	9b 01       	movw	r18, r22
    2e86:	ce 01       	movw	r24, r28
    2e88:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2e8c:	89 2b       	or	r24, r25
    2e8e:	41 f4       	brne	.+16     	; 0x2ea0 <oled_write_string_inverted+0x5a>
    2e90:	ce 01       	movw	r24, r28
    2e92:	b9 01       	movw	r22, r18
    2e94:	0e 94 b1 18 	call	0x3162	; 0x3162 <__divmodhi4>
    2e98:	88 2d       	mov	r24, r8
    2e9a:	86 0f       	add	r24, r22
    2e9c:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
    2ea0:	69 2d       	mov	r22, r9
    2ea2:	f7 01       	movw	r30, r14
    2ea4:	81 91       	ld	r24, Z+
    2ea6:	7f 01       	movw	r14, r30
    2ea8:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <oled_write_inverted_char_using_font>
    2eac:	21 96       	adiw	r28, 0x01	; 1
    2eae:	f8 01       	movw	r30, r16
    2eb0:	01 90       	ld	r0, Z+
    2eb2:	00 20       	and	r0, r0
    2eb4:	e9 f7       	brne	.-6      	; 0x2eb0 <oled_write_string_inverted+0x6a>
    2eb6:	31 97       	sbiw	r30, 0x01	; 1
    2eb8:	e0 1b       	sub	r30, r16
    2eba:	f1 0b       	sbc	r31, r17
    2ebc:	ce 17       	cp	r28, r30
    2ebe:	df 07       	cpc	r29, r31
    2ec0:	e8 f2       	brcs	.-70     	; 0x2e7c <oled_write_string_inverted+0x36>
    2ec2:	80 e0       	ldi	r24, 0x00	; 0
    2ec4:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
    2ec8:	df 91       	pop	r29
    2eca:	cf 91       	pop	r28
    2ecc:	1f 91       	pop	r17
    2ece:	0f 91       	pop	r16
    2ed0:	ff 90       	pop	r15
    2ed2:	ef 90       	pop	r14
    2ed4:	df 90       	pop	r13
    2ed6:	cf 90       	pop	r12
    2ed8:	bf 90       	pop	r11
    2eda:	af 90       	pop	r10
    2edc:	9f 90       	pop	r9
    2ede:	8f 90       	pop	r8
    2ee0:	08 95       	ret

00002ee2 <character_printer>:

//warning: array must have percieved height and width divisible by 8
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
    2ee2:	2f 92       	push	r2
    2ee4:	3f 92       	push	r3
    2ee6:	4f 92       	push	r4
    2ee8:	5f 92       	push	r5
    2eea:	6f 92       	push	r6
    2eec:	7f 92       	push	r7
    2eee:	8f 92       	push	r8
    2ef0:	9f 92       	push	r9
    2ef2:	af 92       	push	r10
    2ef4:	bf 92       	push	r11
    2ef6:	cf 92       	push	r12
    2ef8:	df 92       	push	r13
    2efa:	ef 92       	push	r14
    2efc:	ff 92       	push	r15
    2efe:	0f 93       	push	r16
    2f00:	1f 93       	push	r17
    2f02:	cf 93       	push	r28
    2f04:	df 93       	push	r29
    2f06:	cd b7       	in	r28, 0x3d	; 61
    2f08:	de b7       	in	r29, 0x3e	; 62
    2f0a:	27 97       	sbiw	r28, 0x07	; 7
    2f0c:	0f b6       	in	r0, 0x3f	; 63
    2f0e:	f8 94       	cli
    2f10:	de bf       	out	0x3e, r29	; 62
    2f12:	0f be       	out	0x3f, r0	; 63
    2f14:	cd bf       	out	0x3d, r28	; 61
		for (int line = 0; line < height/8; line++){
    2f16:	fa 01       	movw	r30, r20
    2f18:	ff 23       	and	r31, r31
    2f1a:	0c f4       	brge	.+2      	; 0x2f1e <character_printer+0x3c>
    2f1c:	37 96       	adiw	r30, 0x07	; 7
    2f1e:	af 01       	movw	r20, r30
    2f20:	55 95       	asr	r21
    2f22:	47 95       	ror	r20
    2f24:	55 95       	asr	r21
    2f26:	47 95       	ror	r20
    2f28:	55 95       	asr	r21
    2f2a:	47 95       	ror	r20
    2f2c:	5a 83       	std	Y+2, r21	; 0x02
    2f2e:	49 83       	std	Y+1, r20	; 0x01
    2f30:	14 16       	cp	r1, r20
    2f32:	15 06       	cpc	r1, r21
    2f34:	0c f0       	brlt	.+2      	; 0x2f38 <character_printer+0x56>
    2f36:	5a c0       	rjmp	.+180    	; 0x2fec <character_printer+0x10a>
    2f38:	2e 2c       	mov	r2, r14
    2f3a:	2d 83       	std	Y+5, r18	; 0x05
    2f3c:	3b 01       	movw	r6, r22
    2f3e:	fb 01       	movw	r30, r22
    2f40:	ee 0f       	add	r30, r30
    2f42:	ff 1f       	adc	r31, r31
    2f44:	ee 0f       	add	r30, r30
    2f46:	ff 1f       	adc	r31, r31
    2f48:	ee 0f       	add	r30, r30
    2f4a:	ff 1f       	adc	r31, r31
    2f4c:	fc 83       	std	Y+4, r31	; 0x04
    2f4e:	eb 83       	std	Y+3, r30	; 0x03
    2f50:	a8 2e       	mov	r10, r24
    2f52:	b9 2e       	mov	r11, r25
    2f54:	30 2e       	mov	r3, r16
    2f56:	81 2c       	mov	r8, r1
    2f58:	91 2c       	mov	r9, r1
    2f5a:	7f 83       	std	Y+7, r23	; 0x07
    2f5c:	6e 83       	std	Y+6, r22	; 0x06
	ext_ram[0] = c;
}
void oled_write_data(char c)
{
	volatile char *ext_ram = (char *) 0x1200;
	ext_ram[0] = c;
    2f5e:	0f 2e       	mov	r0, r31
    2f60:	c1 2c       	mov	r12, r1
    2f62:	f2 e1       	ldi	r31, 0x12	; 18
    2f64:	df 2e       	mov	r13, r31
    2f66:	f0 2d       	mov	r31, r0

//warning: array must have percieved height and width divisible by 8
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
		for (int line = 0; line < height/8; line++){
			int offset = line*width*8;
			for (int col = 0; col < width; col++){
    2f68:	16 14       	cp	r1, r6
    2f6a:	17 04       	cpc	r1, r7
    2f6c:	8c f5       	brge	.+98     	; 0x2fd0 <character_printer+0xee>
    2f6e:	75 01       	movw	r14, r10
    2f70:	e6 0c       	add	r14, r6
    2f72:	f7 1c       	adc	r15, r7
    2f74:	85 01       	movw	r16, r10
    2f76:	4d 80       	ldd	r4, Y+5	; 0x05
    2f78:	26 c0       	rjmp	.+76     	; 0x2fc6 <character_printer+0xe4>
				unsigned char c = 0b00000000;
				for (int i = 0; i < 8; i++){
					c |= (pgm_read_byte(&(arr[i*width + col + offset])) << i);
    2f7a:	84 91       	lpm	r24, Z
    2f7c:	90 e0       	ldi	r25, 0x00	; 0
    2f7e:	02 2e       	mov	r0, r18
    2f80:	02 c0       	rjmp	.+4      	; 0x2f86 <character_printer+0xa4>
    2f82:	88 0f       	add	r24, r24
    2f84:	99 1f       	adc	r25, r25
    2f86:	0a 94       	dec	r0
    2f88:	e2 f7       	brpl	.-8      	; 0x2f82 <character_printer+0xa0>
    2f8a:	58 2a       	or	r5, r24
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
		for (int line = 0; line < height/8; line++){
			int offset = line*width*8;
			for (int col = 0; col < width; col++){
				unsigned char c = 0b00000000;
				for (int i = 0; i < 8; i++){
    2f8c:	2f 5f       	subi	r18, 0xFF	; 255
    2f8e:	3f 4f       	sbci	r19, 0xFF	; 255
    2f90:	4e 81       	ldd	r20, Y+6	; 0x06
    2f92:	5f 81       	ldd	r21, Y+7	; 0x07
    2f94:	e4 0f       	add	r30, r20
    2f96:	f5 1f       	adc	r31, r21
    2f98:	28 30       	cpi	r18, 0x08	; 8
    2f9a:	31 05       	cpc	r19, r1
    2f9c:	71 f7       	brne	.-36     	; 0x2f7a <character_printer+0x98>
					c |= (pgm_read_byte(&(arr[i*width + col + offset])) << i);
				}
				go_to_line(line + y_offset);
    2f9e:	83 2d       	mov	r24, r3
    2fa0:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
				go_to_column(col + x_offset);
    2fa4:	84 2d       	mov	r24, r4
    2fa6:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
				if(inverted){
    2faa:	22 20       	and	r2, r2
    2fac:	21 f0       	breq	.+8      	; 0x2fb6 <character_printer+0xd4>
					oled_write_data(~c);
    2fae:	50 94       	com	r5
	ext_ram[0] = c;
}
void oled_write_data(char c)
{
	volatile char *ext_ram = (char *) 0x1200;
	ext_ram[0] = c;
    2fb0:	f6 01       	movw	r30, r12
    2fb2:	50 82       	st	Z, r5
    2fb4:	02 c0       	rjmp	.+4      	; 0x2fba <character_printer+0xd8>
    2fb6:	f6 01       	movw	r30, r12
    2fb8:	50 82       	st	Z, r5
    2fba:	43 94       	inc	r4
    2fbc:	0f 5f       	subi	r16, 0xFF	; 255
    2fbe:	1f 4f       	sbci	r17, 0xFF	; 255

//warning: array must have percieved height and width divisible by 8
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
		for (int line = 0; line < height/8; line++){
			int offset = line*width*8;
			for (int col = 0; col < width; col++){
    2fc0:	0e 15       	cp	r16, r14
    2fc2:	1f 05       	cpc	r17, r15
    2fc4:	29 f0       	breq	.+10     	; 0x2fd0 <character_printer+0xee>
	
}

//warning: array must have percieved height and width divisible by 8
void character_printer(uint8_t arr[], int width, int height, uint8_t x_offset, uint8_t y_offset, uint8_t inverted){
		for (int line = 0; line < height/8; line++){
    2fc6:	f8 01       	movw	r30, r16
    2fc8:	20 e0       	ldi	r18, 0x00	; 0
    2fca:	30 e0       	ldi	r19, 0x00	; 0
    2fcc:	51 2c       	mov	r5, r1
    2fce:	d5 cf       	rjmp	.-86     	; 0x2f7a <character_printer+0x98>
    2fd0:	ff ef       	ldi	r31, 0xFF	; 255
    2fd2:	8f 1a       	sub	r8, r31
    2fd4:	9f 0a       	sbc	r9, r31
    2fd6:	33 94       	inc	r3
    2fd8:	2b 81       	ldd	r18, Y+3	; 0x03
    2fda:	3c 81       	ldd	r19, Y+4	; 0x04
    2fdc:	a2 0e       	add	r10, r18
    2fde:	b3 1e       	adc	r11, r19
    2fe0:	49 81       	ldd	r20, Y+1	; 0x01
    2fe2:	5a 81       	ldd	r21, Y+2	; 0x02
    2fe4:	84 16       	cp	r8, r20
    2fe6:	95 06       	cpc	r9, r21
    2fe8:	09 f0       	breq	.+2      	; 0x2fec <character_printer+0x10a>
    2fea:	be cf       	rjmp	.-132    	; 0x2f68 <character_printer+0x86>
				else{
					oled_write_data(c);
				}
			}
		}
}
    2fec:	27 96       	adiw	r28, 0x07	; 7
    2fee:	0f b6       	in	r0, 0x3f	; 63
    2ff0:	f8 94       	cli
    2ff2:	de bf       	out	0x3e, r29	; 62
    2ff4:	0f be       	out	0x3f, r0	; 63
    2ff6:	cd bf       	out	0x3d, r28	; 61
    2ff8:	df 91       	pop	r29
    2ffa:	cf 91       	pop	r28
    2ffc:	1f 91       	pop	r17
    2ffe:	0f 91       	pop	r16
    3000:	ff 90       	pop	r15
    3002:	ef 90       	pop	r14
    3004:	df 90       	pop	r13
    3006:	cf 90       	pop	r12
    3008:	bf 90       	pop	r11
    300a:	af 90       	pop	r10
    300c:	9f 90       	pop	r9
    300e:	8f 90       	pop	r8
    3010:	7f 90       	pop	r7
    3012:	6f 90       	pop	r6
    3014:	5f 90       	pop	r5
    3016:	4f 90       	pop	r4
    3018:	3f 90       	pop	r3
    301a:	2f 90       	pop	r2
    301c:	08 95       	ret

0000301e <oled_drawing_sram>:
		oled_write_data(byteToWrite);
	}
	
}
*/
void oled_drawing_sram(char * sram, uint8_t l_slider, uint8_t r_slider, uint8_t write){
    301e:	ef 92       	push	r14
    3020:	ff 92       	push	r15
    3022:	0f 93       	push	r16
    3024:	1f 93       	push	r17
    3026:	cf 93       	push	r28
    3028:	df 93       	push	r29
    302a:	7c 01       	movw	r14, r24
    302c:	c6 2f       	mov	r28, r22
    302e:	12 2f       	mov	r17, r18
    3030:	d4 2f       	mov	r29, r20
    3032:	40 34       	cpi	r20, 0x40	; 64
    3034:	08 f0       	brcs	.+2      	; 0x3038 <oled_drawing_sram+0x1a>
    3036:	df e3       	ldi	r29, 0x3F	; 63
	char byteToWrite;
	if(r_slider > 63){
		r_slider = 63;
	}
	go_to_line(7-(r_slider/8));
    3038:	0d 2f       	mov	r16, r29
    303a:	06 95       	lsr	r16
    303c:	06 95       	lsr	r16
    303e:	06 95       	lsr	r16
    3040:	87 e0       	ldi	r24, 0x07	; 7
    3042:	80 1b       	sub	r24, r16
    3044:	0e 94 e7 15 	call	0x2bce	; 0x2bce <go_to_line>
	go_to_column(l_slider);
    3048:	8c 2f       	mov	r24, r28
    304a:	0e 94 ec 15 	call	0x2bd8	; 0x2bd8 <go_to_column>
	
	byteToWrite = sram[1000+(7-(r_slider/8))*l_slider+l_slider] | (1<<(7-(r_slider%8)));
    304e:	6c 2f       	mov	r22, r28
    3050:	70 e0       	ldi	r23, 0x00	; 0
    3052:	87 e0       	ldi	r24, 0x07	; 7
    3054:	90 e0       	ldi	r25, 0x00	; 0
    3056:	80 1b       	sub	r24, r16
    3058:	91 09       	sbc	r25, r1
    305a:	86 9f       	mul	r24, r22
    305c:	f0 01       	movw	r30, r0
    305e:	87 9f       	mul	r24, r23
    3060:	f0 0d       	add	r31, r0
    3062:	96 9f       	mul	r25, r22
    3064:	f0 0d       	add	r31, r0
    3066:	11 24       	eor	r1, r1
    3068:	e8 51       	subi	r30, 0x18	; 24
    306a:	fc 4f       	sbci	r31, 0xFC	; 252
    306c:	e6 0f       	add	r30, r22
    306e:	f7 1f       	adc	r31, r23
    3070:	ee 0d       	add	r30, r14
    3072:	ff 1d       	adc	r31, r15
    3074:	4d 2f       	mov	r20, r29
    3076:	50 e0       	ldi	r21, 0x00	; 0
    3078:	40 95       	com	r20
    307a:	50 95       	com	r21
    307c:	47 70       	andi	r20, 0x07	; 7
    307e:	55 27       	eor	r21, r21
    3080:	81 e0       	ldi	r24, 0x01	; 1
    3082:	90 e0       	ldi	r25, 0x00	; 0
    3084:	02 c0       	rjmp	.+4      	; 0x308a <oled_drawing_sram+0x6c>
    3086:	88 0f       	add	r24, r24
    3088:	99 1f       	adc	r25, r25
    308a:	4a 95       	dec	r20
    308c:	e2 f7       	brpl	.-8      	; 0x3086 <oled_drawing_sram+0x68>
    308e:	90 81       	ld	r25, Z
    3090:	89 2b       	or	r24, r25
	sram[1000+(7-(r_slider/8))*l_slider+l_slider] = byteToWrite;
    3092:	80 83       	st	Z, r24
	if(!write){
    3094:	11 11       	cpse	r17, r1
    3096:	04 c0       	rjmp	.+8      	; 0x30a0 <oled_drawing_sram+0x82>
	ext_ram[0] = c;
}
void oled_write_data(char c)
{
	volatile char *ext_ram = (char *) 0x1200;
	ext_ram[0] = c;
    3098:	10 92 00 12 	sts	0x1200, r1	; 0x801200 <__bss_end+0xe05>
	
	byteToWrite = sram[1000+(7-(r_slider/8))*l_slider+l_slider] | (1<<(7-(r_slider%8)));
	sram[1000+(7-(r_slider/8))*l_slider+l_slider] = byteToWrite;
	if(!write){
		oled_write_data(0b00000000);
		sram[1000+(7-(r_slider/8))*l_slider+l_slider] = 0b00000000;
    309c:	10 82       	st	Z, r1
    309e:	02 c0       	rjmp	.+4      	; 0x30a4 <oled_drawing_sram+0x86>
	ext_ram[0] = c;
}
void oled_write_data(char c)
{
	volatile char *ext_ram = (char *) 0x1200;
	ext_ram[0] = c;
    30a0:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xe05>
		}
	else{
		oled_write_data(byteToWrite);
	}
	
}
    30a4:	df 91       	pop	r29
    30a6:	cf 91       	pop	r28
    30a8:	1f 91       	pop	r17
    30aa:	0f 91       	pop	r16
    30ac:	ff 90       	pop	r15
    30ae:	ef 90       	pop	r14
    30b0:	08 95       	ret

000030b2 <reset_oled_array_sram>:
			//oled_array[i][j] = 0b00000000;
		}
	}
}
*/
void reset_oled_array_sram(char * sram){
    30b2:	41 e0       	ldi	r20, 0x01	; 1
    30b4:	50 e0       	ldi	r21, 0x00	; 0
    30b6:	0d c0       	rjmp	.+26     	; 0x30d2 <reset_oled_array_sram+0x20>
	for (int i = 0; i < 8; i++){
		for (int j = 0; j < 100; j++){
			sram[1000+i*j+j] = 0b00000000;
    30b8:	10 82       	st	Z, r1
    30ba:	21 50       	subi	r18, 0x01	; 1
    30bc:	31 09       	sbc	r19, r1
    30be:	e4 0f       	add	r30, r20
    30c0:	f5 1f       	adc	r31, r21
	}
}
*/
void reset_oled_array_sram(char * sram){
	for (int i = 0; i < 8; i++){
		for (int j = 0; j < 100; j++){
    30c2:	21 15       	cp	r18, r1
    30c4:	31 05       	cpc	r19, r1
    30c6:	c1 f7       	brne	.-16     	; 0x30b8 <reset_oled_array_sram+0x6>
    30c8:	4f 5f       	subi	r20, 0xFF	; 255
    30ca:	5f 4f       	sbci	r21, 0xFF	; 255
		}
	}
}
*/
void reset_oled_array_sram(char * sram){
	for (int i = 0; i < 8; i++){
    30cc:	49 30       	cpi	r20, 0x09	; 9
    30ce:	51 05       	cpc	r21, r1
    30d0:	31 f0       	breq	.+12     	; 0x30de <reset_oled_array_sram+0x2c>
    30d2:	fc 01       	movw	r30, r24
    30d4:	e8 51       	subi	r30, 0x18	; 24
    30d6:	fc 4f       	sbci	r31, 0xFC	; 252
			//oled_array[i][j] = 0b00000000;
		}
	}
}
*/
void reset_oled_array_sram(char * sram){
    30d8:	24 e6       	ldi	r18, 0x64	; 100
    30da:	30 e0       	ldi	r19, 0x00	; 0
    30dc:	ed cf       	rjmp	.-38     	; 0x30b8 <reset_oled_array_sram+0x6>
    30de:	08 95       	ret

000030e0 <draw_sram>:
		oled_write_data(byteToWrite);
	}
	
}

void draw_sram(){
    30e0:	cf 93       	push	r28
    30e2:	df 93       	push	r29
	volatile char * sram = (char *) 0x1800;
	uint8_t toggle = 0b11111111;
	clear_oled();
    30e4:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
	while(!(PIND & (1<< PIND4))){
    30e8:	84 99       	sbic	0x10, 4	; 16
    30ea:	1f c0       	rjmp	.+62     	; 0x312a <draw_sram+0x4a>
    30ec:	cf ef       	ldi	r28, 0xFF	; 255
		if(PIND & (1<< PIND5)){
    30ee:	85 9b       	sbis	0x10, 5	; 16
    30f0:	06 c0       	rjmp	.+12     	; 0x30fe <draw_sram+0x1e>
			clear_oled();
    30f2:	0e 94 f6 15 	call	0x2bec	; 0x2bec <clear_oled>
			reset_oled_array_sram(sram);
    30f6:	80 e0       	ldi	r24, 0x00	; 0
    30f8:	98 e1       	ldi	r25, 0x18	; 24
    30fa:	0e 94 59 18 	call	0x30b2	; 0x30b2 <reset_oled_array_sram>
		}
		if(button_check(PINB & (1<< PINB1)))
    30fe:	86 b3       	in	r24, 0x16	; 22
    3100:	82 70       	andi	r24, 0x02	; 2
    3102:	0e 94 eb 14 	call	0x29d6	; 0x29d6 <button_check>
    3106:	81 11       	cpse	r24, r1
		{
			toggle = ~toggle;
    3108:	c0 95       	com	r28
		}
		update_adc_values();
    310a:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <update_adc_values>
		oled_drawing_sram(sram, get_slidervals().l_val, get_slidervals().r_val, toggle);
    310e:	0e 94 db 14 	call	0x29b6	; 0x29b6 <get_slidervals>
    3112:	d9 2f       	mov	r29, r25
    3114:	0e 94 db 14 	call	0x29b6	; 0x29b6 <get_slidervals>
    3118:	2c 2f       	mov	r18, r28
    311a:	4d 2f       	mov	r20, r29
    311c:	68 2f       	mov	r22, r24
    311e:	80 e0       	ldi	r24, 0x00	; 0
    3120:	98 e1       	ldi	r25, 0x18	; 24
    3122:	0e 94 0f 18 	call	0x301e	; 0x301e <oled_drawing_sram>

void draw_sram(){
	volatile char * sram = (char *) 0x1800;
	uint8_t toggle = 0b11111111;
	clear_oled();
	while(!(PIND & (1<< PIND4))){
    3126:	84 9b       	sbis	0x10, 4	; 16
    3128:	e2 cf       	rjmp	.-60     	; 0x30ee <draw_sram+0xe>
		}
		update_adc_values();
		oled_drawing_sram(sram, get_slidervals().l_val, get_slidervals().r_val, toggle);
	}
	return;
}
    312a:	df 91       	pop	r29
    312c:	cf 91       	pop	r28
    312e:	08 95       	ret

00003130 <USART_Transmit>:
	UCSR1C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
	clear_bit(UCSR0C, 0); // Clock polarity
	fdevopen(USART_Transmit, USART_Receive);
}
void USART_Transmit(unsigned char data){
	while (!(UCSR0A & (1<<UDRE0)));
    3130:	5d 9b       	sbis	0x0b, 5	; 11
    3132:	fe cf       	rjmp	.-4      	; 0x3130 <USART_Transmit>
	
	UDR0 = data;
    3134:	8c b9       	out	0x0c, r24	; 12
    3136:	08 95       	ret

00003138 <USART_Receive>:
}

unsigned int USART_Receive(void)
{
	
	while (!(UCSR0A & (1<<RXC0)));
    3138:	5f 9b       	sbis	0x0b, 7	; 11
    313a:	fe cf       	rjmp	.-4      	; 0x3138 <USART_Receive>
	

	return UDR0;
    313c:	8c b1       	in	r24, 0x0c	; 12
    313e:	90 e0       	ldi	r25, 0x00	; 0
    3140:	08 95       	ret

00003142 <USART_Init>:
#include <stdio.h>
#define clear_bit( reg, bit ) (reg &= ~(1 << bit))

void USART_Init (unsigned int ubrr ){
	
	UBRR0H = (unsigned char)(ubrr>>8);
    3142:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
    3144:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    3146:	88 e1       	ldi	r24, 0x18	; 24
    3148:	8a b9       	out	0x0a, r24	; 10
	
	UCSR1C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
    314a:	8e e8       	ldi	r24, 0x8E	; 142
    314c:	8c bf       	out	0x3c, r24	; 60
	clear_bit(UCSR0C, 0); // Clock polarity
    314e:	80 b5       	in	r24, 0x20	; 32
    3150:	8e 7f       	andi	r24, 0xFE	; 254
    3152:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
    3154:	6c e9       	ldi	r22, 0x9C	; 156
    3156:	78 e1       	ldi	r23, 0x18	; 24
    3158:	88 e9       	ldi	r24, 0x98	; 152
    315a:	98 e1       	ldi	r25, 0x18	; 24
    315c:	0e 94 56 1a 	call	0x34ac	; 0x34ac <fdevopen>
    3160:	08 95       	ret

00003162 <__divmodhi4>:
    3162:	97 fb       	bst	r25, 7
    3164:	07 2e       	mov	r0, r23
    3166:	16 f4       	brtc	.+4      	; 0x316c <__divmodhi4+0xa>
    3168:	00 94       	com	r0
    316a:	07 d0       	rcall	.+14     	; 0x317a <__divmodhi4_neg1>
    316c:	77 fd       	sbrc	r23, 7
    316e:	09 d0       	rcall	.+18     	; 0x3182 <__divmodhi4_neg2>
    3170:	0e 94 c5 18 	call	0x318a	; 0x318a <__udivmodhi4>
    3174:	07 fc       	sbrc	r0, 7
    3176:	05 d0       	rcall	.+10     	; 0x3182 <__divmodhi4_neg2>
    3178:	3e f4       	brtc	.+14     	; 0x3188 <__divmodhi4_exit>

0000317a <__divmodhi4_neg1>:
    317a:	90 95       	com	r25
    317c:	81 95       	neg	r24
    317e:	9f 4f       	sbci	r25, 0xFF	; 255
    3180:	08 95       	ret

00003182 <__divmodhi4_neg2>:
    3182:	70 95       	com	r23
    3184:	61 95       	neg	r22
    3186:	7f 4f       	sbci	r23, 0xFF	; 255

00003188 <__divmodhi4_exit>:
    3188:	08 95       	ret

0000318a <__udivmodhi4>:
    318a:	aa 1b       	sub	r26, r26
    318c:	bb 1b       	sub	r27, r27
    318e:	51 e1       	ldi	r21, 0x11	; 17
    3190:	07 c0       	rjmp	.+14     	; 0x31a0 <__udivmodhi4_ep>

00003192 <__udivmodhi4_loop>:
    3192:	aa 1f       	adc	r26, r26
    3194:	bb 1f       	adc	r27, r27
    3196:	a6 17       	cp	r26, r22
    3198:	b7 07       	cpc	r27, r23
    319a:	10 f0       	brcs	.+4      	; 0x31a0 <__udivmodhi4_ep>
    319c:	a6 1b       	sub	r26, r22
    319e:	b7 0b       	sbc	r27, r23

000031a0 <__udivmodhi4_ep>:
    31a0:	88 1f       	adc	r24, r24
    31a2:	99 1f       	adc	r25, r25
    31a4:	5a 95       	dec	r21
    31a6:	a9 f7       	brne	.-22     	; 0x3192 <__udivmodhi4_loop>
    31a8:	80 95       	com	r24
    31aa:	90 95       	com	r25
    31ac:	bc 01       	movw	r22, r24
    31ae:	cd 01       	movw	r24, r26
    31b0:	08 95       	ret

000031b2 <malloc>:
    31b2:	0f 93       	push	r16
    31b4:	1f 93       	push	r17
    31b6:	cf 93       	push	r28
    31b8:	df 93       	push	r29
    31ba:	82 30       	cpi	r24, 0x02	; 2
    31bc:	91 05       	cpc	r25, r1
    31be:	10 f4       	brcc	.+4      	; 0x31c4 <malloc+0x12>
    31c0:	82 e0       	ldi	r24, 0x02	; 2
    31c2:	90 e0       	ldi	r25, 0x00	; 0
    31c4:	e0 91 f3 03 	lds	r30, 0x03F3	; 0x8003f3 <__flp>
    31c8:	f0 91 f4 03 	lds	r31, 0x03F4	; 0x8003f4 <__flp+0x1>
    31cc:	20 e0       	ldi	r18, 0x00	; 0
    31ce:	30 e0       	ldi	r19, 0x00	; 0
    31d0:	a0 e0       	ldi	r26, 0x00	; 0
    31d2:	b0 e0       	ldi	r27, 0x00	; 0
    31d4:	30 97       	sbiw	r30, 0x00	; 0
    31d6:	19 f1       	breq	.+70     	; 0x321e <malloc+0x6c>
    31d8:	40 81       	ld	r20, Z
    31da:	51 81       	ldd	r21, Z+1	; 0x01
    31dc:	02 81       	ldd	r16, Z+2	; 0x02
    31de:	13 81       	ldd	r17, Z+3	; 0x03
    31e0:	48 17       	cp	r20, r24
    31e2:	59 07       	cpc	r21, r25
    31e4:	c8 f0       	brcs	.+50     	; 0x3218 <malloc+0x66>
    31e6:	84 17       	cp	r24, r20
    31e8:	95 07       	cpc	r25, r21
    31ea:	69 f4       	brne	.+26     	; 0x3206 <malloc+0x54>
    31ec:	10 97       	sbiw	r26, 0x00	; 0
    31ee:	31 f0       	breq	.+12     	; 0x31fc <malloc+0x4a>
    31f0:	12 96       	adiw	r26, 0x02	; 2
    31f2:	0c 93       	st	X, r16
    31f4:	12 97       	sbiw	r26, 0x02	; 2
    31f6:	13 96       	adiw	r26, 0x03	; 3
    31f8:	1c 93       	st	X, r17
    31fa:	27 c0       	rjmp	.+78     	; 0x324a <malloc+0x98>
    31fc:	00 93 f3 03 	sts	0x03F3, r16	; 0x8003f3 <__flp>
    3200:	10 93 f4 03 	sts	0x03F4, r17	; 0x8003f4 <__flp+0x1>
    3204:	22 c0       	rjmp	.+68     	; 0x324a <malloc+0x98>
    3206:	21 15       	cp	r18, r1
    3208:	31 05       	cpc	r19, r1
    320a:	19 f0       	breq	.+6      	; 0x3212 <malloc+0x60>
    320c:	42 17       	cp	r20, r18
    320e:	53 07       	cpc	r21, r19
    3210:	18 f4       	brcc	.+6      	; 0x3218 <malloc+0x66>
    3212:	9a 01       	movw	r18, r20
    3214:	bd 01       	movw	r22, r26
    3216:	ef 01       	movw	r28, r30
    3218:	df 01       	movw	r26, r30
    321a:	f8 01       	movw	r30, r16
    321c:	db cf       	rjmp	.-74     	; 0x31d4 <malloc+0x22>
    321e:	21 15       	cp	r18, r1
    3220:	31 05       	cpc	r19, r1
    3222:	f9 f0       	breq	.+62     	; 0x3262 <malloc+0xb0>
    3224:	28 1b       	sub	r18, r24
    3226:	39 0b       	sbc	r19, r25
    3228:	24 30       	cpi	r18, 0x04	; 4
    322a:	31 05       	cpc	r19, r1
    322c:	80 f4       	brcc	.+32     	; 0x324e <malloc+0x9c>
    322e:	8a 81       	ldd	r24, Y+2	; 0x02
    3230:	9b 81       	ldd	r25, Y+3	; 0x03
    3232:	61 15       	cp	r22, r1
    3234:	71 05       	cpc	r23, r1
    3236:	21 f0       	breq	.+8      	; 0x3240 <malloc+0x8e>
    3238:	fb 01       	movw	r30, r22
    323a:	93 83       	std	Z+3, r25	; 0x03
    323c:	82 83       	std	Z+2, r24	; 0x02
    323e:	04 c0       	rjmp	.+8      	; 0x3248 <malloc+0x96>
    3240:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <__flp+0x1>
    3244:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <__flp>
    3248:	fe 01       	movw	r30, r28
    324a:	32 96       	adiw	r30, 0x02	; 2
    324c:	44 c0       	rjmp	.+136    	; 0x32d6 <malloc+0x124>
    324e:	fe 01       	movw	r30, r28
    3250:	e2 0f       	add	r30, r18
    3252:	f3 1f       	adc	r31, r19
    3254:	81 93       	st	Z+, r24
    3256:	91 93       	st	Z+, r25
    3258:	22 50       	subi	r18, 0x02	; 2
    325a:	31 09       	sbc	r19, r1
    325c:	39 83       	std	Y+1, r19	; 0x01
    325e:	28 83       	st	Y, r18
    3260:	3a c0       	rjmp	.+116    	; 0x32d6 <malloc+0x124>
    3262:	20 91 f1 03 	lds	r18, 0x03F1	; 0x8003f1 <__brkval>
    3266:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <__brkval+0x1>
    326a:	23 2b       	or	r18, r19
    326c:	41 f4       	brne	.+16     	; 0x327e <malloc+0xcc>
    326e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    3272:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    3276:	30 93 f2 03 	sts	0x03F2, r19	; 0x8003f2 <__brkval+0x1>
    327a:	20 93 f1 03 	sts	0x03F1, r18	; 0x8003f1 <__brkval>
    327e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    3282:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    3286:	21 15       	cp	r18, r1
    3288:	31 05       	cpc	r19, r1
    328a:	41 f4       	brne	.+16     	; 0x329c <malloc+0xea>
    328c:	2d b7       	in	r18, 0x3d	; 61
    328e:	3e b7       	in	r19, 0x3e	; 62
    3290:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    3294:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    3298:	24 1b       	sub	r18, r20
    329a:	35 0b       	sbc	r19, r21
    329c:	e0 91 f1 03 	lds	r30, 0x03F1	; 0x8003f1 <__brkval>
    32a0:	f0 91 f2 03 	lds	r31, 0x03F2	; 0x8003f2 <__brkval+0x1>
    32a4:	e2 17       	cp	r30, r18
    32a6:	f3 07       	cpc	r31, r19
    32a8:	a0 f4       	brcc	.+40     	; 0x32d2 <malloc+0x120>
    32aa:	2e 1b       	sub	r18, r30
    32ac:	3f 0b       	sbc	r19, r31
    32ae:	28 17       	cp	r18, r24
    32b0:	39 07       	cpc	r19, r25
    32b2:	78 f0       	brcs	.+30     	; 0x32d2 <malloc+0x120>
    32b4:	ac 01       	movw	r20, r24
    32b6:	4e 5f       	subi	r20, 0xFE	; 254
    32b8:	5f 4f       	sbci	r21, 0xFF	; 255
    32ba:	24 17       	cp	r18, r20
    32bc:	35 07       	cpc	r19, r21
    32be:	48 f0       	brcs	.+18     	; 0x32d2 <malloc+0x120>
    32c0:	4e 0f       	add	r20, r30
    32c2:	5f 1f       	adc	r21, r31
    32c4:	50 93 f2 03 	sts	0x03F2, r21	; 0x8003f2 <__brkval+0x1>
    32c8:	40 93 f1 03 	sts	0x03F1, r20	; 0x8003f1 <__brkval>
    32cc:	81 93       	st	Z+, r24
    32ce:	91 93       	st	Z+, r25
    32d0:	02 c0       	rjmp	.+4      	; 0x32d6 <malloc+0x124>
    32d2:	e0 e0       	ldi	r30, 0x00	; 0
    32d4:	f0 e0       	ldi	r31, 0x00	; 0
    32d6:	cf 01       	movw	r24, r30
    32d8:	df 91       	pop	r29
    32da:	cf 91       	pop	r28
    32dc:	1f 91       	pop	r17
    32de:	0f 91       	pop	r16
    32e0:	08 95       	ret

000032e2 <free>:
    32e2:	cf 93       	push	r28
    32e4:	df 93       	push	r29
    32e6:	00 97       	sbiw	r24, 0x00	; 0
    32e8:	09 f4       	brne	.+2      	; 0x32ec <free+0xa>
    32ea:	81 c0       	rjmp	.+258    	; 0x33ee <free+0x10c>
    32ec:	fc 01       	movw	r30, r24
    32ee:	32 97       	sbiw	r30, 0x02	; 2
    32f0:	13 82       	std	Z+3, r1	; 0x03
    32f2:	12 82       	std	Z+2, r1	; 0x02
    32f4:	a0 91 f3 03 	lds	r26, 0x03F3	; 0x8003f3 <__flp>
    32f8:	b0 91 f4 03 	lds	r27, 0x03F4	; 0x8003f4 <__flp+0x1>
    32fc:	10 97       	sbiw	r26, 0x00	; 0
    32fe:	81 f4       	brne	.+32     	; 0x3320 <free+0x3e>
    3300:	20 81       	ld	r18, Z
    3302:	31 81       	ldd	r19, Z+1	; 0x01
    3304:	82 0f       	add	r24, r18
    3306:	93 1f       	adc	r25, r19
    3308:	20 91 f1 03 	lds	r18, 0x03F1	; 0x8003f1 <__brkval>
    330c:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <__brkval+0x1>
    3310:	28 17       	cp	r18, r24
    3312:	39 07       	cpc	r19, r25
    3314:	51 f5       	brne	.+84     	; 0x336a <free+0x88>
    3316:	f0 93 f2 03 	sts	0x03F2, r31	; 0x8003f2 <__brkval+0x1>
    331a:	e0 93 f1 03 	sts	0x03F1, r30	; 0x8003f1 <__brkval>
    331e:	67 c0       	rjmp	.+206    	; 0x33ee <free+0x10c>
    3320:	ed 01       	movw	r28, r26
    3322:	20 e0       	ldi	r18, 0x00	; 0
    3324:	30 e0       	ldi	r19, 0x00	; 0
    3326:	ce 17       	cp	r28, r30
    3328:	df 07       	cpc	r29, r31
    332a:	40 f4       	brcc	.+16     	; 0x333c <free+0x5a>
    332c:	4a 81       	ldd	r20, Y+2	; 0x02
    332e:	5b 81       	ldd	r21, Y+3	; 0x03
    3330:	9e 01       	movw	r18, r28
    3332:	41 15       	cp	r20, r1
    3334:	51 05       	cpc	r21, r1
    3336:	f1 f0       	breq	.+60     	; 0x3374 <free+0x92>
    3338:	ea 01       	movw	r28, r20
    333a:	f5 cf       	rjmp	.-22     	; 0x3326 <free+0x44>
    333c:	d3 83       	std	Z+3, r29	; 0x03
    333e:	c2 83       	std	Z+2, r28	; 0x02
    3340:	40 81       	ld	r20, Z
    3342:	51 81       	ldd	r21, Z+1	; 0x01
    3344:	84 0f       	add	r24, r20
    3346:	95 1f       	adc	r25, r21
    3348:	c8 17       	cp	r28, r24
    334a:	d9 07       	cpc	r29, r25
    334c:	59 f4       	brne	.+22     	; 0x3364 <free+0x82>
    334e:	88 81       	ld	r24, Y
    3350:	99 81       	ldd	r25, Y+1	; 0x01
    3352:	84 0f       	add	r24, r20
    3354:	95 1f       	adc	r25, r21
    3356:	02 96       	adiw	r24, 0x02	; 2
    3358:	91 83       	std	Z+1, r25	; 0x01
    335a:	80 83       	st	Z, r24
    335c:	8a 81       	ldd	r24, Y+2	; 0x02
    335e:	9b 81       	ldd	r25, Y+3	; 0x03
    3360:	93 83       	std	Z+3, r25	; 0x03
    3362:	82 83       	std	Z+2, r24	; 0x02
    3364:	21 15       	cp	r18, r1
    3366:	31 05       	cpc	r19, r1
    3368:	29 f4       	brne	.+10     	; 0x3374 <free+0x92>
    336a:	f0 93 f4 03 	sts	0x03F4, r31	; 0x8003f4 <__flp+0x1>
    336e:	e0 93 f3 03 	sts	0x03F3, r30	; 0x8003f3 <__flp>
    3372:	3d c0       	rjmp	.+122    	; 0x33ee <free+0x10c>
    3374:	e9 01       	movw	r28, r18
    3376:	fb 83       	std	Y+3, r31	; 0x03
    3378:	ea 83       	std	Y+2, r30	; 0x02
    337a:	49 91       	ld	r20, Y+
    337c:	59 91       	ld	r21, Y+
    337e:	c4 0f       	add	r28, r20
    3380:	d5 1f       	adc	r29, r21
    3382:	ec 17       	cp	r30, r28
    3384:	fd 07       	cpc	r31, r29
    3386:	61 f4       	brne	.+24     	; 0x33a0 <free+0xbe>
    3388:	80 81       	ld	r24, Z
    338a:	91 81       	ldd	r25, Z+1	; 0x01
    338c:	84 0f       	add	r24, r20
    338e:	95 1f       	adc	r25, r21
    3390:	02 96       	adiw	r24, 0x02	; 2
    3392:	e9 01       	movw	r28, r18
    3394:	99 83       	std	Y+1, r25	; 0x01
    3396:	88 83       	st	Y, r24
    3398:	82 81       	ldd	r24, Z+2	; 0x02
    339a:	93 81       	ldd	r25, Z+3	; 0x03
    339c:	9b 83       	std	Y+3, r25	; 0x03
    339e:	8a 83       	std	Y+2, r24	; 0x02
    33a0:	e0 e0       	ldi	r30, 0x00	; 0
    33a2:	f0 e0       	ldi	r31, 0x00	; 0
    33a4:	12 96       	adiw	r26, 0x02	; 2
    33a6:	8d 91       	ld	r24, X+
    33a8:	9c 91       	ld	r25, X
    33aa:	13 97       	sbiw	r26, 0x03	; 3
    33ac:	00 97       	sbiw	r24, 0x00	; 0
    33ae:	19 f0       	breq	.+6      	; 0x33b6 <free+0xd4>
    33b0:	fd 01       	movw	r30, r26
    33b2:	dc 01       	movw	r26, r24
    33b4:	f7 cf       	rjmp	.-18     	; 0x33a4 <free+0xc2>
    33b6:	8d 91       	ld	r24, X+
    33b8:	9c 91       	ld	r25, X
    33ba:	11 97       	sbiw	r26, 0x01	; 1
    33bc:	9d 01       	movw	r18, r26
    33be:	2e 5f       	subi	r18, 0xFE	; 254
    33c0:	3f 4f       	sbci	r19, 0xFF	; 255
    33c2:	82 0f       	add	r24, r18
    33c4:	93 1f       	adc	r25, r19
    33c6:	20 91 f1 03 	lds	r18, 0x03F1	; 0x8003f1 <__brkval>
    33ca:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <__brkval+0x1>
    33ce:	28 17       	cp	r18, r24
    33d0:	39 07       	cpc	r19, r25
    33d2:	69 f4       	brne	.+26     	; 0x33ee <free+0x10c>
    33d4:	30 97       	sbiw	r30, 0x00	; 0
    33d6:	29 f4       	brne	.+10     	; 0x33e2 <free+0x100>
    33d8:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <__flp+0x1>
    33dc:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <__flp>
    33e0:	02 c0       	rjmp	.+4      	; 0x33e6 <free+0x104>
    33e2:	13 82       	std	Z+3, r1	; 0x03
    33e4:	12 82       	std	Z+2, r1	; 0x02
    33e6:	b0 93 f2 03 	sts	0x03F2, r27	; 0x8003f2 <__brkval+0x1>
    33ea:	a0 93 f1 03 	sts	0x03F1, r26	; 0x8003f1 <__brkval>
    33ee:	df 91       	pop	r29
    33f0:	cf 91       	pop	r28
    33f2:	08 95       	ret

000033f4 <do_rand>:
    33f4:	8f 92       	push	r8
    33f6:	9f 92       	push	r9
    33f8:	af 92       	push	r10
    33fa:	bf 92       	push	r11
    33fc:	cf 92       	push	r12
    33fe:	df 92       	push	r13
    3400:	ef 92       	push	r14
    3402:	ff 92       	push	r15
    3404:	cf 93       	push	r28
    3406:	df 93       	push	r29
    3408:	ec 01       	movw	r28, r24
    340a:	68 81       	ld	r22, Y
    340c:	79 81       	ldd	r23, Y+1	; 0x01
    340e:	8a 81       	ldd	r24, Y+2	; 0x02
    3410:	9b 81       	ldd	r25, Y+3	; 0x03
    3412:	61 15       	cp	r22, r1
    3414:	71 05       	cpc	r23, r1
    3416:	81 05       	cpc	r24, r1
    3418:	91 05       	cpc	r25, r1
    341a:	21 f4       	brne	.+8      	; 0x3424 <do_rand+0x30>
    341c:	64 e2       	ldi	r22, 0x24	; 36
    341e:	79 ed       	ldi	r23, 0xD9	; 217
    3420:	8b e5       	ldi	r24, 0x5B	; 91
    3422:	97 e0       	ldi	r25, 0x07	; 7
    3424:	2d e1       	ldi	r18, 0x1D	; 29
    3426:	33 ef       	ldi	r19, 0xF3	; 243
    3428:	41 e0       	ldi	r20, 0x01	; 1
    342a:	50 e0       	ldi	r21, 0x00	; 0
    342c:	0e 94 8d 1d 	call	0x3b1a	; 0x3b1a <__divmodsi4>
    3430:	49 01       	movw	r8, r18
    3432:	5a 01       	movw	r10, r20
    3434:	9b 01       	movw	r18, r22
    3436:	ac 01       	movw	r20, r24
    3438:	a7 ea       	ldi	r26, 0xA7	; 167
    343a:	b1 e4       	ldi	r27, 0x41	; 65
    343c:	0e 94 ac 1d 	call	0x3b58	; 0x3b58 <__muluhisi3>
    3440:	6b 01       	movw	r12, r22
    3442:	7c 01       	movw	r14, r24
    3444:	ac ee       	ldi	r26, 0xEC	; 236
    3446:	b4 ef       	ldi	r27, 0xF4	; 244
    3448:	a5 01       	movw	r20, r10
    344a:	94 01       	movw	r18, r8
    344c:	0e 94 ba 1d 	call	0x3b74	; 0x3b74 <__mulohisi3>
    3450:	dc 01       	movw	r26, r24
    3452:	cb 01       	movw	r24, r22
    3454:	8c 0d       	add	r24, r12
    3456:	9d 1d       	adc	r25, r13
    3458:	ae 1d       	adc	r26, r14
    345a:	bf 1d       	adc	r27, r15
    345c:	b7 ff       	sbrs	r27, 7
    345e:	03 c0       	rjmp	.+6      	; 0x3466 <do_rand+0x72>
    3460:	01 97       	sbiw	r24, 0x01	; 1
    3462:	a1 09       	sbc	r26, r1
    3464:	b0 48       	sbci	r27, 0x80	; 128
    3466:	88 83       	st	Y, r24
    3468:	99 83       	std	Y+1, r25	; 0x01
    346a:	aa 83       	std	Y+2, r26	; 0x02
    346c:	bb 83       	std	Y+3, r27	; 0x03
    346e:	9f 77       	andi	r25, 0x7F	; 127
    3470:	df 91       	pop	r29
    3472:	cf 91       	pop	r28
    3474:	ff 90       	pop	r15
    3476:	ef 90       	pop	r14
    3478:	df 90       	pop	r13
    347a:	cf 90       	pop	r12
    347c:	bf 90       	pop	r11
    347e:	af 90       	pop	r10
    3480:	9f 90       	pop	r9
    3482:	8f 90       	pop	r8
    3484:	08 95       	ret

00003486 <rand_r>:
    3486:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <do_rand>
    348a:	08 95       	ret

0000348c <rand>:
    348c:	86 e0       	ldi	r24, 0x06	; 6
    348e:	91 e0       	ldi	r25, 0x01	; 1
    3490:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <do_rand>
    3494:	08 95       	ret

00003496 <srand>:
    3496:	a0 e0       	ldi	r26, 0x00	; 0
    3498:	b0 e0       	ldi	r27, 0x00	; 0
    349a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
    349e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
    34a2:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
    34a6:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
    34aa:	08 95       	ret

000034ac <fdevopen>:
    34ac:	0f 93       	push	r16
    34ae:	1f 93       	push	r17
    34b0:	cf 93       	push	r28
    34b2:	df 93       	push	r29
    34b4:	00 97       	sbiw	r24, 0x00	; 0
    34b6:	31 f4       	brne	.+12     	; 0x34c4 <fdevopen+0x18>
    34b8:	61 15       	cp	r22, r1
    34ba:	71 05       	cpc	r23, r1
    34bc:	19 f4       	brne	.+6      	; 0x34c4 <fdevopen+0x18>
    34be:	80 e0       	ldi	r24, 0x00	; 0
    34c0:	90 e0       	ldi	r25, 0x00	; 0
    34c2:	3a c0       	rjmp	.+116    	; 0x3538 <fdevopen+0x8c>
    34c4:	8b 01       	movw	r16, r22
    34c6:	ec 01       	movw	r28, r24
    34c8:	6e e0       	ldi	r22, 0x0E	; 14
    34ca:	70 e0       	ldi	r23, 0x00	; 0
    34cc:	81 e0       	ldi	r24, 0x01	; 1
    34ce:	90 e0       	ldi	r25, 0x00	; 0
    34d0:	0e 94 ba 1c 	call	0x3974	; 0x3974 <calloc>
    34d4:	fc 01       	movw	r30, r24
    34d6:	89 2b       	or	r24, r25
    34d8:	91 f3       	breq	.-28     	; 0x34be <fdevopen+0x12>
    34da:	80 e8       	ldi	r24, 0x80	; 128
    34dc:	83 83       	std	Z+3, r24	; 0x03
    34de:	01 15       	cp	r16, r1
    34e0:	11 05       	cpc	r17, r1
    34e2:	71 f0       	breq	.+28     	; 0x3500 <fdevopen+0x54>
    34e4:	13 87       	std	Z+11, r17	; 0x0b
    34e6:	02 87       	std	Z+10, r16	; 0x0a
    34e8:	81 e8       	ldi	r24, 0x81	; 129
    34ea:	83 83       	std	Z+3, r24	; 0x03
    34ec:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <__iob>
    34f0:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <__iob+0x1>
    34f4:	89 2b       	or	r24, r25
    34f6:	21 f4       	brne	.+8      	; 0x3500 <fdevopen+0x54>
    34f8:	f0 93 f6 03 	sts	0x03F6, r31	; 0x8003f6 <__iob+0x1>
    34fc:	e0 93 f5 03 	sts	0x03F5, r30	; 0x8003f5 <__iob>
    3500:	20 97       	sbiw	r28, 0x00	; 0
    3502:	c9 f0       	breq	.+50     	; 0x3536 <fdevopen+0x8a>
    3504:	d1 87       	std	Z+9, r29	; 0x09
    3506:	c0 87       	std	Z+8, r28	; 0x08
    3508:	83 81       	ldd	r24, Z+3	; 0x03
    350a:	82 60       	ori	r24, 0x02	; 2
    350c:	83 83       	std	Z+3, r24	; 0x03
    350e:	80 91 f7 03 	lds	r24, 0x03F7	; 0x8003f7 <__iob+0x2>
    3512:	90 91 f8 03 	lds	r25, 0x03F8	; 0x8003f8 <__iob+0x3>
    3516:	89 2b       	or	r24, r25
    3518:	71 f4       	brne	.+28     	; 0x3536 <fdevopen+0x8a>
    351a:	f0 93 f8 03 	sts	0x03F8, r31	; 0x8003f8 <__iob+0x3>
    351e:	e0 93 f7 03 	sts	0x03F7, r30	; 0x8003f7 <__iob+0x2>
    3522:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <__iob+0x4>
    3526:	90 91 fa 03 	lds	r25, 0x03FA	; 0x8003fa <__iob+0x5>
    352a:	89 2b       	or	r24, r25
    352c:	21 f4       	brne	.+8      	; 0x3536 <fdevopen+0x8a>
    352e:	f0 93 fa 03 	sts	0x03FA, r31	; 0x8003fa <__iob+0x5>
    3532:	e0 93 f9 03 	sts	0x03F9, r30	; 0x8003f9 <__iob+0x4>
    3536:	cf 01       	movw	r24, r30
    3538:	df 91       	pop	r29
    353a:	cf 91       	pop	r28
    353c:	1f 91       	pop	r17
    353e:	0f 91       	pop	r16
    3540:	08 95       	ret

00003542 <printf>:
    3542:	a0 e0       	ldi	r26, 0x00	; 0
    3544:	b0 e0       	ldi	r27, 0x00	; 0
    3546:	e7 ea       	ldi	r30, 0xA7	; 167
    3548:	fa e1       	ldi	r31, 0x1A	; 26
    354a:	0c 94 cf 1d 	jmp	0x3b9e	; 0x3b9e <__prologue_saves__+0x20>
    354e:	ae 01       	movw	r20, r28
    3550:	4b 5f       	subi	r20, 0xFB	; 251
    3552:	5f 4f       	sbci	r21, 0xFF	; 255
    3554:	fa 01       	movw	r30, r20
    3556:	61 91       	ld	r22, Z+
    3558:	71 91       	ld	r23, Z+
    355a:	af 01       	movw	r20, r30
    355c:	80 91 f7 03 	lds	r24, 0x03F7	; 0x8003f7 <__iob+0x2>
    3560:	90 91 f8 03 	lds	r25, 0x03F8	; 0x8003f8 <__iob+0x3>
    3564:	0e 94 d9 1a 	call	0x35b2	; 0x35b2 <vfprintf>
    3568:	e2 e0       	ldi	r30, 0x02	; 2
    356a:	0c 94 eb 1d 	jmp	0x3bd6	; 0x3bd6 <__epilogue_restores__+0x20>

0000356e <sprintf>:
    356e:	ae e0       	ldi	r26, 0x0E	; 14
    3570:	b0 e0       	ldi	r27, 0x00	; 0
    3572:	ed eb       	ldi	r30, 0xBD	; 189
    3574:	fa e1       	ldi	r31, 0x1A	; 26
    3576:	0c 94 cd 1d 	jmp	0x3b9a	; 0x3b9a <__prologue_saves__+0x1c>
    357a:	0d 89       	ldd	r16, Y+21	; 0x15
    357c:	1e 89       	ldd	r17, Y+22	; 0x16
    357e:	86 e0       	ldi	r24, 0x06	; 6
    3580:	8c 83       	std	Y+4, r24	; 0x04
    3582:	1a 83       	std	Y+2, r17	; 0x02
    3584:	09 83       	std	Y+1, r16	; 0x01
    3586:	8f ef       	ldi	r24, 0xFF	; 255
    3588:	9f e7       	ldi	r25, 0x7F	; 127
    358a:	9e 83       	std	Y+6, r25	; 0x06
    358c:	8d 83       	std	Y+5, r24	; 0x05
    358e:	ae 01       	movw	r20, r28
    3590:	47 5e       	subi	r20, 0xE7	; 231
    3592:	5f 4f       	sbci	r21, 0xFF	; 255
    3594:	6f 89       	ldd	r22, Y+23	; 0x17
    3596:	78 8d       	ldd	r23, Y+24	; 0x18
    3598:	ce 01       	movw	r24, r28
    359a:	01 96       	adiw	r24, 0x01	; 1
    359c:	0e 94 d9 1a 	call	0x35b2	; 0x35b2 <vfprintf>
    35a0:	ef 81       	ldd	r30, Y+7	; 0x07
    35a2:	f8 85       	ldd	r31, Y+8	; 0x08
    35a4:	e0 0f       	add	r30, r16
    35a6:	f1 1f       	adc	r31, r17
    35a8:	10 82       	st	Z, r1
    35aa:	2e 96       	adiw	r28, 0x0e	; 14
    35ac:	e4 e0       	ldi	r30, 0x04	; 4
    35ae:	0c 94 e9 1d 	jmp	0x3bd2	; 0x3bd2 <__epilogue_restores__+0x1c>

000035b2 <vfprintf>:
    35b2:	ab e0       	ldi	r26, 0x0B	; 11
    35b4:	b0 e0       	ldi	r27, 0x00	; 0
    35b6:	ef ed       	ldi	r30, 0xDF	; 223
    35b8:	fa e1       	ldi	r31, 0x1A	; 26
    35ba:	0c 94 bf 1d 	jmp	0x3b7e	; 0x3b7e <__prologue_saves__>
    35be:	6c 01       	movw	r12, r24
    35c0:	7b 01       	movw	r14, r22
    35c2:	8a 01       	movw	r16, r20
    35c4:	fc 01       	movw	r30, r24
    35c6:	17 82       	std	Z+7, r1	; 0x07
    35c8:	16 82       	std	Z+6, r1	; 0x06
    35ca:	83 81       	ldd	r24, Z+3	; 0x03
    35cc:	81 ff       	sbrs	r24, 1
    35ce:	cc c1       	rjmp	.+920    	; 0x3968 <vfprintf+0x3b6>
    35d0:	ce 01       	movw	r24, r28
    35d2:	01 96       	adiw	r24, 0x01	; 1
    35d4:	3c 01       	movw	r6, r24
    35d6:	f6 01       	movw	r30, r12
    35d8:	93 81       	ldd	r25, Z+3	; 0x03
    35da:	f7 01       	movw	r30, r14
    35dc:	93 fd       	sbrc	r25, 3
    35de:	85 91       	lpm	r24, Z+
    35e0:	93 ff       	sbrs	r25, 3
    35e2:	81 91       	ld	r24, Z+
    35e4:	7f 01       	movw	r14, r30
    35e6:	88 23       	and	r24, r24
    35e8:	09 f4       	brne	.+2      	; 0x35ec <vfprintf+0x3a>
    35ea:	ba c1       	rjmp	.+884    	; 0x3960 <vfprintf+0x3ae>
    35ec:	85 32       	cpi	r24, 0x25	; 37
    35ee:	39 f4       	brne	.+14     	; 0x35fe <vfprintf+0x4c>
    35f0:	93 fd       	sbrc	r25, 3
    35f2:	85 91       	lpm	r24, Z+
    35f4:	93 ff       	sbrs	r25, 3
    35f6:	81 91       	ld	r24, Z+
    35f8:	7f 01       	movw	r14, r30
    35fa:	85 32       	cpi	r24, 0x25	; 37
    35fc:	29 f4       	brne	.+10     	; 0x3608 <vfprintf+0x56>
    35fe:	b6 01       	movw	r22, r12
    3600:	90 e0       	ldi	r25, 0x00	; 0
    3602:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <fputc>
    3606:	e7 cf       	rjmp	.-50     	; 0x35d6 <vfprintf+0x24>
    3608:	91 2c       	mov	r9, r1
    360a:	21 2c       	mov	r2, r1
    360c:	31 2c       	mov	r3, r1
    360e:	ff e1       	ldi	r31, 0x1F	; 31
    3610:	f3 15       	cp	r31, r3
    3612:	d8 f0       	brcs	.+54     	; 0x364a <vfprintf+0x98>
    3614:	8b 32       	cpi	r24, 0x2B	; 43
    3616:	79 f0       	breq	.+30     	; 0x3636 <vfprintf+0x84>
    3618:	38 f4       	brcc	.+14     	; 0x3628 <vfprintf+0x76>
    361a:	80 32       	cpi	r24, 0x20	; 32
    361c:	79 f0       	breq	.+30     	; 0x363c <vfprintf+0x8a>
    361e:	83 32       	cpi	r24, 0x23	; 35
    3620:	a1 f4       	brne	.+40     	; 0x364a <vfprintf+0x98>
    3622:	23 2d       	mov	r18, r3
    3624:	20 61       	ori	r18, 0x10	; 16
    3626:	1d c0       	rjmp	.+58     	; 0x3662 <vfprintf+0xb0>
    3628:	8d 32       	cpi	r24, 0x2D	; 45
    362a:	61 f0       	breq	.+24     	; 0x3644 <vfprintf+0x92>
    362c:	80 33       	cpi	r24, 0x30	; 48
    362e:	69 f4       	brne	.+26     	; 0x364a <vfprintf+0x98>
    3630:	23 2d       	mov	r18, r3
    3632:	21 60       	ori	r18, 0x01	; 1
    3634:	16 c0       	rjmp	.+44     	; 0x3662 <vfprintf+0xb0>
    3636:	83 2d       	mov	r24, r3
    3638:	82 60       	ori	r24, 0x02	; 2
    363a:	38 2e       	mov	r3, r24
    363c:	e3 2d       	mov	r30, r3
    363e:	e4 60       	ori	r30, 0x04	; 4
    3640:	3e 2e       	mov	r3, r30
    3642:	2a c0       	rjmp	.+84     	; 0x3698 <vfprintf+0xe6>
    3644:	f3 2d       	mov	r31, r3
    3646:	f8 60       	ori	r31, 0x08	; 8
    3648:	1d c0       	rjmp	.+58     	; 0x3684 <vfprintf+0xd2>
    364a:	37 fc       	sbrc	r3, 7
    364c:	2d c0       	rjmp	.+90     	; 0x36a8 <vfprintf+0xf6>
    364e:	20 ed       	ldi	r18, 0xD0	; 208
    3650:	28 0f       	add	r18, r24
    3652:	2a 30       	cpi	r18, 0x0A	; 10
    3654:	40 f0       	brcs	.+16     	; 0x3666 <vfprintf+0xb4>
    3656:	8e 32       	cpi	r24, 0x2E	; 46
    3658:	b9 f4       	brne	.+46     	; 0x3688 <vfprintf+0xd6>
    365a:	36 fc       	sbrc	r3, 6
    365c:	81 c1       	rjmp	.+770    	; 0x3960 <vfprintf+0x3ae>
    365e:	23 2d       	mov	r18, r3
    3660:	20 64       	ori	r18, 0x40	; 64
    3662:	32 2e       	mov	r3, r18
    3664:	19 c0       	rjmp	.+50     	; 0x3698 <vfprintf+0xe6>
    3666:	36 fe       	sbrs	r3, 6
    3668:	06 c0       	rjmp	.+12     	; 0x3676 <vfprintf+0xc4>
    366a:	8a e0       	ldi	r24, 0x0A	; 10
    366c:	98 9e       	mul	r9, r24
    366e:	20 0d       	add	r18, r0
    3670:	11 24       	eor	r1, r1
    3672:	92 2e       	mov	r9, r18
    3674:	11 c0       	rjmp	.+34     	; 0x3698 <vfprintf+0xe6>
    3676:	ea e0       	ldi	r30, 0x0A	; 10
    3678:	2e 9e       	mul	r2, r30
    367a:	20 0d       	add	r18, r0
    367c:	11 24       	eor	r1, r1
    367e:	22 2e       	mov	r2, r18
    3680:	f3 2d       	mov	r31, r3
    3682:	f0 62       	ori	r31, 0x20	; 32
    3684:	3f 2e       	mov	r3, r31
    3686:	08 c0       	rjmp	.+16     	; 0x3698 <vfprintf+0xe6>
    3688:	8c 36       	cpi	r24, 0x6C	; 108
    368a:	21 f4       	brne	.+8      	; 0x3694 <vfprintf+0xe2>
    368c:	83 2d       	mov	r24, r3
    368e:	80 68       	ori	r24, 0x80	; 128
    3690:	38 2e       	mov	r3, r24
    3692:	02 c0       	rjmp	.+4      	; 0x3698 <vfprintf+0xe6>
    3694:	88 36       	cpi	r24, 0x68	; 104
    3696:	41 f4       	brne	.+16     	; 0x36a8 <vfprintf+0xf6>
    3698:	f7 01       	movw	r30, r14
    369a:	93 fd       	sbrc	r25, 3
    369c:	85 91       	lpm	r24, Z+
    369e:	93 ff       	sbrs	r25, 3
    36a0:	81 91       	ld	r24, Z+
    36a2:	7f 01       	movw	r14, r30
    36a4:	81 11       	cpse	r24, r1
    36a6:	b3 cf       	rjmp	.-154    	; 0x360e <vfprintf+0x5c>
    36a8:	98 2f       	mov	r25, r24
    36aa:	9f 7d       	andi	r25, 0xDF	; 223
    36ac:	95 54       	subi	r25, 0x45	; 69
    36ae:	93 30       	cpi	r25, 0x03	; 3
    36b0:	28 f4       	brcc	.+10     	; 0x36bc <vfprintf+0x10a>
    36b2:	0c 5f       	subi	r16, 0xFC	; 252
    36b4:	1f 4f       	sbci	r17, 0xFF	; 255
    36b6:	9f e3       	ldi	r25, 0x3F	; 63
    36b8:	99 83       	std	Y+1, r25	; 0x01
    36ba:	0d c0       	rjmp	.+26     	; 0x36d6 <vfprintf+0x124>
    36bc:	83 36       	cpi	r24, 0x63	; 99
    36be:	31 f0       	breq	.+12     	; 0x36cc <vfprintf+0x11a>
    36c0:	83 37       	cpi	r24, 0x73	; 115
    36c2:	71 f0       	breq	.+28     	; 0x36e0 <vfprintf+0x12e>
    36c4:	83 35       	cpi	r24, 0x53	; 83
    36c6:	09 f0       	breq	.+2      	; 0x36ca <vfprintf+0x118>
    36c8:	59 c0       	rjmp	.+178    	; 0x377c <vfprintf+0x1ca>
    36ca:	21 c0       	rjmp	.+66     	; 0x370e <vfprintf+0x15c>
    36cc:	f8 01       	movw	r30, r16
    36ce:	80 81       	ld	r24, Z
    36d0:	89 83       	std	Y+1, r24	; 0x01
    36d2:	0e 5f       	subi	r16, 0xFE	; 254
    36d4:	1f 4f       	sbci	r17, 0xFF	; 255
    36d6:	88 24       	eor	r8, r8
    36d8:	83 94       	inc	r8
    36da:	91 2c       	mov	r9, r1
    36dc:	53 01       	movw	r10, r6
    36de:	13 c0       	rjmp	.+38     	; 0x3706 <vfprintf+0x154>
    36e0:	28 01       	movw	r4, r16
    36e2:	f2 e0       	ldi	r31, 0x02	; 2
    36e4:	4f 0e       	add	r4, r31
    36e6:	51 1c       	adc	r5, r1
    36e8:	f8 01       	movw	r30, r16
    36ea:	a0 80       	ld	r10, Z
    36ec:	b1 80       	ldd	r11, Z+1	; 0x01
    36ee:	36 fe       	sbrs	r3, 6
    36f0:	03 c0       	rjmp	.+6      	; 0x36f8 <vfprintf+0x146>
    36f2:	69 2d       	mov	r22, r9
    36f4:	70 e0       	ldi	r23, 0x00	; 0
    36f6:	02 c0       	rjmp	.+4      	; 0x36fc <vfprintf+0x14a>
    36f8:	6f ef       	ldi	r22, 0xFF	; 255
    36fa:	7f ef       	ldi	r23, 0xFF	; 255
    36fc:	c5 01       	movw	r24, r10
    36fe:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <strnlen>
    3702:	4c 01       	movw	r8, r24
    3704:	82 01       	movw	r16, r4
    3706:	f3 2d       	mov	r31, r3
    3708:	ff 77       	andi	r31, 0x7F	; 127
    370a:	3f 2e       	mov	r3, r31
    370c:	16 c0       	rjmp	.+44     	; 0x373a <vfprintf+0x188>
    370e:	28 01       	movw	r4, r16
    3710:	22 e0       	ldi	r18, 0x02	; 2
    3712:	42 0e       	add	r4, r18
    3714:	51 1c       	adc	r5, r1
    3716:	f8 01       	movw	r30, r16
    3718:	a0 80       	ld	r10, Z
    371a:	b1 80       	ldd	r11, Z+1	; 0x01
    371c:	36 fe       	sbrs	r3, 6
    371e:	03 c0       	rjmp	.+6      	; 0x3726 <vfprintf+0x174>
    3720:	69 2d       	mov	r22, r9
    3722:	70 e0       	ldi	r23, 0x00	; 0
    3724:	02 c0       	rjmp	.+4      	; 0x372a <vfprintf+0x178>
    3726:	6f ef       	ldi	r22, 0xFF	; 255
    3728:	7f ef       	ldi	r23, 0xFF	; 255
    372a:	c5 01       	movw	r24, r10
    372c:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <strnlen_P>
    3730:	4c 01       	movw	r8, r24
    3732:	f3 2d       	mov	r31, r3
    3734:	f0 68       	ori	r31, 0x80	; 128
    3736:	3f 2e       	mov	r3, r31
    3738:	82 01       	movw	r16, r4
    373a:	33 fc       	sbrc	r3, 3
    373c:	1b c0       	rjmp	.+54     	; 0x3774 <vfprintf+0x1c2>
    373e:	82 2d       	mov	r24, r2
    3740:	90 e0       	ldi	r25, 0x00	; 0
    3742:	88 16       	cp	r8, r24
    3744:	99 06       	cpc	r9, r25
    3746:	b0 f4       	brcc	.+44     	; 0x3774 <vfprintf+0x1c2>
    3748:	b6 01       	movw	r22, r12
    374a:	80 e2       	ldi	r24, 0x20	; 32
    374c:	90 e0       	ldi	r25, 0x00	; 0
    374e:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <fputc>
    3752:	2a 94       	dec	r2
    3754:	f4 cf       	rjmp	.-24     	; 0x373e <vfprintf+0x18c>
    3756:	f5 01       	movw	r30, r10
    3758:	37 fc       	sbrc	r3, 7
    375a:	85 91       	lpm	r24, Z+
    375c:	37 fe       	sbrs	r3, 7
    375e:	81 91       	ld	r24, Z+
    3760:	5f 01       	movw	r10, r30
    3762:	b6 01       	movw	r22, r12
    3764:	90 e0       	ldi	r25, 0x00	; 0
    3766:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <fputc>
    376a:	21 10       	cpse	r2, r1
    376c:	2a 94       	dec	r2
    376e:	21 e0       	ldi	r18, 0x01	; 1
    3770:	82 1a       	sub	r8, r18
    3772:	91 08       	sbc	r9, r1
    3774:	81 14       	cp	r8, r1
    3776:	91 04       	cpc	r9, r1
    3778:	71 f7       	brne	.-36     	; 0x3756 <vfprintf+0x1a4>
    377a:	e8 c0       	rjmp	.+464    	; 0x394c <vfprintf+0x39a>
    377c:	84 36       	cpi	r24, 0x64	; 100
    377e:	11 f0       	breq	.+4      	; 0x3784 <vfprintf+0x1d2>
    3780:	89 36       	cpi	r24, 0x69	; 105
    3782:	41 f5       	brne	.+80     	; 0x37d4 <vfprintf+0x222>
    3784:	f8 01       	movw	r30, r16
    3786:	37 fe       	sbrs	r3, 7
    3788:	07 c0       	rjmp	.+14     	; 0x3798 <vfprintf+0x1e6>
    378a:	60 81       	ld	r22, Z
    378c:	71 81       	ldd	r23, Z+1	; 0x01
    378e:	82 81       	ldd	r24, Z+2	; 0x02
    3790:	93 81       	ldd	r25, Z+3	; 0x03
    3792:	0c 5f       	subi	r16, 0xFC	; 252
    3794:	1f 4f       	sbci	r17, 0xFF	; 255
    3796:	08 c0       	rjmp	.+16     	; 0x37a8 <vfprintf+0x1f6>
    3798:	60 81       	ld	r22, Z
    379a:	71 81       	ldd	r23, Z+1	; 0x01
    379c:	07 2e       	mov	r0, r23
    379e:	00 0c       	add	r0, r0
    37a0:	88 0b       	sbc	r24, r24
    37a2:	99 0b       	sbc	r25, r25
    37a4:	0e 5f       	subi	r16, 0xFE	; 254
    37a6:	1f 4f       	sbci	r17, 0xFF	; 255
    37a8:	f3 2d       	mov	r31, r3
    37aa:	ff 76       	andi	r31, 0x6F	; 111
    37ac:	3f 2e       	mov	r3, r31
    37ae:	97 ff       	sbrs	r25, 7
    37b0:	09 c0       	rjmp	.+18     	; 0x37c4 <vfprintf+0x212>
    37b2:	90 95       	com	r25
    37b4:	80 95       	com	r24
    37b6:	70 95       	com	r23
    37b8:	61 95       	neg	r22
    37ba:	7f 4f       	sbci	r23, 0xFF	; 255
    37bc:	8f 4f       	sbci	r24, 0xFF	; 255
    37be:	9f 4f       	sbci	r25, 0xFF	; 255
    37c0:	f0 68       	ori	r31, 0x80	; 128
    37c2:	3f 2e       	mov	r3, r31
    37c4:	2a e0       	ldi	r18, 0x0A	; 10
    37c6:	30 e0       	ldi	r19, 0x00	; 0
    37c8:	a3 01       	movw	r20, r6
    37ca:	0e 94 2f 1d 	call	0x3a5e	; 0x3a5e <__ultoa_invert>
    37ce:	88 2e       	mov	r8, r24
    37d0:	86 18       	sub	r8, r6
    37d2:	45 c0       	rjmp	.+138    	; 0x385e <vfprintf+0x2ac>
    37d4:	85 37       	cpi	r24, 0x75	; 117
    37d6:	31 f4       	brne	.+12     	; 0x37e4 <vfprintf+0x232>
    37d8:	23 2d       	mov	r18, r3
    37da:	2f 7e       	andi	r18, 0xEF	; 239
    37dc:	b2 2e       	mov	r11, r18
    37de:	2a e0       	ldi	r18, 0x0A	; 10
    37e0:	30 e0       	ldi	r19, 0x00	; 0
    37e2:	25 c0       	rjmp	.+74     	; 0x382e <vfprintf+0x27c>
    37e4:	93 2d       	mov	r25, r3
    37e6:	99 7f       	andi	r25, 0xF9	; 249
    37e8:	b9 2e       	mov	r11, r25
    37ea:	8f 36       	cpi	r24, 0x6F	; 111
    37ec:	c1 f0       	breq	.+48     	; 0x381e <vfprintf+0x26c>
    37ee:	18 f4       	brcc	.+6      	; 0x37f6 <vfprintf+0x244>
    37f0:	88 35       	cpi	r24, 0x58	; 88
    37f2:	79 f0       	breq	.+30     	; 0x3812 <vfprintf+0x260>
    37f4:	b5 c0       	rjmp	.+362    	; 0x3960 <vfprintf+0x3ae>
    37f6:	80 37       	cpi	r24, 0x70	; 112
    37f8:	19 f0       	breq	.+6      	; 0x3800 <vfprintf+0x24e>
    37fa:	88 37       	cpi	r24, 0x78	; 120
    37fc:	21 f0       	breq	.+8      	; 0x3806 <vfprintf+0x254>
    37fe:	b0 c0       	rjmp	.+352    	; 0x3960 <vfprintf+0x3ae>
    3800:	e9 2f       	mov	r30, r25
    3802:	e0 61       	ori	r30, 0x10	; 16
    3804:	be 2e       	mov	r11, r30
    3806:	b4 fe       	sbrs	r11, 4
    3808:	0d c0       	rjmp	.+26     	; 0x3824 <vfprintf+0x272>
    380a:	fb 2d       	mov	r31, r11
    380c:	f4 60       	ori	r31, 0x04	; 4
    380e:	bf 2e       	mov	r11, r31
    3810:	09 c0       	rjmp	.+18     	; 0x3824 <vfprintf+0x272>
    3812:	34 fe       	sbrs	r3, 4
    3814:	0a c0       	rjmp	.+20     	; 0x382a <vfprintf+0x278>
    3816:	29 2f       	mov	r18, r25
    3818:	26 60       	ori	r18, 0x06	; 6
    381a:	b2 2e       	mov	r11, r18
    381c:	06 c0       	rjmp	.+12     	; 0x382a <vfprintf+0x278>
    381e:	28 e0       	ldi	r18, 0x08	; 8
    3820:	30 e0       	ldi	r19, 0x00	; 0
    3822:	05 c0       	rjmp	.+10     	; 0x382e <vfprintf+0x27c>
    3824:	20 e1       	ldi	r18, 0x10	; 16
    3826:	30 e0       	ldi	r19, 0x00	; 0
    3828:	02 c0       	rjmp	.+4      	; 0x382e <vfprintf+0x27c>
    382a:	20 e1       	ldi	r18, 0x10	; 16
    382c:	32 e0       	ldi	r19, 0x02	; 2
    382e:	f8 01       	movw	r30, r16
    3830:	b7 fe       	sbrs	r11, 7
    3832:	07 c0       	rjmp	.+14     	; 0x3842 <vfprintf+0x290>
    3834:	60 81       	ld	r22, Z
    3836:	71 81       	ldd	r23, Z+1	; 0x01
    3838:	82 81       	ldd	r24, Z+2	; 0x02
    383a:	93 81       	ldd	r25, Z+3	; 0x03
    383c:	0c 5f       	subi	r16, 0xFC	; 252
    383e:	1f 4f       	sbci	r17, 0xFF	; 255
    3840:	06 c0       	rjmp	.+12     	; 0x384e <vfprintf+0x29c>
    3842:	60 81       	ld	r22, Z
    3844:	71 81       	ldd	r23, Z+1	; 0x01
    3846:	80 e0       	ldi	r24, 0x00	; 0
    3848:	90 e0       	ldi	r25, 0x00	; 0
    384a:	0e 5f       	subi	r16, 0xFE	; 254
    384c:	1f 4f       	sbci	r17, 0xFF	; 255
    384e:	a3 01       	movw	r20, r6
    3850:	0e 94 2f 1d 	call	0x3a5e	; 0x3a5e <__ultoa_invert>
    3854:	88 2e       	mov	r8, r24
    3856:	86 18       	sub	r8, r6
    3858:	fb 2d       	mov	r31, r11
    385a:	ff 77       	andi	r31, 0x7F	; 127
    385c:	3f 2e       	mov	r3, r31
    385e:	36 fe       	sbrs	r3, 6
    3860:	0d c0       	rjmp	.+26     	; 0x387c <vfprintf+0x2ca>
    3862:	23 2d       	mov	r18, r3
    3864:	2e 7f       	andi	r18, 0xFE	; 254
    3866:	a2 2e       	mov	r10, r18
    3868:	89 14       	cp	r8, r9
    386a:	58 f4       	brcc	.+22     	; 0x3882 <vfprintf+0x2d0>
    386c:	34 fe       	sbrs	r3, 4
    386e:	0b c0       	rjmp	.+22     	; 0x3886 <vfprintf+0x2d4>
    3870:	32 fc       	sbrc	r3, 2
    3872:	09 c0       	rjmp	.+18     	; 0x3886 <vfprintf+0x2d4>
    3874:	83 2d       	mov	r24, r3
    3876:	8e 7e       	andi	r24, 0xEE	; 238
    3878:	a8 2e       	mov	r10, r24
    387a:	05 c0       	rjmp	.+10     	; 0x3886 <vfprintf+0x2d4>
    387c:	b8 2c       	mov	r11, r8
    387e:	a3 2c       	mov	r10, r3
    3880:	03 c0       	rjmp	.+6      	; 0x3888 <vfprintf+0x2d6>
    3882:	b8 2c       	mov	r11, r8
    3884:	01 c0       	rjmp	.+2      	; 0x3888 <vfprintf+0x2d6>
    3886:	b9 2c       	mov	r11, r9
    3888:	a4 fe       	sbrs	r10, 4
    388a:	0f c0       	rjmp	.+30     	; 0x38aa <vfprintf+0x2f8>
    388c:	fe 01       	movw	r30, r28
    388e:	e8 0d       	add	r30, r8
    3890:	f1 1d       	adc	r31, r1
    3892:	80 81       	ld	r24, Z
    3894:	80 33       	cpi	r24, 0x30	; 48
    3896:	21 f4       	brne	.+8      	; 0x38a0 <vfprintf+0x2ee>
    3898:	9a 2d       	mov	r25, r10
    389a:	99 7e       	andi	r25, 0xE9	; 233
    389c:	a9 2e       	mov	r10, r25
    389e:	09 c0       	rjmp	.+18     	; 0x38b2 <vfprintf+0x300>
    38a0:	a2 fe       	sbrs	r10, 2
    38a2:	06 c0       	rjmp	.+12     	; 0x38b0 <vfprintf+0x2fe>
    38a4:	b3 94       	inc	r11
    38a6:	b3 94       	inc	r11
    38a8:	04 c0       	rjmp	.+8      	; 0x38b2 <vfprintf+0x300>
    38aa:	8a 2d       	mov	r24, r10
    38ac:	86 78       	andi	r24, 0x86	; 134
    38ae:	09 f0       	breq	.+2      	; 0x38b2 <vfprintf+0x300>
    38b0:	b3 94       	inc	r11
    38b2:	a3 fc       	sbrc	r10, 3
    38b4:	11 c0       	rjmp	.+34     	; 0x38d8 <vfprintf+0x326>
    38b6:	a0 fe       	sbrs	r10, 0
    38b8:	06 c0       	rjmp	.+12     	; 0x38c6 <vfprintf+0x314>
    38ba:	b2 14       	cp	r11, r2
    38bc:	88 f4       	brcc	.+34     	; 0x38e0 <vfprintf+0x32e>
    38be:	28 0c       	add	r2, r8
    38c0:	92 2c       	mov	r9, r2
    38c2:	9b 18       	sub	r9, r11
    38c4:	0e c0       	rjmp	.+28     	; 0x38e2 <vfprintf+0x330>
    38c6:	b2 14       	cp	r11, r2
    38c8:	60 f4       	brcc	.+24     	; 0x38e2 <vfprintf+0x330>
    38ca:	b6 01       	movw	r22, r12
    38cc:	80 e2       	ldi	r24, 0x20	; 32
    38ce:	90 e0       	ldi	r25, 0x00	; 0
    38d0:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <fputc>
    38d4:	b3 94       	inc	r11
    38d6:	f7 cf       	rjmp	.-18     	; 0x38c6 <vfprintf+0x314>
    38d8:	b2 14       	cp	r11, r2
    38da:	18 f4       	brcc	.+6      	; 0x38e2 <vfprintf+0x330>
    38dc:	2b 18       	sub	r2, r11
    38de:	02 c0       	rjmp	.+4      	; 0x38e4 <vfprintf+0x332>
    38e0:	98 2c       	mov	r9, r8
    38e2:	21 2c       	mov	r2, r1
    38e4:	a4 fe       	sbrs	r10, 4
    38e6:	10 c0       	rjmp	.+32     	; 0x3908 <vfprintf+0x356>
    38e8:	b6 01       	movw	r22, r12
    38ea:	80 e3       	ldi	r24, 0x30	; 48
    38ec:	90 e0       	ldi	r25, 0x00	; 0
    38ee:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <fputc>
    38f2:	a2 fe       	sbrs	r10, 2
    38f4:	17 c0       	rjmp	.+46     	; 0x3924 <vfprintf+0x372>
    38f6:	a1 fc       	sbrc	r10, 1
    38f8:	03 c0       	rjmp	.+6      	; 0x3900 <vfprintf+0x34e>
    38fa:	88 e7       	ldi	r24, 0x78	; 120
    38fc:	90 e0       	ldi	r25, 0x00	; 0
    38fe:	02 c0       	rjmp	.+4      	; 0x3904 <vfprintf+0x352>
    3900:	88 e5       	ldi	r24, 0x58	; 88
    3902:	90 e0       	ldi	r25, 0x00	; 0
    3904:	b6 01       	movw	r22, r12
    3906:	0c c0       	rjmp	.+24     	; 0x3920 <vfprintf+0x36e>
    3908:	8a 2d       	mov	r24, r10
    390a:	86 78       	andi	r24, 0x86	; 134
    390c:	59 f0       	breq	.+22     	; 0x3924 <vfprintf+0x372>
    390e:	a1 fe       	sbrs	r10, 1
    3910:	02 c0       	rjmp	.+4      	; 0x3916 <vfprintf+0x364>
    3912:	8b e2       	ldi	r24, 0x2B	; 43
    3914:	01 c0       	rjmp	.+2      	; 0x3918 <vfprintf+0x366>
    3916:	80 e2       	ldi	r24, 0x20	; 32
    3918:	a7 fc       	sbrc	r10, 7
    391a:	8d e2       	ldi	r24, 0x2D	; 45
    391c:	b6 01       	movw	r22, r12
    391e:	90 e0       	ldi	r25, 0x00	; 0
    3920:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <fputc>
    3924:	89 14       	cp	r8, r9
    3926:	38 f4       	brcc	.+14     	; 0x3936 <vfprintf+0x384>
    3928:	b6 01       	movw	r22, r12
    392a:	80 e3       	ldi	r24, 0x30	; 48
    392c:	90 e0       	ldi	r25, 0x00	; 0
    392e:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <fputc>
    3932:	9a 94       	dec	r9
    3934:	f7 cf       	rjmp	.-18     	; 0x3924 <vfprintf+0x372>
    3936:	8a 94       	dec	r8
    3938:	f3 01       	movw	r30, r6
    393a:	e8 0d       	add	r30, r8
    393c:	f1 1d       	adc	r31, r1
    393e:	80 81       	ld	r24, Z
    3940:	b6 01       	movw	r22, r12
    3942:	90 e0       	ldi	r25, 0x00	; 0
    3944:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <fputc>
    3948:	81 10       	cpse	r8, r1
    394a:	f5 cf       	rjmp	.-22     	; 0x3936 <vfprintf+0x384>
    394c:	22 20       	and	r2, r2
    394e:	09 f4       	brne	.+2      	; 0x3952 <vfprintf+0x3a0>
    3950:	42 ce       	rjmp	.-892    	; 0x35d6 <vfprintf+0x24>
    3952:	b6 01       	movw	r22, r12
    3954:	80 e2       	ldi	r24, 0x20	; 32
    3956:	90 e0       	ldi	r25, 0x00	; 0
    3958:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <fputc>
    395c:	2a 94       	dec	r2
    395e:	f6 cf       	rjmp	.-20     	; 0x394c <vfprintf+0x39a>
    3960:	f6 01       	movw	r30, r12
    3962:	86 81       	ldd	r24, Z+6	; 0x06
    3964:	97 81       	ldd	r25, Z+7	; 0x07
    3966:	02 c0       	rjmp	.+4      	; 0x396c <vfprintf+0x3ba>
    3968:	8f ef       	ldi	r24, 0xFF	; 255
    396a:	9f ef       	ldi	r25, 0xFF	; 255
    396c:	2b 96       	adiw	r28, 0x0b	; 11
    396e:	e2 e1       	ldi	r30, 0x12	; 18
    3970:	0c 94 db 1d 	jmp	0x3bb6	; 0x3bb6 <__epilogue_restores__>

00003974 <calloc>:
    3974:	0f 93       	push	r16
    3976:	1f 93       	push	r17
    3978:	cf 93       	push	r28
    397a:	df 93       	push	r29
    397c:	86 9f       	mul	r24, r22
    397e:	80 01       	movw	r16, r0
    3980:	87 9f       	mul	r24, r23
    3982:	10 0d       	add	r17, r0
    3984:	96 9f       	mul	r25, r22
    3986:	10 0d       	add	r17, r0
    3988:	11 24       	eor	r1, r1
    398a:	c8 01       	movw	r24, r16
    398c:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <malloc>
    3990:	ec 01       	movw	r28, r24
    3992:	00 97       	sbiw	r24, 0x00	; 0
    3994:	29 f0       	breq	.+10     	; 0x39a0 <calloc+0x2c>
    3996:	a8 01       	movw	r20, r16
    3998:	60 e0       	ldi	r22, 0x00	; 0
    399a:	70 e0       	ldi	r23, 0x00	; 0
    399c:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <memset>
    39a0:	ce 01       	movw	r24, r28
    39a2:	df 91       	pop	r29
    39a4:	cf 91       	pop	r28
    39a6:	1f 91       	pop	r17
    39a8:	0f 91       	pop	r16
    39aa:	08 95       	ret

000039ac <strnlen_P>:
    39ac:	fc 01       	movw	r30, r24
    39ae:	05 90       	lpm	r0, Z+
    39b0:	61 50       	subi	r22, 0x01	; 1
    39b2:	70 40       	sbci	r23, 0x00	; 0
    39b4:	01 10       	cpse	r0, r1
    39b6:	d8 f7       	brcc	.-10     	; 0x39ae <strnlen_P+0x2>
    39b8:	80 95       	com	r24
    39ba:	90 95       	com	r25
    39bc:	8e 0f       	add	r24, r30
    39be:	9f 1f       	adc	r25, r31
    39c0:	08 95       	ret

000039c2 <memset>:
    39c2:	dc 01       	movw	r26, r24
    39c4:	01 c0       	rjmp	.+2      	; 0x39c8 <memset+0x6>
    39c6:	6d 93       	st	X+, r22
    39c8:	41 50       	subi	r20, 0x01	; 1
    39ca:	50 40       	sbci	r21, 0x00	; 0
    39cc:	e0 f7       	brcc	.-8      	; 0x39c6 <memset+0x4>
    39ce:	08 95       	ret

000039d0 <strnlen>:
    39d0:	fc 01       	movw	r30, r24
    39d2:	61 50       	subi	r22, 0x01	; 1
    39d4:	70 40       	sbci	r23, 0x00	; 0
    39d6:	01 90       	ld	r0, Z+
    39d8:	01 10       	cpse	r0, r1
    39da:	d8 f7       	brcc	.-10     	; 0x39d2 <strnlen+0x2>
    39dc:	80 95       	com	r24
    39de:	90 95       	com	r25
    39e0:	8e 0f       	add	r24, r30
    39e2:	9f 1f       	adc	r25, r31
    39e4:	08 95       	ret

000039e6 <fputc>:
    39e6:	0f 93       	push	r16
    39e8:	1f 93       	push	r17
    39ea:	cf 93       	push	r28
    39ec:	df 93       	push	r29
    39ee:	fb 01       	movw	r30, r22
    39f0:	23 81       	ldd	r18, Z+3	; 0x03
    39f2:	21 fd       	sbrc	r18, 1
    39f4:	03 c0       	rjmp	.+6      	; 0x39fc <fputc+0x16>
    39f6:	8f ef       	ldi	r24, 0xFF	; 255
    39f8:	9f ef       	ldi	r25, 0xFF	; 255
    39fa:	2c c0       	rjmp	.+88     	; 0x3a54 <fputc+0x6e>
    39fc:	22 ff       	sbrs	r18, 2
    39fe:	16 c0       	rjmp	.+44     	; 0x3a2c <fputc+0x46>
    3a00:	46 81       	ldd	r20, Z+6	; 0x06
    3a02:	57 81       	ldd	r21, Z+7	; 0x07
    3a04:	24 81       	ldd	r18, Z+4	; 0x04
    3a06:	35 81       	ldd	r19, Z+5	; 0x05
    3a08:	42 17       	cp	r20, r18
    3a0a:	53 07       	cpc	r21, r19
    3a0c:	44 f4       	brge	.+16     	; 0x3a1e <fputc+0x38>
    3a0e:	a0 81       	ld	r26, Z
    3a10:	b1 81       	ldd	r27, Z+1	; 0x01
    3a12:	9d 01       	movw	r18, r26
    3a14:	2f 5f       	subi	r18, 0xFF	; 255
    3a16:	3f 4f       	sbci	r19, 0xFF	; 255
    3a18:	31 83       	std	Z+1, r19	; 0x01
    3a1a:	20 83       	st	Z, r18
    3a1c:	8c 93       	st	X, r24
    3a1e:	26 81       	ldd	r18, Z+6	; 0x06
    3a20:	37 81       	ldd	r19, Z+7	; 0x07
    3a22:	2f 5f       	subi	r18, 0xFF	; 255
    3a24:	3f 4f       	sbci	r19, 0xFF	; 255
    3a26:	37 83       	std	Z+7, r19	; 0x07
    3a28:	26 83       	std	Z+6, r18	; 0x06
    3a2a:	14 c0       	rjmp	.+40     	; 0x3a54 <fputc+0x6e>
    3a2c:	8b 01       	movw	r16, r22
    3a2e:	ec 01       	movw	r28, r24
    3a30:	fb 01       	movw	r30, r22
    3a32:	00 84       	ldd	r0, Z+8	; 0x08
    3a34:	f1 85       	ldd	r31, Z+9	; 0x09
    3a36:	e0 2d       	mov	r30, r0
    3a38:	09 95       	icall
    3a3a:	89 2b       	or	r24, r25
    3a3c:	e1 f6       	brne	.-72     	; 0x39f6 <fputc+0x10>
    3a3e:	d8 01       	movw	r26, r16
    3a40:	16 96       	adiw	r26, 0x06	; 6
    3a42:	8d 91       	ld	r24, X+
    3a44:	9c 91       	ld	r25, X
    3a46:	17 97       	sbiw	r26, 0x07	; 7
    3a48:	01 96       	adiw	r24, 0x01	; 1
    3a4a:	17 96       	adiw	r26, 0x07	; 7
    3a4c:	9c 93       	st	X, r25
    3a4e:	8e 93       	st	-X, r24
    3a50:	16 97       	sbiw	r26, 0x06	; 6
    3a52:	ce 01       	movw	r24, r28
    3a54:	df 91       	pop	r29
    3a56:	cf 91       	pop	r28
    3a58:	1f 91       	pop	r17
    3a5a:	0f 91       	pop	r16
    3a5c:	08 95       	ret

00003a5e <__ultoa_invert>:
    3a5e:	fa 01       	movw	r30, r20
    3a60:	aa 27       	eor	r26, r26
    3a62:	28 30       	cpi	r18, 0x08	; 8
    3a64:	51 f1       	breq	.+84     	; 0x3aba <__ultoa_invert+0x5c>
    3a66:	20 31       	cpi	r18, 0x10	; 16
    3a68:	81 f1       	breq	.+96     	; 0x3aca <__ultoa_invert+0x6c>
    3a6a:	e8 94       	clt
    3a6c:	6f 93       	push	r22
    3a6e:	6e 7f       	andi	r22, 0xFE	; 254
    3a70:	6e 5f       	subi	r22, 0xFE	; 254
    3a72:	7f 4f       	sbci	r23, 0xFF	; 255
    3a74:	8f 4f       	sbci	r24, 0xFF	; 255
    3a76:	9f 4f       	sbci	r25, 0xFF	; 255
    3a78:	af 4f       	sbci	r26, 0xFF	; 255
    3a7a:	b1 e0       	ldi	r27, 0x01	; 1
    3a7c:	3e d0       	rcall	.+124    	; 0x3afa <__ultoa_invert+0x9c>
    3a7e:	b4 e0       	ldi	r27, 0x04	; 4
    3a80:	3c d0       	rcall	.+120    	; 0x3afa <__ultoa_invert+0x9c>
    3a82:	67 0f       	add	r22, r23
    3a84:	78 1f       	adc	r23, r24
    3a86:	89 1f       	adc	r24, r25
    3a88:	9a 1f       	adc	r25, r26
    3a8a:	a1 1d       	adc	r26, r1
    3a8c:	68 0f       	add	r22, r24
    3a8e:	79 1f       	adc	r23, r25
    3a90:	8a 1f       	adc	r24, r26
    3a92:	91 1d       	adc	r25, r1
    3a94:	a1 1d       	adc	r26, r1
    3a96:	6a 0f       	add	r22, r26
    3a98:	71 1d       	adc	r23, r1
    3a9a:	81 1d       	adc	r24, r1
    3a9c:	91 1d       	adc	r25, r1
    3a9e:	a1 1d       	adc	r26, r1
    3aa0:	20 d0       	rcall	.+64     	; 0x3ae2 <__ultoa_invert+0x84>
    3aa2:	09 f4       	brne	.+2      	; 0x3aa6 <__ultoa_invert+0x48>
    3aa4:	68 94       	set
    3aa6:	3f 91       	pop	r19
    3aa8:	2a e0       	ldi	r18, 0x0A	; 10
    3aaa:	26 9f       	mul	r18, r22
    3aac:	11 24       	eor	r1, r1
    3aae:	30 19       	sub	r19, r0
    3ab0:	30 5d       	subi	r19, 0xD0	; 208
    3ab2:	31 93       	st	Z+, r19
    3ab4:	de f6       	brtc	.-74     	; 0x3a6c <__ultoa_invert+0xe>
    3ab6:	cf 01       	movw	r24, r30
    3ab8:	08 95       	ret
    3aba:	46 2f       	mov	r20, r22
    3abc:	47 70       	andi	r20, 0x07	; 7
    3abe:	40 5d       	subi	r20, 0xD0	; 208
    3ac0:	41 93       	st	Z+, r20
    3ac2:	b3 e0       	ldi	r27, 0x03	; 3
    3ac4:	0f d0       	rcall	.+30     	; 0x3ae4 <__ultoa_invert+0x86>
    3ac6:	c9 f7       	brne	.-14     	; 0x3aba <__ultoa_invert+0x5c>
    3ac8:	f6 cf       	rjmp	.-20     	; 0x3ab6 <__ultoa_invert+0x58>
    3aca:	46 2f       	mov	r20, r22
    3acc:	4f 70       	andi	r20, 0x0F	; 15
    3ace:	40 5d       	subi	r20, 0xD0	; 208
    3ad0:	4a 33       	cpi	r20, 0x3A	; 58
    3ad2:	18 f0       	brcs	.+6      	; 0x3ada <__ultoa_invert+0x7c>
    3ad4:	49 5d       	subi	r20, 0xD9	; 217
    3ad6:	31 fd       	sbrc	r19, 1
    3ad8:	40 52       	subi	r20, 0x20	; 32
    3ada:	41 93       	st	Z+, r20
    3adc:	02 d0       	rcall	.+4      	; 0x3ae2 <__ultoa_invert+0x84>
    3ade:	a9 f7       	brne	.-22     	; 0x3aca <__ultoa_invert+0x6c>
    3ae0:	ea cf       	rjmp	.-44     	; 0x3ab6 <__ultoa_invert+0x58>
    3ae2:	b4 e0       	ldi	r27, 0x04	; 4
    3ae4:	a6 95       	lsr	r26
    3ae6:	97 95       	ror	r25
    3ae8:	87 95       	ror	r24
    3aea:	77 95       	ror	r23
    3aec:	67 95       	ror	r22
    3aee:	ba 95       	dec	r27
    3af0:	c9 f7       	brne	.-14     	; 0x3ae4 <__ultoa_invert+0x86>
    3af2:	00 97       	sbiw	r24, 0x00	; 0
    3af4:	61 05       	cpc	r22, r1
    3af6:	71 05       	cpc	r23, r1
    3af8:	08 95       	ret
    3afa:	9b 01       	movw	r18, r22
    3afc:	ac 01       	movw	r20, r24
    3afe:	0a 2e       	mov	r0, r26
    3b00:	06 94       	lsr	r0
    3b02:	57 95       	ror	r21
    3b04:	47 95       	ror	r20
    3b06:	37 95       	ror	r19
    3b08:	27 95       	ror	r18
    3b0a:	ba 95       	dec	r27
    3b0c:	c9 f7       	brne	.-14     	; 0x3b00 <__ultoa_invert+0xa2>
    3b0e:	62 0f       	add	r22, r18
    3b10:	73 1f       	adc	r23, r19
    3b12:	84 1f       	adc	r24, r20
    3b14:	95 1f       	adc	r25, r21
    3b16:	a0 1d       	adc	r26, r0
    3b18:	08 95       	ret

00003b1a <__divmodsi4>:
    3b1a:	05 2e       	mov	r0, r21
    3b1c:	97 fb       	bst	r25, 7
    3b1e:	1e f4       	brtc	.+6      	; 0x3b26 <__divmodsi4+0xc>
    3b20:	00 94       	com	r0
    3b22:	0e 94 a4 1d 	call	0x3b48	; 0x3b48 <__negsi2>
    3b26:	57 fd       	sbrc	r21, 7
    3b28:	07 d0       	rcall	.+14     	; 0x3b38 <__divmodsi4_neg2>
    3b2a:	0e 94 f6 1d 	call	0x3bec	; 0x3bec <__udivmodsi4>
    3b2e:	07 fc       	sbrc	r0, 7
    3b30:	03 d0       	rcall	.+6      	; 0x3b38 <__divmodsi4_neg2>
    3b32:	4e f4       	brtc	.+18     	; 0x3b46 <__divmodsi4_exit>
    3b34:	0c 94 a4 1d 	jmp	0x3b48	; 0x3b48 <__negsi2>

00003b38 <__divmodsi4_neg2>:
    3b38:	50 95       	com	r21
    3b3a:	40 95       	com	r20
    3b3c:	30 95       	com	r19
    3b3e:	21 95       	neg	r18
    3b40:	3f 4f       	sbci	r19, 0xFF	; 255
    3b42:	4f 4f       	sbci	r20, 0xFF	; 255
    3b44:	5f 4f       	sbci	r21, 0xFF	; 255

00003b46 <__divmodsi4_exit>:
    3b46:	08 95       	ret

00003b48 <__negsi2>:
    3b48:	90 95       	com	r25
    3b4a:	80 95       	com	r24
    3b4c:	70 95       	com	r23
    3b4e:	61 95       	neg	r22
    3b50:	7f 4f       	sbci	r23, 0xFF	; 255
    3b52:	8f 4f       	sbci	r24, 0xFF	; 255
    3b54:	9f 4f       	sbci	r25, 0xFF	; 255
    3b56:	08 95       	ret

00003b58 <__muluhisi3>:
    3b58:	0e 94 18 1e 	call	0x3c30	; 0x3c30 <__umulhisi3>
    3b5c:	a5 9f       	mul	r26, r21
    3b5e:	90 0d       	add	r25, r0
    3b60:	b4 9f       	mul	r27, r20
    3b62:	90 0d       	add	r25, r0
    3b64:	a4 9f       	mul	r26, r20
    3b66:	80 0d       	add	r24, r0
    3b68:	91 1d       	adc	r25, r1
    3b6a:	11 24       	eor	r1, r1
    3b6c:	08 95       	ret

00003b6e <__mulshisi3>:
    3b6e:	b7 ff       	sbrs	r27, 7
    3b70:	0c 94 ac 1d 	jmp	0x3b58	; 0x3b58 <__muluhisi3>

00003b74 <__mulohisi3>:
    3b74:	0e 94 ac 1d 	call	0x3b58	; 0x3b58 <__muluhisi3>
    3b78:	82 1b       	sub	r24, r18
    3b7a:	93 0b       	sbc	r25, r19
    3b7c:	08 95       	ret

00003b7e <__prologue_saves__>:
    3b7e:	2f 92       	push	r2
    3b80:	3f 92       	push	r3
    3b82:	4f 92       	push	r4
    3b84:	5f 92       	push	r5
    3b86:	6f 92       	push	r6
    3b88:	7f 92       	push	r7
    3b8a:	8f 92       	push	r8
    3b8c:	9f 92       	push	r9
    3b8e:	af 92       	push	r10
    3b90:	bf 92       	push	r11
    3b92:	cf 92       	push	r12
    3b94:	df 92       	push	r13
    3b96:	ef 92       	push	r14
    3b98:	ff 92       	push	r15
    3b9a:	0f 93       	push	r16
    3b9c:	1f 93       	push	r17
    3b9e:	cf 93       	push	r28
    3ba0:	df 93       	push	r29
    3ba2:	cd b7       	in	r28, 0x3d	; 61
    3ba4:	de b7       	in	r29, 0x3e	; 62
    3ba6:	ca 1b       	sub	r28, r26
    3ba8:	db 0b       	sbc	r29, r27
    3baa:	0f b6       	in	r0, 0x3f	; 63
    3bac:	f8 94       	cli
    3bae:	de bf       	out	0x3e, r29	; 62
    3bb0:	0f be       	out	0x3f, r0	; 63
    3bb2:	cd bf       	out	0x3d, r28	; 61
    3bb4:	09 94       	ijmp

00003bb6 <__epilogue_restores__>:
    3bb6:	2a 88       	ldd	r2, Y+18	; 0x12
    3bb8:	39 88       	ldd	r3, Y+17	; 0x11
    3bba:	48 88       	ldd	r4, Y+16	; 0x10
    3bbc:	5f 84       	ldd	r5, Y+15	; 0x0f
    3bbe:	6e 84       	ldd	r6, Y+14	; 0x0e
    3bc0:	7d 84       	ldd	r7, Y+13	; 0x0d
    3bc2:	8c 84       	ldd	r8, Y+12	; 0x0c
    3bc4:	9b 84       	ldd	r9, Y+11	; 0x0b
    3bc6:	aa 84       	ldd	r10, Y+10	; 0x0a
    3bc8:	b9 84       	ldd	r11, Y+9	; 0x09
    3bca:	c8 84       	ldd	r12, Y+8	; 0x08
    3bcc:	df 80       	ldd	r13, Y+7	; 0x07
    3bce:	ee 80       	ldd	r14, Y+6	; 0x06
    3bd0:	fd 80       	ldd	r15, Y+5	; 0x05
    3bd2:	0c 81       	ldd	r16, Y+4	; 0x04
    3bd4:	1b 81       	ldd	r17, Y+3	; 0x03
    3bd6:	aa 81       	ldd	r26, Y+2	; 0x02
    3bd8:	b9 81       	ldd	r27, Y+1	; 0x01
    3bda:	ce 0f       	add	r28, r30
    3bdc:	d1 1d       	adc	r29, r1
    3bde:	0f b6       	in	r0, 0x3f	; 63
    3be0:	f8 94       	cli
    3be2:	de bf       	out	0x3e, r29	; 62
    3be4:	0f be       	out	0x3f, r0	; 63
    3be6:	cd bf       	out	0x3d, r28	; 61
    3be8:	ed 01       	movw	r28, r26
    3bea:	08 95       	ret

00003bec <__udivmodsi4>:
    3bec:	a1 e2       	ldi	r26, 0x21	; 33
    3bee:	1a 2e       	mov	r1, r26
    3bf0:	aa 1b       	sub	r26, r26
    3bf2:	bb 1b       	sub	r27, r27
    3bf4:	fd 01       	movw	r30, r26
    3bf6:	0d c0       	rjmp	.+26     	; 0x3c12 <__udivmodsi4_ep>

00003bf8 <__udivmodsi4_loop>:
    3bf8:	aa 1f       	adc	r26, r26
    3bfa:	bb 1f       	adc	r27, r27
    3bfc:	ee 1f       	adc	r30, r30
    3bfe:	ff 1f       	adc	r31, r31
    3c00:	a2 17       	cp	r26, r18
    3c02:	b3 07       	cpc	r27, r19
    3c04:	e4 07       	cpc	r30, r20
    3c06:	f5 07       	cpc	r31, r21
    3c08:	20 f0       	brcs	.+8      	; 0x3c12 <__udivmodsi4_ep>
    3c0a:	a2 1b       	sub	r26, r18
    3c0c:	b3 0b       	sbc	r27, r19
    3c0e:	e4 0b       	sbc	r30, r20
    3c10:	f5 0b       	sbc	r31, r21

00003c12 <__udivmodsi4_ep>:
    3c12:	66 1f       	adc	r22, r22
    3c14:	77 1f       	adc	r23, r23
    3c16:	88 1f       	adc	r24, r24
    3c18:	99 1f       	adc	r25, r25
    3c1a:	1a 94       	dec	r1
    3c1c:	69 f7       	brne	.-38     	; 0x3bf8 <__udivmodsi4_loop>
    3c1e:	60 95       	com	r22
    3c20:	70 95       	com	r23
    3c22:	80 95       	com	r24
    3c24:	90 95       	com	r25
    3c26:	9b 01       	movw	r18, r22
    3c28:	ac 01       	movw	r20, r24
    3c2a:	bd 01       	movw	r22, r26
    3c2c:	cf 01       	movw	r24, r30
    3c2e:	08 95       	ret

00003c30 <__umulhisi3>:
    3c30:	a2 9f       	mul	r26, r18
    3c32:	b0 01       	movw	r22, r0
    3c34:	b3 9f       	mul	r27, r19
    3c36:	c0 01       	movw	r24, r0
    3c38:	a3 9f       	mul	r26, r19
    3c3a:	70 0d       	add	r23, r0
    3c3c:	81 1d       	adc	r24, r1
    3c3e:	11 24       	eor	r1, r1
    3c40:	91 1d       	adc	r25, r1
    3c42:	b2 9f       	mul	r27, r18
    3c44:	70 0d       	add	r23, r0
    3c46:	81 1d       	adc	r24, r1
    3c48:	11 24       	eor	r1, r1
    3c4a:	91 1d       	adc	r25, r1
    3c4c:	08 95       	ret

00003c4e <_exit>:
    3c4e:	f8 94       	cli

00003c50 <__stop_program>:
    3c50:	ff cf       	rjmp	.-2      	; 0x3c50 <__stop_program>
