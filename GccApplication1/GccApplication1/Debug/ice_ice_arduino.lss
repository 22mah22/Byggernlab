
ice_ice_arduino.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001738  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00081738  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000008c  20000434  00081b6c  00020434  2**2
                  ALLOC
  3 .stack        00000400  200004c0  00081bf8  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008c0  00081ff8  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   00007490  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001407  00000000  00000000  00027946  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00001214  00000000  00000000  00028d4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000218  00000000  00000000  00029f61  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001a0  00000000  00000000  0002a179  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00012ccf  00000000  00000000  0002a319  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000055b4  00000000  00000000  0003cfe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005454d  00000000  00000000  0004259c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000006a0  00000000  00000000  00096aec  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	c0 08 00 20 a1 04 08 00 9d 04 08 00 9d 04 08 00     ... ............
   80010:	9d 04 08 00 9d 04 08 00 9d 04 08 00 00 00 00 00     ................
	...
   8002c:	9d 04 08 00 9d 04 08 00 00 00 00 00 9d 04 08 00     ................
   8003c:	9d 04 08 00 9d 04 08 00 9d 04 08 00 9d 04 08 00     ................
   8004c:	9d 04 08 00 9d 04 08 00 9d 04 08 00 9d 04 08 00     ................
   8005c:	9d 04 08 00 b5 0c 08 00 9d 04 08 00 00 00 00 00     ................
   8006c:	9d 04 08 00 9d 04 08 00 9d 04 08 00 9d 04 08 00     ................
	...
   80084:	9d 04 08 00 9d 04 08 00 9d 04 08 00 9d 04 08 00     ................
   80094:	9d 04 08 00 9d 04 08 00 9d 04 08 00 9d 04 08 00     ................
   800a4:	00 00 00 00 9d 04 08 00 9d 04 08 00 9d 04 08 00     ................
   800b4:	9d 04 08 00 9d 04 08 00 9d 04 08 00 9d 04 08 00     ................
   800c4:	9d 04 08 00 9d 04 08 00 9d 04 08 00 9d 04 08 00     ................
   800d4:	9d 01 08 00 9d 04 08 00 9d 04 08 00 9d 04 08 00     ................
   800e4:	9d 04 08 00 9d 04 08 00 79 03 08 00 9d 04 08 00     ........y.......

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	00081738 	.word	0x00081738

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00081738 	.word	0x00081738
   80154:	20000438 	.word	0x20000438
   80158:	00081738 	.word	0x00081738
   8015c:	00000000 	.word	0x00000000

00080160 <adc_init>:

#include "sam.h"

void adc_init(){
	
	PMC->PMC_PCER1 = PMC_PCER1_PID37; //enable adc controller
   80160:	2320      	movs	r3, #32
   80162:	4a0b      	ldr	r2, [pc, #44]	; (80190 <adc_init+0x30>)
   80164:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   80168:	4a0a      	ldr	r2, [pc, #40]	; (80194 <adc_init+0x34>)
   8016a:	6053      	str	r3, [r2, #4]
	
	//Enable interrupt in NVIC
	NVIC_EnableIRQ(ID_ADC);
	
	
	ADC->ADC_CHER = ADC_CHER_CH1; //pin a6 på arduino due
   8016c:	4b0a      	ldr	r3, [pc, #40]	; (80198 <adc_init+0x38>)
   8016e:	2202      	movs	r2, #2
   80170:	611a      	str	r2, [r3, #16]
	//ADC->ADC_MR = ADC_MR_TRGEN_EN;
	ADC->ADC_MR = ADC_MR_FREERUN;
   80172:	2180      	movs	r1, #128	; 0x80
   80174:	6059      	str	r1, [r3, #4]
	
	ADC->ADC_CR = ADC_CR_START;
   80176:	601a      	str	r2, [r3, #0]
	ADC->ADC_IER = ADC_IER_COMPE;
   80178:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   8017c:	625a      	str	r2, [r3, #36]	; 0x24
	//ADC->ADC_IER |= ADC_IER_DRDY;
	ADC->ADC_EMR |= ADC_EMR_CMPMODE_LOW;
   8017e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   80180:	641a      	str	r2, [r3, #64]	; 0x40

	//ADC->ADC_EMR = (0x0u << 9);
	ADC->ADC_EMR |= ADC_EMR_CMPSEL(1);
   80182:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   80184:	f042 0210 	orr.w	r2, r2, #16
   80188:	641a      	str	r2, [r3, #64]	; 0x40
	ADC->ADC_CWR = ADC_CWR_LOWTHRES(0x0ff);
   8018a:	22ff      	movs	r2, #255	; 0xff
   8018c:	645a      	str	r2, [r3, #68]	; 0x44
   8018e:	4770      	bx	lr
   80190:	400e0600 	.word	0x400e0600
   80194:	e000e100 	.word	0xe000e100
   80198:	400c0000 	.word	0x400c0000

0008019c <ADC_Handler>:
uint8_t TOTAL_GOALS = 0;

void ADC_Handler( void ){
	//printf("Aa");

	TO_INCREMENT = 1; 
   8019c:	2201      	movs	r2, #1
   8019e:	4b04      	ldr	r3, [pc, #16]	; (801b0 <ADC_Handler+0x14>)
   801a0:	701a      	strb	r2, [r3, #0]
	int i = ADC->ADC_ISR;
   801a2:	4b04      	ldr	r3, [pc, #16]	; (801b4 <ADC_Handler+0x18>)
   801a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   801a6:	2220      	movs	r2, #32
   801a8:	4b03      	ldr	r3, [pc, #12]	; (801b8 <ADC_Handler+0x1c>)
   801aa:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
   801ae:	4770      	bx	lr
   801b0:	20000450 	.word	0x20000450
   801b4:	400c0000 	.word	0x400c0000
   801b8:	e000e100 	.word	0xe000e100

000801bc <goal_counter>:
	
}


void goal_counter(){
	if(GOAL_IN_ACTION == 0 && TO_INCREMENT){
   801bc:	4b0b      	ldr	r3, [pc, #44]	; (801ec <goal_counter+0x30>)
   801be:	785b      	ldrb	r3, [r3, #1]
   801c0:	b943      	cbnz	r3, 801d4 <goal_counter+0x18>
   801c2:	4b0a      	ldr	r3, [pc, #40]	; (801ec <goal_counter+0x30>)
   801c4:	781b      	ldrb	r3, [r3, #0]
   801c6:	b12b      	cbz	r3, 801d4 <goal_counter+0x18>
		TOTAL_GOALS += 1;
   801c8:	4b08      	ldr	r3, [pc, #32]	; (801ec <goal_counter+0x30>)
   801ca:	789a      	ldrb	r2, [r3, #2]
   801cc:	3201      	adds	r2, #1
   801ce:	709a      	strb	r2, [r3, #2]
		GOAL_IN_ACTION = 1;
   801d0:	2201      	movs	r2, #1
   801d2:	705a      	strb	r2, [r3, #1]
		
	}
	if(ADC->ADC_CDR[1] > 0x0ff){
   801d4:	4b06      	ldr	r3, [pc, #24]	; (801f0 <goal_counter+0x34>)
   801d6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   801d8:	2bff      	cmp	r3, #255	; 0xff
   801da:	d902      	bls.n	801e2 <goal_counter+0x26>
		GOAL_IN_ACTION = 0;
   801dc:	2200      	movs	r2, #0
   801de:	4b03      	ldr	r3, [pc, #12]	; (801ec <goal_counter+0x30>)
   801e0:	705a      	strb	r2, [r3, #1]
	}
	TO_INCREMENT = 0;
   801e2:	2200      	movs	r2, #0
   801e4:	4b01      	ldr	r3, [pc, #4]	; (801ec <goal_counter+0x30>)
   801e6:	701a      	strb	r2, [r3, #0]
   801e8:	4770      	bx	lr
   801ea:	bf00      	nop
   801ec:	20000450 	.word	0x20000450
   801f0:	400c0000 	.word	0x400c0000

000801f4 <can_init>:
   801f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   801f8:	1855      	adds	r5, r2, r1
   801fa:	2908      	cmp	r1, #8
   801fc:	bf98      	it	ls
   801fe:	2a08      	cmpls	r2, #8
   80200:	d864      	bhi.n	802cc <can_init+0xd8>
   80202:	460e      	mov	r6, r1
   80204:	2d08      	cmp	r5, #8
   80206:	dc61      	bgt.n	802cc <can_init+0xd8>
   80208:	4a32      	ldr	r2, [pc, #200]	; (802d4 <can_init+0xe0>)
   8020a:	6813      	ldr	r3, [r2, #0]
   8020c:	f023 0301 	bic.w	r3, r3, #1
   80210:	6013      	str	r3, [r2, #0]
   80212:	6913      	ldr	r3, [r2, #16]
   80214:	4b30      	ldr	r3, [pc, #192]	; (802d8 <can_init+0xe4>)
   80216:	f44f 7440 	mov.w	r4, #768	; 0x300
   8021a:	645c      	str	r4, [r3, #68]	; 0x44
   8021c:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   8021e:	f024 0403 	bic.w	r4, r4, #3
   80222:	671c      	str	r4, [r3, #112]	; 0x70
   80224:	2403      	movs	r4, #3
   80226:	605c      	str	r4, [r3, #4]
   80228:	665c      	str	r4, [r3, #100]	; 0x64
   8022a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   8022e:	4c2b      	ldr	r4, [pc, #172]	; (802dc <can_init+0xe8>)
   80230:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
   80234:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   80238:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   8023c:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
   80240:	6150      	str	r0, [r2, #20]
   80242:	42a9      	cmp	r1, r5
   80244:	dc40      	bgt.n	802c8 <can_init+0xd4>
   80246:	460a      	mov	r2, r1
   80248:	2400      	movs	r4, #0
   8024a:	46a1      	mov	r9, r4
   8024c:	f8df 8084 	ldr.w	r8, [pc, #132]	; 802d4 <can_init+0xe0>
   80250:	f04f 5c00 	mov.w	ip, #536870912	; 0x20000000
   80254:	f04f 7e80 	mov.w	lr, #16777216	; 0x1000000
   80258:	2701      	movs	r7, #1
   8025a:	0153      	lsls	r3, r2, #5
   8025c:	f103 2040 	add.w	r0, r3, #1073758208	; 0x40004000
   80260:	f500 2030 	add.w	r0, r0, #720896	; 0xb0000
   80264:	f8c0 9204 	str.w	r9, [r0, #516]	; 0x204
   80268:	4443      	add	r3, r8
   8026a:	f8c3 c208 	str.w	ip, [r3, #520]	; 0x208
   8026e:	f8c0 e200 	str.w	lr, [r0, #512]	; 0x200
   80272:	f8d3 021c 	ldr.w	r0, [r3, #540]	; 0x21c
   80276:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   8027a:	f8c3 021c 	str.w	r0, [r3, #540]	; 0x21c
   8027e:	fa07 f302 	lsl.w	r3, r7, r2
   80282:	431c      	orrs	r4, r3
   80284:	3201      	adds	r2, #1
   80286:	4295      	cmp	r5, r2
   80288:	dae7      	bge.n	8025a <can_init+0x66>
   8028a:	b181      	cbz	r1, 802ae <can_init+0xba>
   8028c:	2300      	movs	r3, #0
   8028e:	4911      	ldr	r1, [pc, #68]	; (802d4 <can_init+0xe0>)
   80290:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
   80294:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
   80298:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   8029c:	f8c2 5208 	str.w	r5, [r2, #520]	; 0x208
   802a0:	f103 0210 	add.w	r2, r3, #16
   802a4:	0152      	lsls	r2, r2, #5
   802a6:	5088      	str	r0, [r1, r2]
   802a8:	3301      	adds	r3, #1
   802aa:	429e      	cmp	r6, r3
   802ac:	d1f4      	bne.n	80298 <can_init+0xa4>
   802ae:	4b09      	ldr	r3, [pc, #36]	; (802d4 <can_init+0xe0>)
   802b0:	605c      	str	r4, [r3, #4]
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   802b2:	f44f 6100 	mov.w	r1, #2048	; 0x800
   802b6:	4a0a      	ldr	r2, [pc, #40]	; (802e0 <can_init+0xec>)
   802b8:	6051      	str	r1, [r2, #4]
   802ba:	681a      	ldr	r2, [r3, #0]
   802bc:	f042 0201 	orr.w	r2, r2, #1
   802c0:	601a      	str	r2, [r3, #0]
   802c2:	2000      	movs	r0, #0
   802c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   802c8:	2400      	movs	r4, #0
   802ca:	e7de      	b.n	8028a <can_init+0x96>
   802cc:	2001      	movs	r0, #1
   802ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   802d2:	bf00      	nop
   802d4:	400b4000 	.word	0x400b4000
   802d8:	400e0e00 	.word	0x400e0e00
   802dc:	1000102b 	.word	0x1000102b
   802e0:	e000e100 	.word	0xe000e100

000802e4 <can_init_def_tx_rx_mb>:
   802e4:	b508      	push	{r3, lr}
   802e6:	2202      	movs	r2, #2
   802e8:	2101      	movs	r1, #1
   802ea:	4b01      	ldr	r3, [pc, #4]	; (802f0 <can_init_def_tx_rx_mb+0xc>)
   802ec:	4798      	blx	r3
   802ee:	bd08      	pop	{r3, pc}
   802f0:	000801f5 	.word	0x000801f5

000802f4 <can_receive>:
   802f4:	014b      	lsls	r3, r1, #5
   802f6:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   802fa:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   802fe:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   80302:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80306:	d033      	beq.n	80370 <can_receive+0x7c>
   80308:	b430      	push	{r4, r5}
   8030a:	014b      	lsls	r3, r1, #5
   8030c:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   80310:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   80314:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
   80318:	f8d3 4218 	ldr.w	r4, [r3, #536]	; 0x218
   8031c:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   80320:	f3c5 458a 	ubfx	r5, r5, #18, #11
   80324:	8005      	strh	r5, [r0, #0]
   80326:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   8032a:	f3c3 4303 	ubfx	r3, r3, #16, #4
   8032e:	7083      	strb	r3, [r0, #2]
   80330:	461d      	mov	r5, r3
   80332:	b15b      	cbz	r3, 8034c <can_receive+0x58>
   80334:	3003      	adds	r0, #3
   80336:	2300      	movs	r3, #0
   80338:	2b03      	cmp	r3, #3
   8033a:	bfd9      	ittee	le
   8033c:	7002      	strble	r2, [r0, #0]
   8033e:	0a12      	lsrle	r2, r2, #8
   80340:	7004      	strbgt	r4, [r0, #0]
   80342:	0a24      	lsrgt	r4, r4, #8
   80344:	3301      	adds	r3, #1
   80346:	3001      	adds	r0, #1
   80348:	42ab      	cmp	r3, r5
   8034a:	d1f5      	bne.n	80338 <can_receive+0x44>
   8034c:	4b09      	ldr	r3, [pc, #36]	; (80374 <can_receive+0x80>)
   8034e:	f101 0210 	add.w	r2, r1, #16
   80352:	0152      	lsls	r2, r2, #5
   80354:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   80358:	5098      	str	r0, [r3, r2]
   8035a:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   8035e:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   80362:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   80366:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
   8036a:	2000      	movs	r0, #0
   8036c:	bc30      	pop	{r4, r5}
   8036e:	4770      	bx	lr
   80370:	2001      	movs	r0, #1
   80372:	4770      	bx	lr
   80374:	400b4000 	.word	0x400b4000

00080378 <CAN0_Handler>:
 * \param void
 *
 * \retval 
 */
void CAN0_Handler( void )
{
   80378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8037c:	b084      	sub	sp, #16
	if(DEBUG_INTERRUPT){}/*printf("CAN0 interrupt\n\r")*/;
	char can_sr = CAN0->CAN_SR; 
   8037e:	4b32      	ldr	r3, [pc, #200]	; (80448 <CAN0_Handler+0xd0>)
   80380:	691c      	ldr	r4, [r3, #16]
	
	//RX interrupt
	if(can_sr & (CAN_SR_MB1 | CAN_SR_MB2) )//Only mailbox 1 and 2 specified for receiving
   80382:	f014 0f06 	tst.w	r4, #6
   80386:	d02b      	beq.n	803e0 <CAN0_Handler+0x68>
	{
		CAN_MESSAGE message;
		if(can_sr & CAN_SR_MB1)  //Mailbox 1 event
   80388:	f014 0f02 	tst.w	r4, #2
   8038c:	d136      	bne.n	803fc <CAN0_Handler+0x84>
		{
			can_receive(&message, 1);

		}
		else if(can_sr & CAN_SR_MB2) //Mailbox 2 event
   8038e:	f014 0f04 	tst.w	r4, #4
   80392:	d038      	beq.n	80406 <CAN0_Handler+0x8e>
		
		{
			can_receive(&message, 2);
   80394:	2102      	movs	r1, #2
   80396:	a801      	add	r0, sp, #4
   80398:	4b2c      	ldr	r3, [pc, #176]	; (8044c <CAN0_Handler+0xd4>)
   8039a:	4798      	blx	r3
		else
		{
			printf("CAN0 message arrived in non-used mailbox\n\r");
		}
		
		if(message.id < 0x00ff && message.id > 0x000f){
   8039c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
   803a0:	f1a1 0310 	sub.w	r3, r1, #16
   803a4:	b29b      	uxth	r3, r3
   803a6:	2bee      	cmp	r3, #238	; 0xee
   803a8:	d831      	bhi.n	8040e <CAN0_Handler+0x96>
			//interpret_joystick
			joystick.x_val = (message.data[3] == 0x11) ? message.data[0] : message.data[0]*-1;
   803aa:	f89d 300a 	ldrb.w	r3, [sp, #10]
   803ae:	2b11      	cmp	r3, #17
   803b0:	bf0f      	iteee	eq
   803b2:	f99d 3007 	ldrsbeq.w	r3, [sp, #7]
   803b6:	f89d 3007 	ldrbne.w	r3, [sp, #7]
   803ba:	425b      	negne	r3, r3
   803bc:	b25b      	sxtbne	r3, r3
   803be:	4a24      	ldr	r2, [pc, #144]	; (80450 <CAN0_Handler+0xd8>)
   803c0:	7013      	strb	r3, [r2, #0]
			joystick.y_val = (message.data[4] == 0x11) ? message.data[1] : message.data[1]*-1;
   803c2:	f89d 300b 	ldrb.w	r3, [sp, #11]
   803c6:	2b11      	cmp	r3, #17
   803c8:	bf0f      	iteee	eq
   803ca:	f99d 3008 	ldrsbeq.w	r3, [sp, #8]
   803ce:	f89d 3008 	ldrbne.w	r3, [sp, #8]
   803d2:	425b      	negne	r3, r3
   803d4:	b25b      	sxtbne	r3, r3
   803d6:	4a1e      	ldr	r2, [pc, #120]	; (80450 <CAN0_Handler+0xd8>)
   803d8:	7053      	strb	r3, [r2, #1]
			joystick.butt_pressed = message.data[2];
   803da:	f89d 3009 	ldrb.w	r3, [sp, #9]
   803de:	7093      	strb	r3, [r2, #2]
			if(DEBUG_INTERRUPT)printf("\n\r");
		}
		
	}
	
	if(can_sr & CAN_SR_MB0)
   803e0:	f014 0f01 	tst.w	r4, #1
   803e4:	d002      	beq.n	803ec <CAN0_Handler+0x74>
	{
		/*if(DEBUG_INTERRUPT) printf("CAN0 MB0 ready to send \n\r");*/
		
	//Disable interrupt
		CAN0->CAN_IDR = CAN_IER_MB0;
   803e6:	2201      	movs	r2, #1
   803e8:	4b17      	ldr	r3, [pc, #92]	; (80448 <CAN0_Handler+0xd0>)
   803ea:	609a      	str	r2, [r3, #8]
    NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   803ec:	f44f 6200 	mov.w	r2, #2048	; 0x800
   803f0:	4b18      	ldr	r3, [pc, #96]	; (80454 <CAN0_Handler+0xdc>)
   803f2:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184

	}
	
	NVIC_ClearPendingIRQ(ID_CAN0);
	//sei();*/
}
   803f6:	b004      	add	sp, #16
   803f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			can_receive(&message, 1);
   803fc:	2101      	movs	r1, #1
   803fe:	a801      	add	r0, sp, #4
   80400:	4b12      	ldr	r3, [pc, #72]	; (8044c <CAN0_Handler+0xd4>)
   80402:	4798      	blx	r3
   80404:	e7ca      	b.n	8039c <CAN0_Handler+0x24>
			printf("CAN0 message arrived in non-used mailbox\n\r");
   80406:	4814      	ldr	r0, [pc, #80]	; (80458 <CAN0_Handler+0xe0>)
   80408:	4b14      	ldr	r3, [pc, #80]	; (8045c <CAN0_Handler+0xe4>)
   8040a:	4798      	blx	r3
   8040c:	e7c6      	b.n	8039c <CAN0_Handler+0x24>
			if(DEBUG_INTERRUPT)printf("message id: %d\n\r", message.id);
   8040e:	4814      	ldr	r0, [pc, #80]	; (80460 <CAN0_Handler+0xe8>)
   80410:	4d12      	ldr	r5, [pc, #72]	; (8045c <CAN0_Handler+0xe4>)
   80412:	47a8      	blx	r5
			if(DEBUG_INTERRUPT)printf("message data length: %d\n\r", message.data_length);
   80414:	f89d 1006 	ldrb.w	r1, [sp, #6]
   80418:	4812      	ldr	r0, [pc, #72]	; (80464 <CAN0_Handler+0xec>)
   8041a:	47a8      	blx	r5
			for (int i = 0; i < message.data_length; i++)
   8041c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   80420:	b173      	cbz	r3, 80440 <CAN0_Handler+0xc8>
   80422:	f10d 0607 	add.w	r6, sp, #7
   80426:	2500      	movs	r5, #0
				if(DEBUG_INTERRUPT)printf("%d ", message.data[i]);
   80428:	f8df 8040 	ldr.w	r8, [pc, #64]	; 8046c <CAN0_Handler+0xf4>
   8042c:	4f0b      	ldr	r7, [pc, #44]	; (8045c <CAN0_Handler+0xe4>)
   8042e:	f816 1b01 	ldrb.w	r1, [r6], #1
   80432:	4640      	mov	r0, r8
   80434:	47b8      	blx	r7
			for (int i = 0; i < message.data_length; i++)
   80436:	3501      	adds	r5, #1
   80438:	f89d 3006 	ldrb.w	r3, [sp, #6]
   8043c:	42ab      	cmp	r3, r5
   8043e:	dcf6      	bgt.n	8042e <CAN0_Handler+0xb6>
			if(DEBUG_INTERRUPT)printf("\n\r");
   80440:	4809      	ldr	r0, [pc, #36]	; (80468 <CAN0_Handler+0xf0>)
   80442:	4b06      	ldr	r3, [pc, #24]	; (8045c <CAN0_Handler+0xe4>)
   80444:	4798      	blx	r3
   80446:	e7cb      	b.n	803e0 <CAN0_Handler+0x68>
   80448:	400b4000 	.word	0x400b4000
   8044c:	000802f5 	.word	0x000802f5
   80450:	20000454 	.word	0x20000454
   80454:	e000e100 	.word	0xe000e100
   80458:	00081660 	.word	0x00081660
   8045c:	00080b9d 	.word	0x00080b9d
   80460:	0008168c 	.word	0x0008168c
   80464:	000816a0 	.word	0x000816a0
   80468:	00081688 	.word	0x00081688
   8046c:	000816bc 	.word	0x000816bc

00080470 <dac_init>:



void dac_init(){
	
	PMC->PMC_PCER1 = PMC_PCER1_PID38;
   80470:	2240      	movs	r2, #64	; 0x40
   80472:	4b09      	ldr	r3, [pc, #36]	; (80498 <dac_init+0x28>)
   80474:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
	
	
	DACC->DACC_MR |= DACC_MR_USER_SEL_CHANNEL1;
   80478:	f5a3 33c3 	sub.w	r3, r3, #99840	; 0x18600
   8047c:	685a      	ldr	r2, [r3, #4]
   8047e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
   80482:	605a      	str	r2, [r3, #4]
	DACC->DACC_MR &= ~(1<<0); //disable trigger, set freemode
   80484:	685a      	ldr	r2, [r3, #4]
   80486:	f022 0201 	bic.w	r2, r2, #1
   8048a:	605a      	str	r2, [r3, #4]
	//DACC->DACC_MR |= DACC_MR_WORD_WORD;
	//DACC->DACC_CHER |= DACC_CHER_CH0;
	DACC->DACC_CHER = DACC_CHER_CH1;
   8048c:	2202      	movs	r2, #2
   8048e:	611a      	str	r2, [r3, #16]
	
	DACC->DACC_CDR = 0x05ff;
   80490:	f240 52ff 	movw	r2, #1535	; 0x5ff
   80494:	621a      	str	r2, [r3, #32]
   80496:	4770      	bx	lr
   80498:	400e0600 	.word	0x400e0600

0008049c <Dummy_Handler>:
   8049c:	e7fe      	b.n	8049c <Dummy_Handler>
	...

000804a0 <Reset_Handler>:
   804a0:	b508      	push	{r3, lr}
   804a2:	4b18      	ldr	r3, [pc, #96]	; (80504 <Reset_Handler+0x64>)
   804a4:	4a18      	ldr	r2, [pc, #96]	; (80508 <Reset_Handler+0x68>)
   804a6:	429a      	cmp	r2, r3
   804a8:	d010      	beq.n	804cc <Reset_Handler+0x2c>
   804aa:	4b18      	ldr	r3, [pc, #96]	; (8050c <Reset_Handler+0x6c>)
   804ac:	4a15      	ldr	r2, [pc, #84]	; (80504 <Reset_Handler+0x64>)
   804ae:	429a      	cmp	r2, r3
   804b0:	d20c      	bcs.n	804cc <Reset_Handler+0x2c>
   804b2:	3b01      	subs	r3, #1
   804b4:	1a9b      	subs	r3, r3, r2
   804b6:	f023 0303 	bic.w	r3, r3, #3
   804ba:	3304      	adds	r3, #4
   804bc:	4413      	add	r3, r2
   804be:	4912      	ldr	r1, [pc, #72]	; (80508 <Reset_Handler+0x68>)
   804c0:	f851 0b04 	ldr.w	r0, [r1], #4
   804c4:	f842 0b04 	str.w	r0, [r2], #4
   804c8:	429a      	cmp	r2, r3
   804ca:	d1f9      	bne.n	804c0 <Reset_Handler+0x20>
   804cc:	4b10      	ldr	r3, [pc, #64]	; (80510 <Reset_Handler+0x70>)
   804ce:	4a11      	ldr	r2, [pc, #68]	; (80514 <Reset_Handler+0x74>)
   804d0:	429a      	cmp	r2, r3
   804d2:	d20a      	bcs.n	804ea <Reset_Handler+0x4a>
   804d4:	3b01      	subs	r3, #1
   804d6:	1a9b      	subs	r3, r3, r2
   804d8:	f023 0303 	bic.w	r3, r3, #3
   804dc:	3304      	adds	r3, #4
   804de:	4413      	add	r3, r2
   804e0:	2100      	movs	r1, #0
   804e2:	f842 1b04 	str.w	r1, [r2], #4
   804e6:	4293      	cmp	r3, r2
   804e8:	d1fb      	bne.n	804e2 <Reset_Handler+0x42>
   804ea:	4b0b      	ldr	r3, [pc, #44]	; (80518 <Reset_Handler+0x78>)
   804ec:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   804f0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   804f4:	4a09      	ldr	r2, [pc, #36]	; (8051c <Reset_Handler+0x7c>)
   804f6:	6093      	str	r3, [r2, #8]
   804f8:	4b09      	ldr	r3, [pc, #36]	; (80520 <Reset_Handler+0x80>)
   804fa:	4798      	blx	r3
   804fc:	4b09      	ldr	r3, [pc, #36]	; (80524 <Reset_Handler+0x84>)
   804fe:	4798      	blx	r3
   80500:	e7fe      	b.n	80500 <Reset_Handler+0x60>
   80502:	bf00      	nop
   80504:	20000000 	.word	0x20000000
   80508:	00081738 	.word	0x00081738
   8050c:	20000434 	.word	0x20000434
   80510:	200004c0 	.word	0x200004c0
   80514:	20000434 	.word	0x20000434
   80518:	00080000 	.word	0x00080000
   8051c:	e000ed00 	.word	0xe000ed00
   80520:	000814f1 	.word	0x000814f1
   80524:	000807cd 	.word	0x000807cd

00080528 <SystemInit>:
   80528:	f44f 6380 	mov.w	r3, #1024	; 0x400
   8052c:	4a20      	ldr	r2, [pc, #128]	; (805b0 <SystemInit+0x88>)
   8052e:	6013      	str	r3, [r2, #0]
   80530:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80534:	6013      	str	r3, [r2, #0]
   80536:	4b1f      	ldr	r3, [pc, #124]	; (805b4 <SystemInit+0x8c>)
   80538:	6a1b      	ldr	r3, [r3, #32]
   8053a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   8053e:	d107      	bne.n	80550 <SystemInit+0x28>
   80540:	4a1d      	ldr	r2, [pc, #116]	; (805b8 <SystemInit+0x90>)
   80542:	4b1c      	ldr	r3, [pc, #112]	; (805b4 <SystemInit+0x8c>)
   80544:	621a      	str	r2, [r3, #32]
   80546:	461a      	mov	r2, r3
   80548:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8054a:	f013 0f01 	tst.w	r3, #1
   8054e:	d0fb      	beq.n	80548 <SystemInit+0x20>
   80550:	4a1a      	ldr	r2, [pc, #104]	; (805bc <SystemInit+0x94>)
   80552:	4b18      	ldr	r3, [pc, #96]	; (805b4 <SystemInit+0x8c>)
   80554:	621a      	str	r2, [r3, #32]
   80556:	461a      	mov	r2, r3
   80558:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8055a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   8055e:	d0fb      	beq.n	80558 <SystemInit+0x30>
   80560:	4a14      	ldr	r2, [pc, #80]	; (805b4 <SystemInit+0x8c>)
   80562:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80564:	f023 0303 	bic.w	r3, r3, #3
   80568:	f043 0301 	orr.w	r3, r3, #1
   8056c:	6313      	str	r3, [r2, #48]	; 0x30
   8056e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80570:	f013 0f08 	tst.w	r3, #8
   80574:	d0fb      	beq.n	8056e <SystemInit+0x46>
   80576:	4a12      	ldr	r2, [pc, #72]	; (805c0 <SystemInit+0x98>)
   80578:	4b0e      	ldr	r3, [pc, #56]	; (805b4 <SystemInit+0x8c>)
   8057a:	629a      	str	r2, [r3, #40]	; 0x28
   8057c:	461a      	mov	r2, r3
   8057e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80580:	f013 0f02 	tst.w	r3, #2
   80584:	d0fb      	beq.n	8057e <SystemInit+0x56>
   80586:	2211      	movs	r2, #17
   80588:	4b0a      	ldr	r3, [pc, #40]	; (805b4 <SystemInit+0x8c>)
   8058a:	631a      	str	r2, [r3, #48]	; 0x30
   8058c:	461a      	mov	r2, r3
   8058e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80590:	f013 0f08 	tst.w	r3, #8
   80594:	d0fb      	beq.n	8058e <SystemInit+0x66>
   80596:	2212      	movs	r2, #18
   80598:	4b06      	ldr	r3, [pc, #24]	; (805b4 <SystemInit+0x8c>)
   8059a:	631a      	str	r2, [r3, #48]	; 0x30
   8059c:	461a      	mov	r2, r3
   8059e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   805a0:	f013 0f08 	tst.w	r3, #8
   805a4:	d0fb      	beq.n	8059e <SystemInit+0x76>
   805a6:	4a07      	ldr	r2, [pc, #28]	; (805c4 <SystemInit+0x9c>)
   805a8:	4b07      	ldr	r3, [pc, #28]	; (805c8 <SystemInit+0xa0>)
   805aa:	601a      	str	r2, [r3, #0]
   805ac:	4770      	bx	lr
   805ae:	bf00      	nop
   805b0:	400e0a00 	.word	0x400e0a00
   805b4:	400e0600 	.word	0x400e0600
   805b8:	00370809 	.word	0x00370809
   805bc:	01370809 	.word	0x01370809
   805c0:	200d3f01 	.word	0x200d3f01
   805c4:	0501bd00 	.word	0x0501bd00
   805c8:	20000000 	.word	0x20000000

000805cc <move_solenoid>:
 #include "sam.h"
 
 
 
 
 void move_solenoid(){
   805cc:	b510      	push	{r4, lr}
	 //printf("joystick.x_val : %d \n\r", joystick.x_val);
	 
	 if(joystick.x_val < 0){
   805ce:	4b17      	ldr	r3, [pc, #92]	; (8062c <move_solenoid+0x60>)
   805d0:	f993 0000 	ldrsb.w	r0, [r3]
   805d4:	2800      	cmp	r0, #0
   805d6:	db0f      	blt.n	805f8 <move_solenoid+0x2c>
		 uint8_t val = 50-abs(joystick.x_val)*0.5;
		 timer_change_duty(val);
	 }
	 if(joystick.x_val >= 0){
		 uint8_t val2 = 50+joystick.x_val*0.5;
   805d8:	4b15      	ldr	r3, [pc, #84]	; (80630 <move_solenoid+0x64>)
   805da:	4798      	blx	r3
   805dc:	2200      	movs	r2, #0
   805de:	4b15      	ldr	r3, [pc, #84]	; (80634 <move_solenoid+0x68>)
   805e0:	4c15      	ldr	r4, [pc, #84]	; (80638 <move_solenoid+0x6c>)
   805e2:	47a0      	blx	r4
   805e4:	2200      	movs	r2, #0
   805e6:	4b15      	ldr	r3, [pc, #84]	; (8063c <move_solenoid+0x70>)
   805e8:	4c15      	ldr	r4, [pc, #84]	; (80640 <move_solenoid+0x74>)
   805ea:	47a0      	blx	r4
   805ec:	4b15      	ldr	r3, [pc, #84]	; (80644 <move_solenoid+0x78>)
   805ee:	4798      	blx	r3
		 timer_change_duty(val2);
   805f0:	b2c0      	uxtb	r0, r0
   805f2:	4b15      	ldr	r3, [pc, #84]	; (80648 <move_solenoid+0x7c>)
   805f4:	4798      	blx	r3
   805f6:	bd10      	pop	{r4, pc}
		 uint8_t val = 50-abs(joystick.x_val)*0.5;
   805f8:	2800      	cmp	r0, #0
   805fa:	bfb8      	it	lt
   805fc:	4240      	neglt	r0, r0
   805fe:	4b0c      	ldr	r3, [pc, #48]	; (80630 <move_solenoid+0x64>)
   80600:	4798      	blx	r3
   80602:	2200      	movs	r2, #0
   80604:	4b0b      	ldr	r3, [pc, #44]	; (80634 <move_solenoid+0x68>)
   80606:	4c0c      	ldr	r4, [pc, #48]	; (80638 <move_solenoid+0x6c>)
   80608:	47a0      	blx	r4
   8060a:	4602      	mov	r2, r0
   8060c:	460b      	mov	r3, r1
   8060e:	2000      	movs	r0, #0
   80610:	490a      	ldr	r1, [pc, #40]	; (8063c <move_solenoid+0x70>)
   80612:	4c0e      	ldr	r4, [pc, #56]	; (8064c <move_solenoid+0x80>)
   80614:	47a0      	blx	r4
   80616:	4b0b      	ldr	r3, [pc, #44]	; (80644 <move_solenoid+0x78>)
   80618:	4798      	blx	r3
		 timer_change_duty(val);
   8061a:	b2c0      	uxtb	r0, r0
   8061c:	4b0a      	ldr	r3, [pc, #40]	; (80648 <move_solenoid+0x7c>)
   8061e:	4798      	blx	r3
	 if(joystick.x_val >= 0){
   80620:	4b02      	ldr	r3, [pc, #8]	; (8062c <move_solenoid+0x60>)
   80622:	f993 0000 	ldrsb.w	r0, [r3]
   80626:	2800      	cmp	r0, #0
   80628:	dbe5      	blt.n	805f6 <move_solenoid+0x2a>
   8062a:	e7d5      	b.n	805d8 <move_solenoid+0xc>
   8062c:	20000454 	.word	0x20000454
   80630:	00080fc1 	.word	0x00080fc1
   80634:	3fe00000 	.word	0x3fe00000
   80638:	0008108d 	.word	0x0008108d
   8063c:	40490000 	.word	0x40490000
   80640:	00080d29 	.word	0x00080d29
   80644:	000814b1 	.word	0x000814b1
   80648:	00080c05 	.word	0x00080c05
   8064c:	00080d25 	.word	0x00080d25

00080650 <change_motor_speed>:
 
 
 void change_motor_speed(){
	 //printf("joystick.y_val : %d \n\r", joystick.y_val);
	 
	 if(joystick.y_val < - 10){
   80650:	4b16      	ldr	r3, [pc, #88]	; (806ac <change_motor_speed+0x5c>)
   80652:	f993 3001 	ldrsb.w	r3, [r3, #1]
   80656:	f113 0f0a 	cmn.w	r3, #10
   8065a:	da0e      	bge.n	8067a <change_motor_speed+0x2a>
		 PIOD->PIO_CODR = PIO_CODR_P10; //set direction left
   8065c:	f44f 6180 	mov.w	r1, #1024	; 0x400
   80660:	4a13      	ldr	r2, [pc, #76]	; (806b0 <change_motor_speed+0x60>)
   80662:	6351      	str	r1, [r2, #52]	; 0x34
		 uint16_t val = 0x01ff+abs(joystick.y_val)*5;
   80664:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
   80668:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
   8066c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80670:	f202 12ff 	addw	r2, r2, #511	; 0x1ff
		 DACC->DACC_CDR = val;
   80674:	b292      	uxth	r2, r2
   80676:	490f      	ldr	r1, [pc, #60]	; (806b4 <change_motor_speed+0x64>)
   80678:	620a      	str	r2, [r1, #32]
	 }
	 if(joystick.y_val >= 10){
   8067a:	2b09      	cmp	r3, #9
   8067c:	dd0e      	ble.n	8069c <change_motor_speed+0x4c>
		 PIOD->PIO_SODR = PIO_SODR_P10; //set direction right
   8067e:	f44f 6180 	mov.w	r1, #1024	; 0x400
   80682:	4a0b      	ldr	r2, [pc, #44]	; (806b0 <change_motor_speed+0x60>)
   80684:	6311      	str	r1, [r2, #48]	; 0x30
		 uint16_t val2 = 0x01ff+abs(joystick.y_val)*5;
   80686:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
   8068a:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
   8068e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80692:	f202 12ff 	addw	r2, r2, #511	; 0x1ff
		 DACC->DACC_CDR = val2;
   80696:	b292      	uxth	r2, r2
   80698:	4906      	ldr	r1, [pc, #24]	; (806b4 <change_motor_speed+0x64>)
   8069a:	620a      	str	r2, [r1, #32]
	 }
	 
	 if(joystick.y_val > -10 && joystick.y_val < 10){
   8069c:	3309      	adds	r3, #9
   8069e:	b2db      	uxtb	r3, r3
   806a0:	2b12      	cmp	r3, #18
   806a2:	d802      	bhi.n	806aa <change_motor_speed+0x5a>
		 DACC->DACC_CDR = 0;
   806a4:	2200      	movs	r2, #0
   806a6:	4b03      	ldr	r3, [pc, #12]	; (806b4 <change_motor_speed+0x64>)
   806a8:	621a      	str	r2, [r3, #32]
   806aa:	4770      	bx	lr
   806ac:	20000454 	.word	0x20000454
   806b0:	400e1400 	.word	0x400e1400
   806b4:	400c8000 	.word	0x400c8000

000806b8 <motor_box_init>:
	 }
 }
 

void motor_box_init(){
	PIOD->PIO_PER |= PIO_PER_P10; //PIO Enable Register, PIO Enable //pin32 DIR PD10
   806b8:	4b20      	ldr	r3, [pc, #128]	; (8073c <motor_box_init+0x84>)
   806ba:	681a      	ldr	r2, [r3, #0]
   806bc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
   806c0:	601a      	str	r2, [r3, #0]
	PIOD->PIO_OER |= PIO_OER_P10; //Output Enable Register, Output Enable //pin32 DIR PD10
   806c2:	691a      	ldr	r2, [r3, #16]
   806c4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
   806c8:	611a      	str	r2, [r3, #16]
	PIOD->PIO_PER |= PIO_PER_P9; //PIO Enable Register, PIO Enable //pin30 EN PD9
   806ca:	681a      	ldr	r2, [r3, #0]
   806cc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   806d0:	601a      	str	r2, [r3, #0]
	PIOD->PIO_OER |= PIO_OER_P9; //Output Enable Register, Output Enable //pin30 EN PD9
   806d2:	691a      	ldr	r2, [r3, #16]
   806d4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   806d8:	611a      	str	r2, [r3, #16]
	
	PIOD->PIO_SODR = PIO_SODR_P9; //Set Output Data Register, Set Output Data
   806da:	f44f 7200 	mov.w	r2, #512	; 0x200
   806de:	631a      	str	r2, [r3, #48]	; 0x30
	PIOD->PIO_CODR = PIO_CODR_P10; //Clear Output Data Register, Set Output Data
   806e0:	f44f 6280 	mov.w	r2, #1024	; 0x400
   806e4:	635a      	str	r2, [r3, #52]	; 0x34
	
	PMC->PMC_PCER0 = PMC_PCER0_PID13;
   806e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   806ea:	4a15      	ldr	r2, [pc, #84]	; (80740 <motor_box_init+0x88>)
   806ec:	6111      	str	r1, [r2, #16]

	
	//allow counter to start
	PIOD->PIO_SODR |= PIO_SODR_P1; //!RST high
   806ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   806f0:	f042 0202 	orr.w	r2, r2, #2
   806f4:	631a      	str	r2, [r3, #48]	; 0x30
	
	//enable pins for reading encoder
	PIOC->PIO_PER |= PIO_PER_P8; //DO7
   806f6:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
   806fa:	681a      	ldr	r2, [r3, #0]
   806fc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   80700:	601a      	str	r2, [r3, #0]
	PIOC->PIO_PER |= PIO_PER_P7; //DO6
   80702:	681a      	ldr	r2, [r3, #0]
   80704:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   80708:	601a      	str	r2, [r3, #0]
	PIOC->PIO_PER |= PIO_PER_P6; //DO5
   8070a:	681a      	ldr	r2, [r3, #0]
   8070c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   80710:	601a      	str	r2, [r3, #0]
	PIOC->PIO_PER |= PIO_PER_P5; //DO4
   80712:	681a      	ldr	r2, [r3, #0]
   80714:	f042 0220 	orr.w	r2, r2, #32
   80718:	601a      	str	r2, [r3, #0]
	PIOC->PIO_PER |= PIO_PER_P4; //DO3
   8071a:	681a      	ldr	r2, [r3, #0]
   8071c:	f042 0210 	orr.w	r2, r2, #16
   80720:	601a      	str	r2, [r3, #0]
	PIOC->PIO_PER |= PIO_PER_P3; //DO2
   80722:	681a      	ldr	r2, [r3, #0]
   80724:	f042 0208 	orr.w	r2, r2, #8
   80728:	601a      	str	r2, [r3, #0]
	PIOC->PIO_PER |= PIO_PER_P2; //DO1
   8072a:	681a      	ldr	r2, [r3, #0]
   8072c:	f042 0204 	orr.w	r2, r2, #4
   80730:	601a      	str	r2, [r3, #0]
	PIOC->PIO_PER |= PIO_PER_P1; //DO0
   80732:	681a      	ldr	r2, [r3, #0]
   80734:	f042 0202 	orr.w	r2, r2, #2
   80738:	601a      	str	r2, [r3, #0]
   8073a:	4770      	bx	lr
   8073c:	400e1400 	.word	0x400e1400
   80740:	400e0600 	.word	0x400e0600

00080744 <encoder_read>:
}


uint8_t encoder_read(){
	// PIO (Output) Enable Register, PIO Enable
	PIOD->PIO_PER |= PIO_PER_P2; // Pin 27 sel PD2 SEL
   80744:	4b1f      	ldr	r3, [pc, #124]	; (807c4 <encoder_read+0x80>)
   80746:	681a      	ldr	r2, [r3, #0]
   80748:	f042 0204 	orr.w	r2, r2, #4
   8074c:	601a      	str	r2, [r3, #0]
	PIOD->PIO_OER |= PIO_OER_P2; // 
   8074e:	691a      	ldr	r2, [r3, #16]
   80750:	f042 0204 	orr.w	r2, r2, #4
   80754:	611a      	str	r2, [r3, #16]
	PIOD->PIO_PER |= PIO_PER_P1; // Pin 26 not_rst PD1 !RST
   80756:	681a      	ldr	r2, [r3, #0]
   80758:	f042 0202 	orr.w	r2, r2, #2
   8075c:	601a      	str	r2, [r3, #0]
	PIOD->PIO_OER |= PIO_OER_P1; // 
   8075e:	691a      	ldr	r2, [r3, #16]
   80760:	f042 0202 	orr.w	r2, r2, #2
   80764:	611a      	str	r2, [r3, #16]
	PIOD->PIO_PER |= PIO_PER_P0; // Pin 25 not_oe PD0 !OE
   80766:	681a      	ldr	r2, [r3, #0]
   80768:	f042 0201 	orr.w	r2, r2, #1
   8076c:	601a      	str	r2, [r3, #0]
	PIOD->PIO_OER |= PIO_OER_P0; // 
   8076e:	691a      	ldr	r2, [r3, #16]
   80770:	f042 0201 	orr.w	r2, r2, #1
   80774:	611a      	str	r2, [r3, #16]
	
	PIOD->PIO_CODR |= PIO_CODR_P0; //!OE low
   80776:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   80778:	f042 0201 	orr.w	r2, r2, #1
   8077c:	635a      	str	r2, [r3, #52]	; 0x34
	PIOD->PIO_CODR |= PIO_CODR_P2; //SEL low
   8077e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   80780:	f042 0204 	orr.w	r2, r2, #4
   80784:	635a      	str	r2, [r3, #52]	; 0x34
   80786:	f44f 6348 	mov.w	r3, #3200	; 0xc80
	
	//10 microsec
	for(int i = 0; i < 3200; i++){
   8078a:	3b01      	subs	r3, #1
   8078c:	d1fd      	bne.n	8078a <encoder_read+0x46>
	}
	
	uint8_t MSB = (PIOC->PIO_PDSR >> 1);
   8078e:	4b0e      	ldr	r3, [pc, #56]	; (807c8 <encoder_read+0x84>)
   80790:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	//printf("PIO_PDSR: -----%x \n\r", PIOC->PIO_PDSR);
	PIOD->PIO_SODR |= PIO_SODR_P2; //SEL high
   80792:	4a0c      	ldr	r2, [pc, #48]	; (807c4 <encoder_read+0x80>)
   80794:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80796:	f043 0304 	orr.w	r3, r3, #4
   8079a:	6313      	str	r3, [r2, #48]	; 0x30
   8079c:	f44f 6348 	mov.w	r3, #3200	; 0xc80
	
	//10 microsec
	for(int i = 0; i < 3200; i++){
   807a0:	3b01      	subs	r3, #1
   807a2:	d1fd      	bne.n	807a0 <encoder_read+0x5c>
	}
	uint8_t LSB = PIOC->PIO_PDSR >> 1;
   807a4:	4b08      	ldr	r3, [pc, #32]	; (807c8 <encoder_read+0x84>)
   807a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	
	PIOD->PIO_CODR |= PIO_CODR_P1; //!RST low
   807a8:	4b06      	ldr	r3, [pc, #24]	; (807c4 <encoder_read+0x80>)
   807aa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   807ac:	f042 0202 	orr.w	r2, r2, #2
   807b0:	635a      	str	r2, [r3, #52]	; 0x34
	PIOD->PIO_SODR |= PIO_SODR_P1; //!RST high
   807b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   807b4:	f042 0202 	orr.w	r2, r2, #2
   807b8:	631a      	str	r2, [r3, #48]	; 0x30
	PIOD->PIO_SODR |= PIO_SODR_P0; //!OE high
   807ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   807bc:	f042 0201 	orr.w	r2, r2, #1
   807c0:	631a      	str	r2, [r3, #48]	; 0x30
// 		printf("Data negative: -%d \n\r", encoder_data);
// 	}
// 	else{
// 		printf("Data positive: %d \n\r", encoder_data);
// 	}
   807c2:	4770      	bx	lr
   807c4:	400e1400 	.word	0x400e1400
   807c8:	400e1200 	.word	0x400e1200

000807cc <main>:
#include "adc_controller.h"
#include "adc_interrupt.h"
#include "dac_controller.h"

int main(void)
{
   807cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    /* Initialize the SAM system */
    SystemInit();
   807d0:	4b29      	ldr	r3, [pc, #164]	; (80878 <main+0xac>)
   807d2:	4798      	blx	r3
	WDT->WDT_MR |= 1 << 15;
   807d4:	4a29      	ldr	r2, [pc, #164]	; (8087c <main+0xb0>)
   807d6:	6853      	ldr	r3, [r2, #4]
   807d8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
   807dc:	6053      	str	r3, [r2, #4]
	configure_uart();
   807de:	4b28      	ldr	r3, [pc, #160]	; (80880 <main+0xb4>)
   807e0:	4798      	blx	r3
	can_init_def_tx_rx_mb(0x00290561); // 0x00290561 = 0b 00000000001010010000010101100001// 0b000000000000100100010001000100010
   807e2:	4828      	ldr	r0, [pc, #160]	; (80884 <main+0xb8>)
   807e4:	4b28      	ldr	r3, [pc, #160]	; (80888 <main+0xbc>)
   807e6:	4798      	blx	r3
	
	printf("hello\n\r");
   807e8:	4828      	ldr	r0, [pc, #160]	; (8088c <main+0xc0>)
   807ea:	4b29      	ldr	r3, [pc, #164]	; (80890 <main+0xc4>)
   807ec:	4798      	blx	r3
	PWM->PWM_CH_NUM[2].PWM_CMR &= ~PWM_CMR_CPOL;
	
	PIOA->PIO_ABSR |= PIO_ABSR_P5; //PIO set peripheral b on pin 5*/
	
	
	timer_init();
   807ee:	4b29      	ldr	r3, [pc, #164]	; (80894 <main+0xc8>)
   807f0:	4798      	blx	r3
	timer_change_duty(100);
   807f2:	2064      	movs	r0, #100	; 0x64
   807f4:	4b28      	ldr	r3, [pc, #160]	; (80898 <main+0xcc>)
   807f6:	4798      	blx	r3
	
	adc_init();
   807f8:	4b28      	ldr	r3, [pc, #160]	; (8089c <main+0xd0>)
   807fa:	4798      	blx	r3
	dac_init();
   807fc:	4b28      	ldr	r3, [pc, #160]	; (808a0 <main+0xd4>)
   807fe:	4798      	blx	r3
	
	
	motor_box_init();
   80800:	4b28      	ldr	r3, [pc, #160]	; (808a4 <main+0xd8>)
   80802:	4798      	blx	r3
	
	
	
	
	
	PIOA->PIO_PER |= PIO_PER_P19; //PIO Enable Register, PIO Enable
   80804:	4b28      	ldr	r3, [pc, #160]	; (808a8 <main+0xdc>)
   80806:	681a      	ldr	r2, [r3, #0]
   80808:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   8080c:	601a      	str	r2, [r3, #0]
	PIOA->PIO_OER |= PIO_OER_P19; //Output Enable Register, Output Enable
   8080e:	691a      	ldr	r2, [r3, #16]
   80810:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80814:	611a      	str	r2, [r3, #16]
	
	PIOA->PIO_PER |= PIO_PER_P20; //PIO Enable Register, PIO Enable
   80816:	681a      	ldr	r2, [r3, #0]
   80818:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   8081c:	601a      	str	r2, [r3, #0]
	PIOA->PIO_OER |= PIO_OER_P20; //Output Enable Register, Output Enable
   8081e:	691a      	ldr	r2, [r3, #16]
   80820:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   80824:	611a      	str	r2, [r3, #16]
	PIOA->PIO_OER |= PIO_OER_P9; //Output Enable Register, Output Enable*/
	volatile CAN_MESSAGE msg;
    while (1) 
    {
		
		PIOA->PIO_SODR = PIO_SODR_P19; //Set Output Data Register, Set Output Data
   80826:	461c      	mov	r4, r3
		//printf("%x ", tc->TC_CHANNEL[0].TC_SR);
		PIOA->PIO_CODR = PIO_CODR_P20; //Clear Output Data Register,
		
		
		
		move_solenoid();
   80828:	4f20      	ldr	r7, [pc, #128]	; (808ac <main+0xe0>)
		PIOA->PIO_SODR = PIO_SODR_P19; //Set Output Data Register, Set Output Data
   8082a:	f44f 2600 	mov.w	r6, #524288	; 0x80000
   8082e:	46b0      	mov	r8, r6
		PIOA->PIO_SODR = PIO_SODR_P20; //Set Output Data Register, Set Output Data
   80830:	f44f 1580 	mov.w	r5, #1048576	; 0x100000
		PIOA->PIO_SODR = PIO_SODR_P19; //Set Output Data Register, Set Output Data
   80834:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
   80838:	4b1d      	ldr	r3, [pc, #116]	; (808b0 <main+0xe4>)
		for(int i = 0; i < 1600000; i++){
   8083a:	3b01      	subs	r3, #1
   8083c:	d1fd      	bne.n	8083a <main+0x6e>
		PIOA->PIO_CODR = PIO_CODR_P19; //Clear Output Data Register, Set Output Data
   8083e:	6366      	str	r6, [r4, #52]	; 0x34
		PIOA->PIO_SODR = PIO_SODR_P20; //Set Output Data Register, Set Output Data
   80840:	6325      	str	r5, [r4, #48]	; 0x30
   80842:	4b1b      	ldr	r3, [pc, #108]	; (808b0 <main+0xe4>)
		for(int i = 0; i < 1600000; i++){
   80844:	3b01      	subs	r3, #1
   80846:	d1fd      	bne.n	80844 <main+0x78>
		PIOA->PIO_CODR = PIO_CODR_P20; //Clear Output Data Register,
   80848:	6365      	str	r5, [r4, #52]	; 0x34
		move_solenoid();
   8084a:	47b8      	blx	r7
		change_motor_speed();
   8084c:	4b19      	ldr	r3, [pc, #100]	; (808b4 <main+0xe8>)
   8084e:	4798      	blx	r3
		encoder_read();
   80850:	4b19      	ldr	r3, [pc, #100]	; (808b8 <main+0xec>)
   80852:	4798      	blx	r3
		
		
		//printf("%d",ADC->ADC_ISR);
// 		printf("adc_input : %x   \n\r", ADC->ADC_CDR[1]);
 		printf("goals : %d   \n\r", TOTAL_GOALS);
   80854:	4b19      	ldr	r3, [pc, #100]	; (808bc <main+0xf0>)
   80856:	7819      	ldrb	r1, [r3, #0]
   80858:	4819      	ldr	r0, [pc, #100]	; (808c0 <main+0xf4>)
   8085a:	4b0d      	ldr	r3, [pc, #52]	; (80890 <main+0xc4>)
   8085c:	4798      	blx	r3
		//printf("adc_input : %d ::::", ADC->ADC_LCDR & 0x00000CE4);
		
		
		if(TO_INCREMENT){
   8085e:	4b19      	ldr	r3, [pc, #100]	; (808c4 <main+0xf8>)
   80860:	781b      	ldrb	r3, [r3, #0]
   80862:	2b00      	cmp	r3, #0
   80864:	d0e6      	beq.n	80834 <main+0x68>
			printf("to_increment");
   80866:	4818      	ldr	r0, [pc, #96]	; (808c8 <main+0xfc>)
   80868:	4b09      	ldr	r3, [pc, #36]	; (80890 <main+0xc4>)
   8086a:	4798      	blx	r3
			goal_counter();
   8086c:	4b17      	ldr	r3, [pc, #92]	; (808cc <main+0x100>)
   8086e:	4798      	blx	r3
   80870:	4b17      	ldr	r3, [pc, #92]	; (808d0 <main+0x104>)
			for(int j = 0; j < 5*1600000; j++){
   80872:	3b01      	subs	r3, #1
   80874:	d1fd      	bne.n	80872 <main+0xa6>
   80876:	e7d8      	b.n	8082a <main+0x5e>
   80878:	00080529 	.word	0x00080529
   8087c:	400e1a50 	.word	0x400e1a50
   80880:	00080c29 	.word	0x00080c29
   80884:	00290561 	.word	0x00290561
   80888:	000802e5 	.word	0x000802e5
   8088c:	000816c0 	.word	0x000816c0
   80890:	00080b9d 	.word	0x00080b9d
   80894:	00080bc1 	.word	0x00080bc1
   80898:	00080c05 	.word	0x00080c05
   8089c:	00080161 	.word	0x00080161
   808a0:	00080471 	.word	0x00080471
   808a4:	000806b9 	.word	0x000806b9
   808a8:	400e0e00 	.word	0x400e0e00
   808ac:	000805cd 	.word	0x000805cd
   808b0:	00186a00 	.word	0x00186a00
   808b4:	00080651 	.word	0x00080651
   808b8:	00080745 	.word	0x00080745
   808bc:	20000452 	.word	0x20000452
   808c0:	000816c8 	.word	0x000816c8
   808c4:	20000450 	.word	0x20000450
   808c8:	000816d8 	.word	0x000816d8
   808cc:	000801bd 	.word	0x000801bd
   808d0:	007a1200 	.word	0x007a1200

000808d4 <prints>:
   808d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   808d8:	460d      	mov	r5, r1
   808da:	1e16      	subs	r6, r2, #0
   808dc:	dd48      	ble.n	80970 <prints+0x9c>
   808de:	780a      	ldrb	r2, [r1, #0]
   808e0:	2a00      	cmp	r2, #0
   808e2:	d035      	beq.n	80950 <prints+0x7c>
   808e4:	460a      	mov	r2, r1
   808e6:	2400      	movs	r4, #0
   808e8:	3401      	adds	r4, #1
   808ea:	f812 1f01 	ldrb.w	r1, [r2, #1]!
   808ee:	2900      	cmp	r1, #0
   808f0:	d1fa      	bne.n	808e8 <prints+0x14>
   808f2:	42a6      	cmp	r6, r4
   808f4:	dc2d      	bgt.n	80952 <prints+0x7e>
   808f6:	2400      	movs	r4, #0
   808f8:	f003 0202 	and.w	r2, r3, #2
   808fc:	2a00      	cmp	r2, #0
   808fe:	bf0c      	ite	eq
   80900:	f04f 0820 	moveq.w	r8, #32
   80904:	f04f 0830 	movne.w	r8, #48	; 0x30
   80908:	f013 0301 	ands.w	r3, r3, #1
   8090c:	d123      	bne.n	80956 <prints+0x82>
   8090e:	2c00      	cmp	r4, #0
   80910:	dd28      	ble.n	80964 <prints+0x90>
   80912:	4626      	mov	r6, r4
   80914:	fa5f f988 	uxtb.w	r9, r8
   80918:	4f18      	ldr	r7, [pc, #96]	; (8097c <prints+0xa8>)
   8091a:	4648      	mov	r0, r9
   8091c:	47b8      	blx	r7
   8091e:	3e01      	subs	r6, #1
   80920:	d1fb      	bne.n	8091a <prints+0x46>
   80922:	7828      	ldrb	r0, [r5, #0]
   80924:	b188      	cbz	r0, 8094a <prints+0x76>
   80926:	4f15      	ldr	r7, [pc, #84]	; (8097c <prints+0xa8>)
   80928:	47b8      	blx	r7
   8092a:	3401      	adds	r4, #1
   8092c:	f815 0f01 	ldrb.w	r0, [r5, #1]!
   80930:	2800      	cmp	r0, #0
   80932:	d1f9      	bne.n	80928 <prints+0x54>
   80934:	2e00      	cmp	r6, #0
   80936:	dd08      	ble.n	8094a <prints+0x76>
   80938:	4635      	mov	r5, r6
   8093a:	fa5f f888 	uxtb.w	r8, r8
   8093e:	4f0f      	ldr	r7, [pc, #60]	; (8097c <prints+0xa8>)
   80940:	4640      	mov	r0, r8
   80942:	47b8      	blx	r7
   80944:	3d01      	subs	r5, #1
   80946:	d1fb      	bne.n	80940 <prints+0x6c>
   80948:	4434      	add	r4, r6
   8094a:	4620      	mov	r0, r4
   8094c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   80950:	2400      	movs	r4, #0
   80952:	1b34      	subs	r4, r6, r4
   80954:	e7d0      	b.n	808f8 <prints+0x24>
   80956:	4626      	mov	r6, r4
   80958:	7828      	ldrb	r0, [r5, #0]
   8095a:	b108      	cbz	r0, 80960 <prints+0x8c>
   8095c:	2400      	movs	r4, #0
   8095e:	e7e2      	b.n	80926 <prints+0x52>
   80960:	2400      	movs	r4, #0
   80962:	e7e7      	b.n	80934 <prints+0x60>
   80964:	4626      	mov	r6, r4
   80966:	461c      	mov	r4, r3
   80968:	e7db      	b.n	80922 <prints+0x4e>
   8096a:	f04f 0820 	mov.w	r8, #32
   8096e:	e7d8      	b.n	80922 <prints+0x4e>
   80970:	f013 0401 	ands.w	r4, r3, #1
   80974:	d0f9      	beq.n	8096a <prints+0x96>
   80976:	f04f 0820 	mov.w	r8, #32
   8097a:	e7ed      	b.n	80958 <prints+0x84>
   8097c:	00080c91 	.word	0x00080c91

00080980 <printi>:
   80980:	b5f0      	push	{r4, r5, r6, r7, lr}
   80982:	b085      	sub	sp, #20
   80984:	4607      	mov	r7, r0
   80986:	b381      	cbz	r1, 809ea <printi+0x6a>
   80988:	460c      	mov	r4, r1
   8098a:	b10b      	cbz	r3, 80990 <printi+0x10>
   8098c:	2a0a      	cmp	r2, #10
   8098e:	d038      	beq.n	80a02 <printi+0x82>
   80990:	2300      	movs	r3, #0
   80992:	f88d 300f 	strb.w	r3, [sp, #15]
   80996:	2600      	movs	r6, #0
   80998:	2900      	cmp	r1, #0
   8099a:	d046      	beq.n	80a2a <printi+0xaa>
   8099c:	f10d 050f 	add.w	r5, sp, #15
   809a0:	990c      	ldr	r1, [sp, #48]	; 0x30
   809a2:	393a      	subs	r1, #58	; 0x3a
   809a4:	fbb4 f3f2 	udiv	r3, r4, r2
   809a8:	fb02 4313 	mls	r3, r2, r3, r4
   809ac:	2b09      	cmp	r3, #9
   809ae:	bfc8      	it	gt
   809b0:	185b      	addgt	r3, r3, r1
   809b2:	3330      	adds	r3, #48	; 0x30
   809b4:	f805 3d01 	strb.w	r3, [r5, #-1]!
   809b8:	fbb4 f4f2 	udiv	r4, r4, r2
   809bc:	2c00      	cmp	r4, #0
   809be:	d1f1      	bne.n	809a4 <printi+0x24>
   809c0:	b156      	cbz	r6, 809d8 <printi+0x58>
   809c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   809c4:	b11b      	cbz	r3, 809ce <printi+0x4e>
   809c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   809c8:	f013 0f02 	tst.w	r3, #2
   809cc:	d125      	bne.n	80a1a <printi+0x9a>
   809ce:	232d      	movs	r3, #45	; 0x2d
   809d0:	f805 3c01 	strb.w	r3, [r5, #-1]
   809d4:	3d01      	subs	r5, #1
   809d6:	2600      	movs	r6, #0
   809d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   809da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   809dc:	4629      	mov	r1, r5
   809de:	4638      	mov	r0, r7
   809e0:	4c14      	ldr	r4, [pc, #80]	; (80a34 <printi+0xb4>)
   809e2:	47a0      	blx	r4
   809e4:	4430      	add	r0, r6
   809e6:	b005      	add	sp, #20
   809e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   809ea:	2330      	movs	r3, #48	; 0x30
   809ec:	f88d 3004 	strb.w	r3, [sp, #4]
   809f0:	2300      	movs	r3, #0
   809f2:	f88d 3005 	strb.w	r3, [sp, #5]
   809f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   809f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   809fa:	a901      	add	r1, sp, #4
   809fc:	4c0d      	ldr	r4, [pc, #52]	; (80a34 <printi+0xb4>)
   809fe:	47a0      	blx	r4
   80a00:	e7f1      	b.n	809e6 <printi+0x66>
   80a02:	2900      	cmp	r1, #0
   80a04:	dac4      	bge.n	80990 <printi+0x10>
   80a06:	424c      	negs	r4, r1
   80a08:	2300      	movs	r3, #0
   80a0a:	f88d 300f 	strb.w	r3, [sp, #15]
   80a0e:	f10d 050f 	add.w	r5, sp, #15
   80a12:	2c00      	cmp	r4, #0
   80a14:	d0d5      	beq.n	809c2 <printi+0x42>
   80a16:	2601      	movs	r6, #1
   80a18:	e7c0      	b.n	8099c <printi+0x1c>
   80a1a:	202d      	movs	r0, #45	; 0x2d
   80a1c:	4b06      	ldr	r3, [pc, #24]	; (80a38 <printi+0xb8>)
   80a1e:	4798      	blx	r3
   80a20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80a22:	3b01      	subs	r3, #1
   80a24:	930a      	str	r3, [sp, #40]	; 0x28
   80a26:	2601      	movs	r6, #1
   80a28:	e7d6      	b.n	809d8 <printi+0x58>
   80a2a:	461e      	mov	r6, r3
   80a2c:	f10d 050f 	add.w	r5, sp, #15
   80a30:	e7d2      	b.n	809d8 <printi+0x58>
   80a32:	bf00      	nop
   80a34:	000808d5 	.word	0x000808d5
   80a38:	00080c91 	.word	0x00080c91

00080a3c <print>:
   80a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80a40:	b087      	sub	sp, #28
   80a42:	4680      	mov	r8, r0
   80a44:	780b      	ldrb	r3, [r1, #0]
   80a46:	2b00      	cmp	r3, #0
   80a48:	f000 8094 	beq.w	80b74 <print+0x138>
   80a4c:	468b      	mov	fp, r1
   80a4e:	4617      	mov	r7, r2
   80a50:	2500      	movs	r5, #0
   80a52:	4e4e      	ldr	r6, [pc, #312]	; (80b8c <print+0x150>)
   80a54:	f8df a13c 	ldr.w	sl, [pc, #316]	; 80b94 <print+0x158>
   80a58:	f8df 913c 	ldr.w	r9, [pc, #316]	; 80b98 <print+0x15c>
   80a5c:	e046      	b.n	80aec <print+0xb0>
   80a5e:	2200      	movs	r2, #0
   80a60:	e070      	b.n	80b44 <print+0x108>
   80a62:	6839      	ldr	r1, [r7, #0]
   80a64:	3704      	adds	r7, #4
   80a66:	484a      	ldr	r0, [pc, #296]	; (80b90 <print+0x154>)
   80a68:	2900      	cmp	r1, #0
   80a6a:	bf08      	it	eq
   80a6c:	4601      	moveq	r1, r0
   80a6e:	4640      	mov	r0, r8
   80a70:	47d0      	blx	sl
   80a72:	4405      	add	r5, r0
   80a74:	e035      	b.n	80ae2 <print+0xa6>
   80a76:	6839      	ldr	r1, [r7, #0]
   80a78:	3704      	adds	r7, #4
   80a7a:	2061      	movs	r0, #97	; 0x61
   80a7c:	9002      	str	r0, [sp, #8]
   80a7e:	9301      	str	r3, [sp, #4]
   80a80:	9200      	str	r2, [sp, #0]
   80a82:	2301      	movs	r3, #1
   80a84:	220a      	movs	r2, #10
   80a86:	4640      	mov	r0, r8
   80a88:	47c8      	blx	r9
   80a8a:	4405      	add	r5, r0
   80a8c:	e029      	b.n	80ae2 <print+0xa6>
   80a8e:	6839      	ldr	r1, [r7, #0]
   80a90:	3704      	adds	r7, #4
   80a92:	2061      	movs	r0, #97	; 0x61
   80a94:	9002      	str	r0, [sp, #8]
   80a96:	9301      	str	r3, [sp, #4]
   80a98:	9200      	str	r2, [sp, #0]
   80a9a:	2300      	movs	r3, #0
   80a9c:	2210      	movs	r2, #16
   80a9e:	4640      	mov	r0, r8
   80aa0:	47c8      	blx	r9
   80aa2:	4405      	add	r5, r0
   80aa4:	e01d      	b.n	80ae2 <print+0xa6>
   80aa6:	6839      	ldr	r1, [r7, #0]
   80aa8:	3704      	adds	r7, #4
   80aaa:	2041      	movs	r0, #65	; 0x41
   80aac:	9002      	str	r0, [sp, #8]
   80aae:	9301      	str	r3, [sp, #4]
   80ab0:	9200      	str	r2, [sp, #0]
   80ab2:	2300      	movs	r3, #0
   80ab4:	2210      	movs	r2, #16
   80ab6:	4640      	mov	r0, r8
   80ab8:	47c8      	blx	r9
   80aba:	4405      	add	r5, r0
   80abc:	e011      	b.n	80ae2 <print+0xa6>
   80abe:	6839      	ldr	r1, [r7, #0]
   80ac0:	3704      	adds	r7, #4
   80ac2:	2061      	movs	r0, #97	; 0x61
   80ac4:	9002      	str	r0, [sp, #8]
   80ac6:	9301      	str	r3, [sp, #4]
   80ac8:	9200      	str	r2, [sp, #0]
   80aca:	2300      	movs	r3, #0
   80acc:	220a      	movs	r2, #10
   80ace:	4640      	mov	r0, r8
   80ad0:	47c8      	blx	r9
   80ad2:	4405      	add	r5, r0
   80ad4:	e005      	b.n	80ae2 <print+0xa6>
   80ad6:	46a3      	mov	fp, r4
   80ad8:	f89b 0000 	ldrb.w	r0, [fp]
   80adc:	47b0      	blx	r6
   80ade:	3501      	adds	r5, #1
   80ae0:	465c      	mov	r4, fp
   80ae2:	f104 0b01 	add.w	fp, r4, #1
   80ae6:	7863      	ldrb	r3, [r4, #1]
   80ae8:	2b00      	cmp	r3, #0
   80aea:	d044      	beq.n	80b76 <print+0x13a>
   80aec:	2b25      	cmp	r3, #37	; 0x25
   80aee:	d1f3      	bne.n	80ad8 <print+0x9c>
   80af0:	f10b 0401 	add.w	r4, fp, #1
   80af4:	f89b 3001 	ldrb.w	r3, [fp, #1]
   80af8:	2b00      	cmp	r3, #0
   80afa:	d03c      	beq.n	80b76 <print+0x13a>
   80afc:	2b25      	cmp	r3, #37	; 0x25
   80afe:	d0ea      	beq.n	80ad6 <print+0x9a>
   80b00:	2b2d      	cmp	r3, #45	; 0x2d
   80b02:	bf06      	itte	eq
   80b04:	f10b 0402 	addeq.w	r4, fp, #2
   80b08:	2301      	moveq	r3, #1
   80b0a:	2300      	movne	r3, #0
   80b0c:	7822      	ldrb	r2, [r4, #0]
   80b0e:	2a30      	cmp	r2, #48	; 0x30
   80b10:	d105      	bne.n	80b1e <print+0xe2>
   80b12:	f043 0302 	orr.w	r3, r3, #2
   80b16:	f814 2f01 	ldrb.w	r2, [r4, #1]!
   80b1a:	2a30      	cmp	r2, #48	; 0x30
   80b1c:	d0f9      	beq.n	80b12 <print+0xd6>
   80b1e:	7821      	ldrb	r1, [r4, #0]
   80b20:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   80b24:	b2d2      	uxtb	r2, r2
   80b26:	2a09      	cmp	r2, #9
   80b28:	d899      	bhi.n	80a5e <print+0x22>
   80b2a:	2200      	movs	r2, #0
   80b2c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   80b30:	3930      	subs	r1, #48	; 0x30
   80b32:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   80b36:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   80b3a:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   80b3e:	b2c0      	uxtb	r0, r0
   80b40:	2809      	cmp	r0, #9
   80b42:	d9f3      	bls.n	80b2c <print+0xf0>
   80b44:	2973      	cmp	r1, #115	; 0x73
   80b46:	d08c      	beq.n	80a62 <print+0x26>
   80b48:	2964      	cmp	r1, #100	; 0x64
   80b4a:	d094      	beq.n	80a76 <print+0x3a>
   80b4c:	2978      	cmp	r1, #120	; 0x78
   80b4e:	d09e      	beq.n	80a8e <print+0x52>
   80b50:	2958      	cmp	r1, #88	; 0x58
   80b52:	d0a8      	beq.n	80aa6 <print+0x6a>
   80b54:	2975      	cmp	r1, #117	; 0x75
   80b56:	d0b2      	beq.n	80abe <print+0x82>
   80b58:	2963      	cmp	r1, #99	; 0x63
   80b5a:	d1c2      	bne.n	80ae2 <print+0xa6>
   80b5c:	6839      	ldr	r1, [r7, #0]
   80b5e:	3704      	adds	r7, #4
   80b60:	f88d 1014 	strb.w	r1, [sp, #20]
   80b64:	2100      	movs	r1, #0
   80b66:	f88d 1015 	strb.w	r1, [sp, #21]
   80b6a:	a905      	add	r1, sp, #20
   80b6c:	4640      	mov	r0, r8
   80b6e:	47d0      	blx	sl
   80b70:	4405      	add	r5, r0
   80b72:	e7b6      	b.n	80ae2 <print+0xa6>
   80b74:	2500      	movs	r5, #0
   80b76:	f1b8 0f00 	cmp.w	r8, #0
   80b7a:	d003      	beq.n	80b84 <print+0x148>
   80b7c:	f8d8 3000 	ldr.w	r3, [r8]
   80b80:	2200      	movs	r2, #0
   80b82:	701a      	strb	r2, [r3, #0]
   80b84:	4628      	mov	r0, r5
   80b86:	b007      	add	sp, #28
   80b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80b8c:	00080c91 	.word	0x00080c91
   80b90:	000816e8 	.word	0x000816e8
   80b94:	000808d5 	.word	0x000808d5
   80b98:	00080981 	.word	0x00080981

00080b9c <printf>:
   80b9c:	b40f      	push	{r0, r1, r2, r3}
   80b9e:	b500      	push	{lr}
   80ba0:	b083      	sub	sp, #12
   80ba2:	aa04      	add	r2, sp, #16
   80ba4:	f852 1b04 	ldr.w	r1, [r2], #4
   80ba8:	9201      	str	r2, [sp, #4]
   80baa:	2000      	movs	r0, #0
   80bac:	4b03      	ldr	r3, [pc, #12]	; (80bbc <printf+0x20>)
   80bae:	4798      	blx	r3
   80bb0:	b003      	add	sp, #12
   80bb2:	f85d eb04 	ldr.w	lr, [sp], #4
   80bb6:	b004      	add	sp, #16
   80bb8:	4770      	bx	lr
   80bba:	bf00      	nop
   80bbc:	00080a3d 	.word	0x00080a3d

00080bc0 <timer_init>:
	static Tc *tc = 0x40080000;

void timer_init(){
	
	
	PMC->PMC_PCER0 |= PMC_PCER0_PID27; //enable timer counter channel 0
   80bc0:	4a0d      	ldr	r2, [pc, #52]	; (80bf8 <timer_init+0x38>)
   80bc2:	6913      	ldr	r3, [r2, #16]
   80bc4:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
   80bc8:	6113      	str	r3, [r2, #16]
	
	PIOB->PIO_PDR |= PIO_PDR_P25; //disable io on pinb 25
   80bca:	4b0c      	ldr	r3, [pc, #48]	; (80bfc <timer_init+0x3c>)
   80bcc:	685a      	ldr	r2, [r3, #4]
   80bce:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   80bd2:	605a      	str	r2, [r3, #4]
	PIOB->PIO_ABSR |= PIO_ABSR_P25; //PIO set peripheral b on pinb 25*/
   80bd4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80bd6:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
   80bda:	671a      	str	r2, [r3, #112]	; 0x70
	
	tc->TC_CHANNEL[0].TC_CMR = 0x0009C000;
   80bdc:	f5a3 23c2 	sub.w	r3, r3, #397312	; 0x61000
   80be0:	f44f 221c 	mov.w	r2, #638976	; 0x9c000
   80be4:	605a      	str	r2, [r3, #4]
	tc->TC_CHANNEL[0].TC_RC = 0x000CD140;
   80be6:	4a06      	ldr	r2, [pc, #24]	; (80c00 <timer_init+0x40>)
   80be8:	61da      	str	r2, [r3, #28]
	
	
	tc->TC_CHANNEL[0].TC_CCR = 0x00000001; //enables the clock
   80bea:	2201      	movs	r2, #1
   80bec:	601a      	str	r2, [r3, #0]
	tc->TC_CHANNEL[0].TC_CCR |= 0x1 << 2;
   80bee:	681a      	ldr	r2, [r3, #0]
   80bf0:	f042 0204 	orr.w	r2, r2, #4
   80bf4:	601a      	str	r2, [r3, #0]
   80bf6:	4770      	bx	lr
   80bf8:	400e0600 	.word	0x400e0600
   80bfc:	400e1000 	.word	0x400e1000
   80c00:	000cd140 	.word	0x000cd140

00080c04 <timer_change_duty>:
	}
	if(dutyCycle > 100){
		dutyCycle = 100;
	}
	
	tc->TC_CHANNEL[0].TC_RA = 0x000CD140 - (0xA410 + 0x1A4*dutyCycle); // TC_RA - (min_value + dutyCycle*1prosentOfDifference)
   80c04:	2864      	cmp	r0, #100	; 0x64
   80c06:	bf28      	it	cs
   80c08:	2064      	movcs	r0, #100	; 0x64
   80c0a:	4b05      	ldr	r3, [pc, #20]	; (80c20 <timer_change_duty+0x1c>)
   80c0c:	fb03 f000 	mul.w	r0, r3, r0
   80c10:	f500 2042 	add.w	r0, r0, #794624	; 0xc2000
   80c14:	f500 6053 	add.w	r0, r0, #3376	; 0xd30
   80c18:	4b02      	ldr	r3, [pc, #8]	; (80c24 <timer_change_duty+0x20>)
   80c1a:	6158      	str	r0, [r3, #20]
   80c1c:	4770      	bx	lr
   80c1e:	bf00      	nop
   80c20:	fffffe5c 	.word	0xfffffe5c
   80c24:	40080000 	.word	0x40080000

00080c28 <configure_uart>:
   80c28:	4b16      	ldr	r3, [pc, #88]	; (80c84 <configure_uart+0x5c>)
   80c2a:	2200      	movs	r2, #0
   80c2c:	701a      	strb	r2, [r3, #0]
   80c2e:	705a      	strb	r2, [r3, #1]
   80c30:	4b15      	ldr	r3, [pc, #84]	; (80c88 <configure_uart+0x60>)
   80c32:	f44f 7140 	mov.w	r1, #768	; 0x300
   80c36:	6459      	str	r1, [r3, #68]	; 0x44
   80c38:	6059      	str	r1, [r3, #4]
   80c3a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80c3c:	6f18      	ldr	r0, [r3, #112]	; 0x70
   80c3e:	4002      	ands	r2, r0
   80c40:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   80c44:	671a      	str	r2, [r3, #112]	; 0x70
   80c46:	6659      	str	r1, [r3, #100]	; 0x64
   80c48:	f44f 7280 	mov.w	r2, #256	; 0x100
   80c4c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   80c50:	611a      	str	r2, [r3, #16]
   80c52:	f503 7300 	add.w	r3, r3, #512	; 0x200
   80c56:	21ac      	movs	r1, #172	; 0xac
   80c58:	6019      	str	r1, [r3, #0]
   80c5a:	f240 2123 	movw	r1, #547	; 0x223
   80c5e:	6219      	str	r1, [r3, #32]
   80c60:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80c64:	6059      	str	r1, [r3, #4]
   80c66:	f240 2102 	movw	r1, #514	; 0x202
   80c6a:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120
   80c6e:	f04f 31ff 	mov.w	r1, #4294967295
   80c72:	60d9      	str	r1, [r3, #12]
   80c74:	21e1      	movs	r1, #225	; 0xe1
   80c76:	6099      	str	r1, [r3, #8]
    NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
   80c78:	4904      	ldr	r1, [pc, #16]	; (80c8c <configure_uart+0x64>)
   80c7a:	600a      	str	r2, [r1, #0]
   80c7c:	2250      	movs	r2, #80	; 0x50
   80c7e:	601a      	str	r2, [r3, #0]
   80c80:	4770      	bx	lr
   80c82:	bf00      	nop
   80c84:	20000458 	.word	0x20000458
   80c88:	400e0e00 	.word	0x400e0e00
   80c8c:	e000e100 	.word	0xe000e100

00080c90 <uart_putchar>:
   80c90:	4b07      	ldr	r3, [pc, #28]	; (80cb0 <uart_putchar+0x20>)
   80c92:	695b      	ldr	r3, [r3, #20]
   80c94:	f013 0f02 	tst.w	r3, #2
   80c98:	d008      	beq.n	80cac <uart_putchar+0x1c>
   80c9a:	4b05      	ldr	r3, [pc, #20]	; (80cb0 <uart_putchar+0x20>)
   80c9c:	61d8      	str	r0, [r3, #28]
   80c9e:	461a      	mov	r2, r3
   80ca0:	6953      	ldr	r3, [r2, #20]
   80ca2:	f413 7f00 	tst.w	r3, #512	; 0x200
   80ca6:	d0fb      	beq.n	80ca0 <uart_putchar+0x10>
   80ca8:	2000      	movs	r0, #0
   80caa:	4770      	bx	lr
   80cac:	2001      	movs	r0, #1
   80cae:	4770      	bx	lr
   80cb0:	400e0800 	.word	0x400e0800

00080cb4 <UART_Handler>:
   80cb4:	b508      	push	{r3, lr}
   80cb6:	4b15      	ldr	r3, [pc, #84]	; (80d0c <UART_Handler+0x58>)
   80cb8:	695b      	ldr	r3, [r3, #20]
   80cba:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   80cbe:	d003      	beq.n	80cc8 <UART_Handler+0x14>
   80cc0:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80cc4:	4a11      	ldr	r2, [pc, #68]	; (80d0c <UART_Handler+0x58>)
   80cc6:	6011      	str	r1, [r2, #0]
   80cc8:	f013 0f01 	tst.w	r3, #1
   80ccc:	d012      	beq.n	80cf4 <UART_Handler+0x40>
   80cce:	4810      	ldr	r0, [pc, #64]	; (80d10 <UART_Handler+0x5c>)
   80cd0:	7842      	ldrb	r2, [r0, #1]
   80cd2:	1c53      	adds	r3, r2, #1
   80cd4:	4259      	negs	r1, r3
   80cd6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80cda:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   80cde:	bf58      	it	pl
   80ce0:	424b      	negpl	r3, r1
   80ce2:	7801      	ldrb	r1, [r0, #0]
   80ce4:	428b      	cmp	r3, r1
   80ce6:	d006      	beq.n	80cf6 <UART_Handler+0x42>
   80ce8:	4908      	ldr	r1, [pc, #32]	; (80d0c <UART_Handler+0x58>)
   80cea:	6988      	ldr	r0, [r1, #24]
   80cec:	4908      	ldr	r1, [pc, #32]	; (80d10 <UART_Handler+0x5c>)
   80cee:	440a      	add	r2, r1
   80cf0:	7090      	strb	r0, [r2, #2]
   80cf2:	704b      	strb	r3, [r1, #1]
   80cf4:	bd08      	pop	{r3, pc}
   80cf6:	4807      	ldr	r0, [pc, #28]	; (80d14 <UART_Handler+0x60>)
   80cf8:	4b07      	ldr	r3, [pc, #28]	; (80d18 <UART_Handler+0x64>)
   80cfa:	4798      	blx	r3
   80cfc:	4b03      	ldr	r3, [pc, #12]	; (80d0c <UART_Handler+0x58>)
   80cfe:	699a      	ldr	r2, [r3, #24]
   80d00:	4b03      	ldr	r3, [pc, #12]	; (80d10 <UART_Handler+0x5c>)
   80d02:	7859      	ldrb	r1, [r3, #1]
   80d04:	440b      	add	r3, r1
   80d06:	709a      	strb	r2, [r3, #2]
   80d08:	bd08      	pop	{r3, pc}
   80d0a:	bf00      	nop
   80d0c:	400e0800 	.word	0x400e0800
   80d10:	20000458 	.word	0x20000458
   80d14:	000816f0 	.word	0x000816f0
   80d18:	00080b9d 	.word	0x00080b9d

00080d1c <__aeabi_drsub>:
   80d1c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   80d20:	e002      	b.n	80d28 <__adddf3>
   80d22:	bf00      	nop

00080d24 <__aeabi_dsub>:
   80d24:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00080d28 <__adddf3>:
   80d28:	b530      	push	{r4, r5, lr}
   80d2a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   80d2e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   80d32:	ea94 0f05 	teq	r4, r5
   80d36:	bf08      	it	eq
   80d38:	ea90 0f02 	teqeq	r0, r2
   80d3c:	bf1f      	itttt	ne
   80d3e:	ea54 0c00 	orrsne.w	ip, r4, r0
   80d42:	ea55 0c02 	orrsne.w	ip, r5, r2
   80d46:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   80d4a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80d4e:	f000 80e2 	beq.w	80f16 <__adddf3+0x1ee>
   80d52:	ea4f 5454 	mov.w	r4, r4, lsr #21
   80d56:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   80d5a:	bfb8      	it	lt
   80d5c:	426d      	neglt	r5, r5
   80d5e:	dd0c      	ble.n	80d7a <__adddf3+0x52>
   80d60:	442c      	add	r4, r5
   80d62:	ea80 0202 	eor.w	r2, r0, r2
   80d66:	ea81 0303 	eor.w	r3, r1, r3
   80d6a:	ea82 0000 	eor.w	r0, r2, r0
   80d6e:	ea83 0101 	eor.w	r1, r3, r1
   80d72:	ea80 0202 	eor.w	r2, r0, r2
   80d76:	ea81 0303 	eor.w	r3, r1, r3
   80d7a:	2d36      	cmp	r5, #54	; 0x36
   80d7c:	bf88      	it	hi
   80d7e:	bd30      	pophi	{r4, r5, pc}
   80d80:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80d84:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80d88:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   80d8c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   80d90:	d002      	beq.n	80d98 <__adddf3+0x70>
   80d92:	4240      	negs	r0, r0
   80d94:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80d98:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   80d9c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80da0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   80da4:	d002      	beq.n	80dac <__adddf3+0x84>
   80da6:	4252      	negs	r2, r2
   80da8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   80dac:	ea94 0f05 	teq	r4, r5
   80db0:	f000 80a7 	beq.w	80f02 <__adddf3+0x1da>
   80db4:	f1a4 0401 	sub.w	r4, r4, #1
   80db8:	f1d5 0e20 	rsbs	lr, r5, #32
   80dbc:	db0d      	blt.n	80dda <__adddf3+0xb2>
   80dbe:	fa02 fc0e 	lsl.w	ip, r2, lr
   80dc2:	fa22 f205 	lsr.w	r2, r2, r5
   80dc6:	1880      	adds	r0, r0, r2
   80dc8:	f141 0100 	adc.w	r1, r1, #0
   80dcc:	fa03 f20e 	lsl.w	r2, r3, lr
   80dd0:	1880      	adds	r0, r0, r2
   80dd2:	fa43 f305 	asr.w	r3, r3, r5
   80dd6:	4159      	adcs	r1, r3
   80dd8:	e00e      	b.n	80df8 <__adddf3+0xd0>
   80dda:	f1a5 0520 	sub.w	r5, r5, #32
   80dde:	f10e 0e20 	add.w	lr, lr, #32
   80de2:	2a01      	cmp	r2, #1
   80de4:	fa03 fc0e 	lsl.w	ip, r3, lr
   80de8:	bf28      	it	cs
   80dea:	f04c 0c02 	orrcs.w	ip, ip, #2
   80dee:	fa43 f305 	asr.w	r3, r3, r5
   80df2:	18c0      	adds	r0, r0, r3
   80df4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   80df8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80dfc:	d507      	bpl.n	80e0e <__adddf3+0xe6>
   80dfe:	f04f 0e00 	mov.w	lr, #0
   80e02:	f1dc 0c00 	rsbs	ip, ip, #0
   80e06:	eb7e 0000 	sbcs.w	r0, lr, r0
   80e0a:	eb6e 0101 	sbc.w	r1, lr, r1
   80e0e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   80e12:	d31b      	bcc.n	80e4c <__adddf3+0x124>
   80e14:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   80e18:	d30c      	bcc.n	80e34 <__adddf3+0x10c>
   80e1a:	0849      	lsrs	r1, r1, #1
   80e1c:	ea5f 0030 	movs.w	r0, r0, rrx
   80e20:	ea4f 0c3c 	mov.w	ip, ip, rrx
   80e24:	f104 0401 	add.w	r4, r4, #1
   80e28:	ea4f 5244 	mov.w	r2, r4, lsl #21
   80e2c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   80e30:	f080 809a 	bcs.w	80f68 <__adddf3+0x240>
   80e34:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80e38:	bf08      	it	eq
   80e3a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   80e3e:	f150 0000 	adcs.w	r0, r0, #0
   80e42:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80e46:	ea41 0105 	orr.w	r1, r1, r5
   80e4a:	bd30      	pop	{r4, r5, pc}
   80e4c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   80e50:	4140      	adcs	r0, r0
   80e52:	eb41 0101 	adc.w	r1, r1, r1
   80e56:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80e5a:	f1a4 0401 	sub.w	r4, r4, #1
   80e5e:	d1e9      	bne.n	80e34 <__adddf3+0x10c>
   80e60:	f091 0f00 	teq	r1, #0
   80e64:	bf04      	itt	eq
   80e66:	4601      	moveq	r1, r0
   80e68:	2000      	moveq	r0, #0
   80e6a:	fab1 f381 	clz	r3, r1
   80e6e:	bf08      	it	eq
   80e70:	3320      	addeq	r3, #32
   80e72:	f1a3 030b 	sub.w	r3, r3, #11
   80e76:	f1b3 0220 	subs.w	r2, r3, #32
   80e7a:	da0c      	bge.n	80e96 <__adddf3+0x16e>
   80e7c:	320c      	adds	r2, #12
   80e7e:	dd08      	ble.n	80e92 <__adddf3+0x16a>
   80e80:	f102 0c14 	add.w	ip, r2, #20
   80e84:	f1c2 020c 	rsb	r2, r2, #12
   80e88:	fa01 f00c 	lsl.w	r0, r1, ip
   80e8c:	fa21 f102 	lsr.w	r1, r1, r2
   80e90:	e00c      	b.n	80eac <__adddf3+0x184>
   80e92:	f102 0214 	add.w	r2, r2, #20
   80e96:	bfd8      	it	le
   80e98:	f1c2 0c20 	rsble	ip, r2, #32
   80e9c:	fa01 f102 	lsl.w	r1, r1, r2
   80ea0:	fa20 fc0c 	lsr.w	ip, r0, ip
   80ea4:	bfdc      	itt	le
   80ea6:	ea41 010c 	orrle.w	r1, r1, ip
   80eaa:	4090      	lslle	r0, r2
   80eac:	1ae4      	subs	r4, r4, r3
   80eae:	bfa2      	ittt	ge
   80eb0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   80eb4:	4329      	orrge	r1, r5
   80eb6:	bd30      	popge	{r4, r5, pc}
   80eb8:	ea6f 0404 	mvn.w	r4, r4
   80ebc:	3c1f      	subs	r4, #31
   80ebe:	da1c      	bge.n	80efa <__adddf3+0x1d2>
   80ec0:	340c      	adds	r4, #12
   80ec2:	dc0e      	bgt.n	80ee2 <__adddf3+0x1ba>
   80ec4:	f104 0414 	add.w	r4, r4, #20
   80ec8:	f1c4 0220 	rsb	r2, r4, #32
   80ecc:	fa20 f004 	lsr.w	r0, r0, r4
   80ed0:	fa01 f302 	lsl.w	r3, r1, r2
   80ed4:	ea40 0003 	orr.w	r0, r0, r3
   80ed8:	fa21 f304 	lsr.w	r3, r1, r4
   80edc:	ea45 0103 	orr.w	r1, r5, r3
   80ee0:	bd30      	pop	{r4, r5, pc}
   80ee2:	f1c4 040c 	rsb	r4, r4, #12
   80ee6:	f1c4 0220 	rsb	r2, r4, #32
   80eea:	fa20 f002 	lsr.w	r0, r0, r2
   80eee:	fa01 f304 	lsl.w	r3, r1, r4
   80ef2:	ea40 0003 	orr.w	r0, r0, r3
   80ef6:	4629      	mov	r1, r5
   80ef8:	bd30      	pop	{r4, r5, pc}
   80efa:	fa21 f004 	lsr.w	r0, r1, r4
   80efe:	4629      	mov	r1, r5
   80f00:	bd30      	pop	{r4, r5, pc}
   80f02:	f094 0f00 	teq	r4, #0
   80f06:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   80f0a:	bf06      	itte	eq
   80f0c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   80f10:	3401      	addeq	r4, #1
   80f12:	3d01      	subne	r5, #1
   80f14:	e74e      	b.n	80db4 <__adddf3+0x8c>
   80f16:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80f1a:	bf18      	it	ne
   80f1c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80f20:	d029      	beq.n	80f76 <__adddf3+0x24e>
   80f22:	ea94 0f05 	teq	r4, r5
   80f26:	bf08      	it	eq
   80f28:	ea90 0f02 	teqeq	r0, r2
   80f2c:	d005      	beq.n	80f3a <__adddf3+0x212>
   80f2e:	ea54 0c00 	orrs.w	ip, r4, r0
   80f32:	bf04      	itt	eq
   80f34:	4619      	moveq	r1, r3
   80f36:	4610      	moveq	r0, r2
   80f38:	bd30      	pop	{r4, r5, pc}
   80f3a:	ea91 0f03 	teq	r1, r3
   80f3e:	bf1e      	ittt	ne
   80f40:	2100      	movne	r1, #0
   80f42:	2000      	movne	r0, #0
   80f44:	bd30      	popne	{r4, r5, pc}
   80f46:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   80f4a:	d105      	bne.n	80f58 <__adddf3+0x230>
   80f4c:	0040      	lsls	r0, r0, #1
   80f4e:	4149      	adcs	r1, r1
   80f50:	bf28      	it	cs
   80f52:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   80f56:	bd30      	pop	{r4, r5, pc}
   80f58:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   80f5c:	bf3c      	itt	cc
   80f5e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   80f62:	bd30      	popcc	{r4, r5, pc}
   80f64:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80f68:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   80f6c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   80f70:	f04f 0000 	mov.w	r0, #0
   80f74:	bd30      	pop	{r4, r5, pc}
   80f76:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80f7a:	bf1a      	itte	ne
   80f7c:	4619      	movne	r1, r3
   80f7e:	4610      	movne	r0, r2
   80f80:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   80f84:	bf1c      	itt	ne
   80f86:	460b      	movne	r3, r1
   80f88:	4602      	movne	r2, r0
   80f8a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   80f8e:	bf06      	itte	eq
   80f90:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   80f94:	ea91 0f03 	teqeq	r1, r3
   80f98:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   80f9c:	bd30      	pop	{r4, r5, pc}
   80f9e:	bf00      	nop

00080fa0 <__aeabi_ui2d>:
   80fa0:	f090 0f00 	teq	r0, #0
   80fa4:	bf04      	itt	eq
   80fa6:	2100      	moveq	r1, #0
   80fa8:	4770      	bxeq	lr
   80faa:	b530      	push	{r4, r5, lr}
   80fac:	f44f 6480 	mov.w	r4, #1024	; 0x400
   80fb0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   80fb4:	f04f 0500 	mov.w	r5, #0
   80fb8:	f04f 0100 	mov.w	r1, #0
   80fbc:	e750      	b.n	80e60 <__adddf3+0x138>
   80fbe:	bf00      	nop

00080fc0 <__aeabi_i2d>:
   80fc0:	f090 0f00 	teq	r0, #0
   80fc4:	bf04      	itt	eq
   80fc6:	2100      	moveq	r1, #0
   80fc8:	4770      	bxeq	lr
   80fca:	b530      	push	{r4, r5, lr}
   80fcc:	f44f 6480 	mov.w	r4, #1024	; 0x400
   80fd0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   80fd4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   80fd8:	bf48      	it	mi
   80fda:	4240      	negmi	r0, r0
   80fdc:	f04f 0100 	mov.w	r1, #0
   80fe0:	e73e      	b.n	80e60 <__adddf3+0x138>
   80fe2:	bf00      	nop

00080fe4 <__aeabi_f2d>:
   80fe4:	0042      	lsls	r2, r0, #1
   80fe6:	ea4f 01e2 	mov.w	r1, r2, asr #3
   80fea:	ea4f 0131 	mov.w	r1, r1, rrx
   80fee:	ea4f 7002 	mov.w	r0, r2, lsl #28
   80ff2:	bf1f      	itttt	ne
   80ff4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   80ff8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   80ffc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   81000:	4770      	bxne	lr
   81002:	f092 0f00 	teq	r2, #0
   81006:	bf14      	ite	ne
   81008:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   8100c:	4770      	bxeq	lr
   8100e:	b530      	push	{r4, r5, lr}
   81010:	f44f 7460 	mov.w	r4, #896	; 0x380
   81014:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   81018:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   8101c:	e720      	b.n	80e60 <__adddf3+0x138>
   8101e:	bf00      	nop

00081020 <__aeabi_ul2d>:
   81020:	ea50 0201 	orrs.w	r2, r0, r1
   81024:	bf08      	it	eq
   81026:	4770      	bxeq	lr
   81028:	b530      	push	{r4, r5, lr}
   8102a:	f04f 0500 	mov.w	r5, #0
   8102e:	e00a      	b.n	81046 <__aeabi_l2d+0x16>

00081030 <__aeabi_l2d>:
   81030:	ea50 0201 	orrs.w	r2, r0, r1
   81034:	bf08      	it	eq
   81036:	4770      	bxeq	lr
   81038:	b530      	push	{r4, r5, lr}
   8103a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   8103e:	d502      	bpl.n	81046 <__aeabi_l2d+0x16>
   81040:	4240      	negs	r0, r0
   81042:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   81046:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8104a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   8104e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   81052:	f43f aedc 	beq.w	80e0e <__adddf3+0xe6>
   81056:	f04f 0203 	mov.w	r2, #3
   8105a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8105e:	bf18      	it	ne
   81060:	3203      	addne	r2, #3
   81062:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   81066:	bf18      	it	ne
   81068:	3203      	addne	r2, #3
   8106a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   8106e:	f1c2 0320 	rsb	r3, r2, #32
   81072:	fa00 fc03 	lsl.w	ip, r0, r3
   81076:	fa20 f002 	lsr.w	r0, r0, r2
   8107a:	fa01 fe03 	lsl.w	lr, r1, r3
   8107e:	ea40 000e 	orr.w	r0, r0, lr
   81082:	fa21 f102 	lsr.w	r1, r1, r2
   81086:	4414      	add	r4, r2
   81088:	e6c1      	b.n	80e0e <__adddf3+0xe6>
   8108a:	bf00      	nop

0008108c <__aeabi_dmul>:
   8108c:	b570      	push	{r4, r5, r6, lr}
   8108e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   81092:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81096:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8109a:	bf1d      	ittte	ne
   8109c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   810a0:	ea94 0f0c 	teqne	r4, ip
   810a4:	ea95 0f0c 	teqne	r5, ip
   810a8:	f000 f8de 	bleq	81268 <__aeabi_dmul+0x1dc>
   810ac:	442c      	add	r4, r5
   810ae:	ea81 0603 	eor.w	r6, r1, r3
   810b2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   810b6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   810ba:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   810be:	bf18      	it	ne
   810c0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   810c4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   810c8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   810cc:	d038      	beq.n	81140 <__aeabi_dmul+0xb4>
   810ce:	fba0 ce02 	umull	ip, lr, r0, r2
   810d2:	f04f 0500 	mov.w	r5, #0
   810d6:	fbe1 e502 	umlal	lr, r5, r1, r2
   810da:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   810de:	fbe0 e503 	umlal	lr, r5, r0, r3
   810e2:	f04f 0600 	mov.w	r6, #0
   810e6:	fbe1 5603 	umlal	r5, r6, r1, r3
   810ea:	f09c 0f00 	teq	ip, #0
   810ee:	bf18      	it	ne
   810f0:	f04e 0e01 	orrne.w	lr, lr, #1
   810f4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   810f8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   810fc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   81100:	d204      	bcs.n	8110c <__aeabi_dmul+0x80>
   81102:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   81106:	416d      	adcs	r5, r5
   81108:	eb46 0606 	adc.w	r6, r6, r6
   8110c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   81110:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   81114:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   81118:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   8111c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   81120:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   81124:	bf88      	it	hi
   81126:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8112a:	d81e      	bhi.n	8116a <__aeabi_dmul+0xde>
   8112c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   81130:	bf08      	it	eq
   81132:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   81136:	f150 0000 	adcs.w	r0, r0, #0
   8113a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8113e:	bd70      	pop	{r4, r5, r6, pc}
   81140:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   81144:	ea46 0101 	orr.w	r1, r6, r1
   81148:	ea40 0002 	orr.w	r0, r0, r2
   8114c:	ea81 0103 	eor.w	r1, r1, r3
   81150:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   81154:	bfc2      	ittt	gt
   81156:	ebd4 050c 	rsbsgt	r5, r4, ip
   8115a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8115e:	bd70      	popgt	{r4, r5, r6, pc}
   81160:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81164:	f04f 0e00 	mov.w	lr, #0
   81168:	3c01      	subs	r4, #1
   8116a:	f300 80ab 	bgt.w	812c4 <__aeabi_dmul+0x238>
   8116e:	f114 0f36 	cmn.w	r4, #54	; 0x36
   81172:	bfde      	ittt	le
   81174:	2000      	movle	r0, #0
   81176:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   8117a:	bd70      	pople	{r4, r5, r6, pc}
   8117c:	f1c4 0400 	rsb	r4, r4, #0
   81180:	3c20      	subs	r4, #32
   81182:	da35      	bge.n	811f0 <__aeabi_dmul+0x164>
   81184:	340c      	adds	r4, #12
   81186:	dc1b      	bgt.n	811c0 <__aeabi_dmul+0x134>
   81188:	f104 0414 	add.w	r4, r4, #20
   8118c:	f1c4 0520 	rsb	r5, r4, #32
   81190:	fa00 f305 	lsl.w	r3, r0, r5
   81194:	fa20 f004 	lsr.w	r0, r0, r4
   81198:	fa01 f205 	lsl.w	r2, r1, r5
   8119c:	ea40 0002 	orr.w	r0, r0, r2
   811a0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   811a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   811a8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   811ac:	fa21 f604 	lsr.w	r6, r1, r4
   811b0:	eb42 0106 	adc.w	r1, r2, r6
   811b4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   811b8:	bf08      	it	eq
   811ba:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   811be:	bd70      	pop	{r4, r5, r6, pc}
   811c0:	f1c4 040c 	rsb	r4, r4, #12
   811c4:	f1c4 0520 	rsb	r5, r4, #32
   811c8:	fa00 f304 	lsl.w	r3, r0, r4
   811cc:	fa20 f005 	lsr.w	r0, r0, r5
   811d0:	fa01 f204 	lsl.w	r2, r1, r4
   811d4:	ea40 0002 	orr.w	r0, r0, r2
   811d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   811dc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   811e0:	f141 0100 	adc.w	r1, r1, #0
   811e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   811e8:	bf08      	it	eq
   811ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   811ee:	bd70      	pop	{r4, r5, r6, pc}
   811f0:	f1c4 0520 	rsb	r5, r4, #32
   811f4:	fa00 f205 	lsl.w	r2, r0, r5
   811f8:	ea4e 0e02 	orr.w	lr, lr, r2
   811fc:	fa20 f304 	lsr.w	r3, r0, r4
   81200:	fa01 f205 	lsl.w	r2, r1, r5
   81204:	ea43 0302 	orr.w	r3, r3, r2
   81208:	fa21 f004 	lsr.w	r0, r1, r4
   8120c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81210:	fa21 f204 	lsr.w	r2, r1, r4
   81214:	ea20 0002 	bic.w	r0, r0, r2
   81218:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   8121c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   81220:	bf08      	it	eq
   81222:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   81226:	bd70      	pop	{r4, r5, r6, pc}
   81228:	f094 0f00 	teq	r4, #0
   8122c:	d10f      	bne.n	8124e <__aeabi_dmul+0x1c2>
   8122e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   81232:	0040      	lsls	r0, r0, #1
   81234:	eb41 0101 	adc.w	r1, r1, r1
   81238:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8123c:	bf08      	it	eq
   8123e:	3c01      	subeq	r4, #1
   81240:	d0f7      	beq.n	81232 <__aeabi_dmul+0x1a6>
   81242:	ea41 0106 	orr.w	r1, r1, r6
   81246:	f095 0f00 	teq	r5, #0
   8124a:	bf18      	it	ne
   8124c:	4770      	bxne	lr
   8124e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   81252:	0052      	lsls	r2, r2, #1
   81254:	eb43 0303 	adc.w	r3, r3, r3
   81258:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   8125c:	bf08      	it	eq
   8125e:	3d01      	subeq	r5, #1
   81260:	d0f7      	beq.n	81252 <__aeabi_dmul+0x1c6>
   81262:	ea43 0306 	orr.w	r3, r3, r6
   81266:	4770      	bx	lr
   81268:	ea94 0f0c 	teq	r4, ip
   8126c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   81270:	bf18      	it	ne
   81272:	ea95 0f0c 	teqne	r5, ip
   81276:	d00c      	beq.n	81292 <__aeabi_dmul+0x206>
   81278:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8127c:	bf18      	it	ne
   8127e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81282:	d1d1      	bne.n	81228 <__aeabi_dmul+0x19c>
   81284:	ea81 0103 	eor.w	r1, r1, r3
   81288:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8128c:	f04f 0000 	mov.w	r0, #0
   81290:	bd70      	pop	{r4, r5, r6, pc}
   81292:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81296:	bf06      	itte	eq
   81298:	4610      	moveq	r0, r2
   8129a:	4619      	moveq	r1, r3
   8129c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   812a0:	d019      	beq.n	812d6 <__aeabi_dmul+0x24a>
   812a2:	ea94 0f0c 	teq	r4, ip
   812a6:	d102      	bne.n	812ae <__aeabi_dmul+0x222>
   812a8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   812ac:	d113      	bne.n	812d6 <__aeabi_dmul+0x24a>
   812ae:	ea95 0f0c 	teq	r5, ip
   812b2:	d105      	bne.n	812c0 <__aeabi_dmul+0x234>
   812b4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   812b8:	bf1c      	itt	ne
   812ba:	4610      	movne	r0, r2
   812bc:	4619      	movne	r1, r3
   812be:	d10a      	bne.n	812d6 <__aeabi_dmul+0x24a>
   812c0:	ea81 0103 	eor.w	r1, r1, r3
   812c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   812c8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   812cc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   812d0:	f04f 0000 	mov.w	r0, #0
   812d4:	bd70      	pop	{r4, r5, r6, pc}
   812d6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   812da:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   812de:	bd70      	pop	{r4, r5, r6, pc}

000812e0 <__aeabi_ddiv>:
   812e0:	b570      	push	{r4, r5, r6, lr}
   812e2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   812e6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   812ea:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   812ee:	bf1d      	ittte	ne
   812f0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   812f4:	ea94 0f0c 	teqne	r4, ip
   812f8:	ea95 0f0c 	teqne	r5, ip
   812fc:	f000 f8a7 	bleq	8144e <__aeabi_ddiv+0x16e>
   81300:	eba4 0405 	sub.w	r4, r4, r5
   81304:	ea81 0e03 	eor.w	lr, r1, r3
   81308:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8130c:	ea4f 3101 	mov.w	r1, r1, lsl #12
   81310:	f000 8088 	beq.w	81424 <__aeabi_ddiv+0x144>
   81314:	ea4f 3303 	mov.w	r3, r3, lsl #12
   81318:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   8131c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   81320:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   81324:	ea4f 2202 	mov.w	r2, r2, lsl #8
   81328:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   8132c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   81330:	ea4f 2600 	mov.w	r6, r0, lsl #8
   81334:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   81338:	429d      	cmp	r5, r3
   8133a:	bf08      	it	eq
   8133c:	4296      	cmpeq	r6, r2
   8133e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   81342:	f504 7440 	add.w	r4, r4, #768	; 0x300
   81346:	d202      	bcs.n	8134e <__aeabi_ddiv+0x6e>
   81348:	085b      	lsrs	r3, r3, #1
   8134a:	ea4f 0232 	mov.w	r2, r2, rrx
   8134e:	1ab6      	subs	r6, r6, r2
   81350:	eb65 0503 	sbc.w	r5, r5, r3
   81354:	085b      	lsrs	r3, r3, #1
   81356:	ea4f 0232 	mov.w	r2, r2, rrx
   8135a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8135e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   81362:	ebb6 0e02 	subs.w	lr, r6, r2
   81366:	eb75 0e03 	sbcs.w	lr, r5, r3
   8136a:	bf22      	ittt	cs
   8136c:	1ab6      	subcs	r6, r6, r2
   8136e:	4675      	movcs	r5, lr
   81370:	ea40 000c 	orrcs.w	r0, r0, ip
   81374:	085b      	lsrs	r3, r3, #1
   81376:	ea4f 0232 	mov.w	r2, r2, rrx
   8137a:	ebb6 0e02 	subs.w	lr, r6, r2
   8137e:	eb75 0e03 	sbcs.w	lr, r5, r3
   81382:	bf22      	ittt	cs
   81384:	1ab6      	subcs	r6, r6, r2
   81386:	4675      	movcs	r5, lr
   81388:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   8138c:	085b      	lsrs	r3, r3, #1
   8138e:	ea4f 0232 	mov.w	r2, r2, rrx
   81392:	ebb6 0e02 	subs.w	lr, r6, r2
   81396:	eb75 0e03 	sbcs.w	lr, r5, r3
   8139a:	bf22      	ittt	cs
   8139c:	1ab6      	subcs	r6, r6, r2
   8139e:	4675      	movcs	r5, lr
   813a0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   813a4:	085b      	lsrs	r3, r3, #1
   813a6:	ea4f 0232 	mov.w	r2, r2, rrx
   813aa:	ebb6 0e02 	subs.w	lr, r6, r2
   813ae:	eb75 0e03 	sbcs.w	lr, r5, r3
   813b2:	bf22      	ittt	cs
   813b4:	1ab6      	subcs	r6, r6, r2
   813b6:	4675      	movcs	r5, lr
   813b8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   813bc:	ea55 0e06 	orrs.w	lr, r5, r6
   813c0:	d018      	beq.n	813f4 <__aeabi_ddiv+0x114>
   813c2:	ea4f 1505 	mov.w	r5, r5, lsl #4
   813c6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   813ca:	ea4f 1606 	mov.w	r6, r6, lsl #4
   813ce:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   813d2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   813d6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   813da:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   813de:	d1c0      	bne.n	81362 <__aeabi_ddiv+0x82>
   813e0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   813e4:	d10b      	bne.n	813fe <__aeabi_ddiv+0x11e>
   813e6:	ea41 0100 	orr.w	r1, r1, r0
   813ea:	f04f 0000 	mov.w	r0, #0
   813ee:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   813f2:	e7b6      	b.n	81362 <__aeabi_ddiv+0x82>
   813f4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   813f8:	bf04      	itt	eq
   813fa:	4301      	orreq	r1, r0
   813fc:	2000      	moveq	r0, #0
   813fe:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   81402:	bf88      	it	hi
   81404:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   81408:	f63f aeaf 	bhi.w	8116a <__aeabi_dmul+0xde>
   8140c:	ebb5 0c03 	subs.w	ip, r5, r3
   81410:	bf04      	itt	eq
   81412:	ebb6 0c02 	subseq.w	ip, r6, r2
   81416:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8141a:	f150 0000 	adcs.w	r0, r0, #0
   8141e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   81422:	bd70      	pop	{r4, r5, r6, pc}
   81424:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   81428:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   8142c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   81430:	bfc2      	ittt	gt
   81432:	ebd4 050c 	rsbsgt	r5, r4, ip
   81436:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8143a:	bd70      	popgt	{r4, r5, r6, pc}
   8143c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   81440:	f04f 0e00 	mov.w	lr, #0
   81444:	3c01      	subs	r4, #1
   81446:	e690      	b.n	8116a <__aeabi_dmul+0xde>
   81448:	ea45 0e06 	orr.w	lr, r5, r6
   8144c:	e68d      	b.n	8116a <__aeabi_dmul+0xde>
   8144e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   81452:	ea94 0f0c 	teq	r4, ip
   81456:	bf08      	it	eq
   81458:	ea95 0f0c 	teqeq	r5, ip
   8145c:	f43f af3b 	beq.w	812d6 <__aeabi_dmul+0x24a>
   81460:	ea94 0f0c 	teq	r4, ip
   81464:	d10a      	bne.n	8147c <__aeabi_ddiv+0x19c>
   81466:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8146a:	f47f af34 	bne.w	812d6 <__aeabi_dmul+0x24a>
   8146e:	ea95 0f0c 	teq	r5, ip
   81472:	f47f af25 	bne.w	812c0 <__aeabi_dmul+0x234>
   81476:	4610      	mov	r0, r2
   81478:	4619      	mov	r1, r3
   8147a:	e72c      	b.n	812d6 <__aeabi_dmul+0x24a>
   8147c:	ea95 0f0c 	teq	r5, ip
   81480:	d106      	bne.n	81490 <__aeabi_ddiv+0x1b0>
   81482:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81486:	f43f aefd 	beq.w	81284 <__aeabi_dmul+0x1f8>
   8148a:	4610      	mov	r0, r2
   8148c:	4619      	mov	r1, r3
   8148e:	e722      	b.n	812d6 <__aeabi_dmul+0x24a>
   81490:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81494:	bf18      	it	ne
   81496:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8149a:	f47f aec5 	bne.w	81228 <__aeabi_dmul+0x19c>
   8149e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   814a2:	f47f af0d 	bne.w	812c0 <__aeabi_dmul+0x234>
   814a6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   814aa:	f47f aeeb 	bne.w	81284 <__aeabi_dmul+0x1f8>
   814ae:	e712      	b.n	812d6 <__aeabi_dmul+0x24a>

000814b0 <__aeabi_d2uiz>:
   814b0:	004a      	lsls	r2, r1, #1
   814b2:	d211      	bcs.n	814d8 <__aeabi_d2uiz+0x28>
   814b4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   814b8:	d211      	bcs.n	814de <__aeabi_d2uiz+0x2e>
   814ba:	d50d      	bpl.n	814d8 <__aeabi_d2uiz+0x28>
   814bc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   814c0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   814c4:	d40e      	bmi.n	814e4 <__aeabi_d2uiz+0x34>
   814c6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   814ca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   814ce:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   814d2:	fa23 f002 	lsr.w	r0, r3, r2
   814d6:	4770      	bx	lr
   814d8:	f04f 0000 	mov.w	r0, #0
   814dc:	4770      	bx	lr
   814de:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   814e2:	d102      	bne.n	814ea <__aeabi_d2uiz+0x3a>
   814e4:	f04f 30ff 	mov.w	r0, #4294967295
   814e8:	4770      	bx	lr
   814ea:	f04f 0000 	mov.w	r0, #0
   814ee:	4770      	bx	lr

000814f0 <__libc_init_array>:
   814f0:	b570      	push	{r4, r5, r6, lr}
   814f2:	4e0f      	ldr	r6, [pc, #60]	; (81530 <__libc_init_array+0x40>)
   814f4:	4d0f      	ldr	r5, [pc, #60]	; (81534 <__libc_init_array+0x44>)
   814f6:	1b76      	subs	r6, r6, r5
   814f8:	10b6      	asrs	r6, r6, #2
   814fa:	bf18      	it	ne
   814fc:	2400      	movne	r4, #0
   814fe:	d005      	beq.n	8150c <__libc_init_array+0x1c>
   81500:	3401      	adds	r4, #1
   81502:	f855 3b04 	ldr.w	r3, [r5], #4
   81506:	4798      	blx	r3
   81508:	42a6      	cmp	r6, r4
   8150a:	d1f9      	bne.n	81500 <__libc_init_array+0x10>
   8150c:	4e0a      	ldr	r6, [pc, #40]	; (81538 <__libc_init_array+0x48>)
   8150e:	4d0b      	ldr	r5, [pc, #44]	; (8153c <__libc_init_array+0x4c>)
   81510:	f000 f900 	bl	81714 <_init>
   81514:	1b76      	subs	r6, r6, r5
   81516:	10b6      	asrs	r6, r6, #2
   81518:	bf18      	it	ne
   8151a:	2400      	movne	r4, #0
   8151c:	d006      	beq.n	8152c <__libc_init_array+0x3c>
   8151e:	3401      	adds	r4, #1
   81520:	f855 3b04 	ldr.w	r3, [r5], #4
   81524:	4798      	blx	r3
   81526:	42a6      	cmp	r6, r4
   81528:	d1f9      	bne.n	8151e <__libc_init_array+0x2e>
   8152a:	bd70      	pop	{r4, r5, r6, pc}
   8152c:	bd70      	pop	{r4, r5, r6, pc}
   8152e:	bf00      	nop
   81530:	00081720 	.word	0x00081720
   81534:	00081720 	.word	0x00081720
   81538:	00081728 	.word	0x00081728
   8153c:	00081720 	.word	0x00081720

00081540 <register_fini>:
   81540:	4b02      	ldr	r3, [pc, #8]	; (8154c <register_fini+0xc>)
   81542:	b113      	cbz	r3, 8154a <register_fini+0xa>
   81544:	4802      	ldr	r0, [pc, #8]	; (81550 <register_fini+0x10>)
   81546:	f000 b805 	b.w	81554 <atexit>
   8154a:	4770      	bx	lr
   8154c:	00000000 	.word	0x00000000
   81550:	00081561 	.word	0x00081561

00081554 <atexit>:
   81554:	2300      	movs	r3, #0
   81556:	4601      	mov	r1, r0
   81558:	461a      	mov	r2, r3
   8155a:	4618      	mov	r0, r3
   8155c:	f000 b81e 	b.w	8159c <__register_exitproc>

00081560 <__libc_fini_array>:
   81560:	b538      	push	{r3, r4, r5, lr}
   81562:	4c0a      	ldr	r4, [pc, #40]	; (8158c <__libc_fini_array+0x2c>)
   81564:	4d0a      	ldr	r5, [pc, #40]	; (81590 <__libc_fini_array+0x30>)
   81566:	1b64      	subs	r4, r4, r5
   81568:	10a4      	asrs	r4, r4, #2
   8156a:	d00a      	beq.n	81582 <__libc_fini_array+0x22>
   8156c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   81570:	3b01      	subs	r3, #1
   81572:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   81576:	3c01      	subs	r4, #1
   81578:	f855 3904 	ldr.w	r3, [r5], #-4
   8157c:	4798      	blx	r3
   8157e:	2c00      	cmp	r4, #0
   81580:	d1f9      	bne.n	81576 <__libc_fini_array+0x16>
   81582:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   81586:	f000 b8cf 	b.w	81728 <_fini>
   8158a:	bf00      	nop
   8158c:	00081738 	.word	0x00081738
   81590:	00081734 	.word	0x00081734

00081594 <__retarget_lock_acquire_recursive>:
   81594:	4770      	bx	lr
   81596:	bf00      	nop

00081598 <__retarget_lock_release_recursive>:
   81598:	4770      	bx	lr
   8159a:	bf00      	nop

0008159c <__register_exitproc>:
   8159c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   815a0:	4d2c      	ldr	r5, [pc, #176]	; (81654 <__register_exitproc+0xb8>)
   815a2:	4606      	mov	r6, r0
   815a4:	6828      	ldr	r0, [r5, #0]
   815a6:	4698      	mov	r8, r3
   815a8:	460f      	mov	r7, r1
   815aa:	4691      	mov	r9, r2
   815ac:	f7ff fff2 	bl	81594 <__retarget_lock_acquire_recursive>
   815b0:	4b29      	ldr	r3, [pc, #164]	; (81658 <__register_exitproc+0xbc>)
   815b2:	681c      	ldr	r4, [r3, #0]
   815b4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   815b8:	2b00      	cmp	r3, #0
   815ba:	d03e      	beq.n	8163a <__register_exitproc+0x9e>
   815bc:	685a      	ldr	r2, [r3, #4]
   815be:	2a1f      	cmp	r2, #31
   815c0:	dc1c      	bgt.n	815fc <__register_exitproc+0x60>
   815c2:	f102 0e01 	add.w	lr, r2, #1
   815c6:	b176      	cbz	r6, 815e6 <__register_exitproc+0x4a>
   815c8:	2101      	movs	r1, #1
   815ca:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   815ce:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   815d2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   815d6:	4091      	lsls	r1, r2
   815d8:	4308      	orrs	r0, r1
   815da:	2e02      	cmp	r6, #2
   815dc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   815e0:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   815e4:	d023      	beq.n	8162e <__register_exitproc+0x92>
   815e6:	3202      	adds	r2, #2
   815e8:	f8c3 e004 	str.w	lr, [r3, #4]
   815ec:	6828      	ldr	r0, [r5, #0]
   815ee:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   815f2:	f7ff ffd1 	bl	81598 <__retarget_lock_release_recursive>
   815f6:	2000      	movs	r0, #0
   815f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   815fc:	4b17      	ldr	r3, [pc, #92]	; (8165c <__register_exitproc+0xc0>)
   815fe:	b30b      	cbz	r3, 81644 <__register_exitproc+0xa8>
   81600:	f44f 70c8 	mov.w	r0, #400	; 0x190
   81604:	f3af 8000 	nop.w
   81608:	4603      	mov	r3, r0
   8160a:	b1d8      	cbz	r0, 81644 <__register_exitproc+0xa8>
   8160c:	2000      	movs	r0, #0
   8160e:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   81612:	f04f 0e01 	mov.w	lr, #1
   81616:	6058      	str	r0, [r3, #4]
   81618:	6019      	str	r1, [r3, #0]
   8161a:	4602      	mov	r2, r0
   8161c:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81620:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   81624:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   81628:	2e00      	cmp	r6, #0
   8162a:	d0dc      	beq.n	815e6 <__register_exitproc+0x4a>
   8162c:	e7cc      	b.n	815c8 <__register_exitproc+0x2c>
   8162e:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   81632:	4301      	orrs	r1, r0
   81634:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   81638:	e7d5      	b.n	815e6 <__register_exitproc+0x4a>
   8163a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   8163e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81642:	e7bb      	b.n	815bc <__register_exitproc+0x20>
   81644:	6828      	ldr	r0, [r5, #0]
   81646:	f7ff ffa7 	bl	81598 <__retarget_lock_release_recursive>
   8164a:	f04f 30ff 	mov.w	r0, #4294967295
   8164e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81652:	bf00      	nop
   81654:	20000430 	.word	0x20000430
   81658:	00081710 	.word	0x00081710
   8165c:	00000000 	.word	0x00000000
   81660:	304e4143 	.word	0x304e4143
   81664:	73656d20 	.word	0x73656d20
   81668:	65676173 	.word	0x65676173
   8166c:	72726120 	.word	0x72726120
   81670:	64657669 	.word	0x64657669
   81674:	206e6920 	.word	0x206e6920
   81678:	2d6e6f6e 	.word	0x2d6e6f6e
   8167c:	64657375 	.word	0x64657375
   81680:	69616d20 	.word	0x69616d20
   81684:	786f626c 	.word	0x786f626c
   81688:	00000d0a 	.word	0x00000d0a
   8168c:	7373656d 	.word	0x7373656d
   81690:	20656761 	.word	0x20656761
   81694:	203a6469 	.word	0x203a6469
   81698:	0d0a6425 	.word	0x0d0a6425
   8169c:	00000000 	.word	0x00000000
   816a0:	7373656d 	.word	0x7373656d
   816a4:	20656761 	.word	0x20656761
   816a8:	61746164 	.word	0x61746164
   816ac:	6e656c20 	.word	0x6e656c20
   816b0:	3a687467 	.word	0x3a687467
   816b4:	0a642520 	.word	0x0a642520
   816b8:	0000000d 	.word	0x0000000d
   816bc:	00206425 	.word	0x00206425
   816c0:	6c6c6568 	.word	0x6c6c6568
   816c4:	000d0a6f 	.word	0x000d0a6f
   816c8:	6c616f67 	.word	0x6c616f67
   816cc:	203a2073 	.word	0x203a2073
   816d0:	20206425 	.word	0x20206425
   816d4:	000d0a20 	.word	0x000d0a20
   816d8:	695f6f74 	.word	0x695f6f74
   816dc:	6572636e 	.word	0x6572636e
   816e0:	746e656d 	.word	0x746e656d
   816e4:	00000000 	.word	0x00000000
   816e8:	6c756e28 	.word	0x6c756e28
   816ec:	0000296c 	.word	0x0000296c
   816f0:	3a525245 	.word	0x3a525245
   816f4:	52415520 	.word	0x52415520
   816f8:	58522054 	.word	0x58522054
   816fc:	66756220 	.word	0x66756220
   81700:	20726566 	.word	0x20726566
   81704:	66207369 	.word	0x66207369
   81708:	0a6c6c75 	.word	0x0a6c6c75
   8170c:	0000000d 	.word	0x0000000d

00081710 <_global_impure_ptr>:
   81710:	20000008                                ... 

00081714 <_init>:
   81714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81716:	bf00      	nop
   81718:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8171a:	bc08      	pop	{r3}
   8171c:	469e      	mov	lr, r3
   8171e:	4770      	bx	lr

00081720 <__init_array_start>:
   81720:	00081541 	.word	0x00081541

00081724 <__frame_dummy_init_array_entry>:
   81724:	00080119                                ....

00081728 <_fini>:
   81728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8172a:	bf00      	nop
   8172c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8172e:	bc08      	pop	{r3}
   81730:	469e      	mov	lr, r3
   81732:	4770      	bx	lr

00081734 <__fini_array_start>:
   81734:	000800f5 	.word	0x000800f5
